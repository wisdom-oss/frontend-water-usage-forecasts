var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ForecastEntry.html",[0,0.476,1,1.045]],["body/interfaces/ForecastEntry.html",[0,0.778,1,1.811,2,1.412,3,0.666,4,0.666,5,0.536,6,1.177,7,1.412,8,0.418,9,1.279,10,1.878,11,2.173,12,2.794,13,0.699,14,0.072,15,0.967,16,0.813,17,1.707,18,1.842,19,2.227,20,1.707,21,0.981,22,1.025,23,0.813,24,1.707,25,1.707,26,1.707,27,1.707,28,2.354,29,1.707,30,1.412,31,1.412,32,1.412,33,2.227,34,1.707,35,1.707,36,1.707,37,1.707,38,0.981,39,1.707,40,1.707,41,1.707,42,0.052,43,0.052]],["title/interfaces/ForecastResponse.html",[0,0.476,16,0.722]],["body/interfaces/ForecastResponse.html",[0,0.773,1,1.698,2,1.395,3,0.658,4,0.658,5,0.529,6,1.162,7,1.395,8,0.413,9,1.269,10,1.523,11,1.395,12,2.209,13,0.874,14,0.072,15,0.961,16,1.052,17,2.614,18,1.827,19,2.209,20,2.614,21,0.969,22,1.02,23,0.803,24,1.686,25,1.686,26,1.686,27,1.686,28,2.347,29,1.686,30,1.395,31,1.395,32,1.395,33,2.209,34,1.686,35,1.686,36,1.686,37,1.686,38,0.969,39,1.686,40,1.686,41,1.686,42,0.051,43,0.051,44,3.219]],["title/interfaces/ForecastUsage.html",[0,0.476,38,0.871]],["body/interfaces/ForecastUsage.html",[0,0.762,1,1.674,2,1.354,3,0.639,4,0.639,5,0.514,6,1.128,7,1.354,8,0.401,9,1.245,10,1.493,11,1.354,12,2.166,13,0.811,14,0.072,15,0.947,16,0.779,17,1.636,18,1.792,19,2.166,20,1.636,21,0.94,22,1.078,23,0.779,24,1.636,25,1.636,26,1.636,27,1.636,28,2.467,29,1.636,30,1.354,31,1.354,32,1.354,33,2.688,34,1.636,35,1.636,36,1.636,37,1.636,38,1.245,39,2.584,40,2.584,41,2.584,42,0.05,43,0.05]],["title/components/MapSelectViewComponent.html",[45,0.722,46,0.722]],["body/components/MapSelectViewComponent.html",[3,0.517,4,0.517,5,0.416,8,0.325,9,1.077,13,0.742,14,0.071,15,0.517,22,0.849,23,1.036,42,0.055,43,0.044,44,2.307,45,1.126,46,1.126,47,1.55,48,1.325,49,1.325,50,1.325,51,3.071,52,2.017,53,2.495,54,1.325,55,1.325,56,2.495,57,2.495,58,2.59,59,1.874,60,1.874,61,2.307,62,1.799,63,2.911,64,3.74,65,3.44,66,1.55,67,3.44,68,2.096,69,1.956,70,2.096,71,1.096,72,2.307,73,1.096,74,1.325,75,2.096,76,1.55,77,1.292,78,2.965,79,2.096,80,2.307,81,1.631,82,1.292,83,0.761,84,2.096,85,1.096,86,0.913,87,2.096,88,1.631,89,2.096,90,2.096,91,2.096,92,1.249,93,1.036,94,2.965,95,2.965,96,1.325,97,1.874,98,1.874,99,1.325,100,2.364,101,1.325,102,1.874,103,0.631,104,1.325,105,0.761,106,0.517,107,0.913,108,1.325,109,1.325]],["title/components/ResultDataViewComponent.html",[45,0.722,103,0.722]],["body/components/ResultDataViewComponent.html",[3,0.201,4,0.201,5,0.162,8,0.126,9,0.51,10,1.336,11,1.149,13,0.732,14,0.072,15,0.346,16,0.245,21,0.984,22,0.871,23,1.034,28,0.426,38,0.51,42,0.021,43,0.021,45,0.557,46,0.245,47,0.734,48,0.515,49,0.515,50,0.515,52,0.355,54,0.515,55,0.515,56,1.567,57,1.567,58,0.515,59,0.887,60,0.887,61,1.092,62,1.797,66,0.734,69,2.053,71,1.518,73,1.603,74,2.172,76,1.296,77,1.08,80,1.711,81,0.634,82,1.336,83,0.296,85,0.426,86,0.355,92,1.387,93,1.15,96,1.567,97,0.887,98,0.887,99,0.515,100,1.389,101,0.515,102,0.887,103,0.662,104,1.567,105,1.652,106,0.201,107,0.355,108,0.515,109,0.515,110,3.093,111,2.512,112,1.092,113,1.439,114,1.849,115,1.849,116,1.849,117,1.849,118,1.849,119,2.45,120,1.849,121,1.711,122,1.849,123,1.404,124,1.404,125,1.404,126,2.198,127,1.711,128,1.404,129,1.404,130,1.404,131,3.531,132,0.887,133,0.815,134,1.149,135,1.439,136,1.711,137,2.258,138,1.092,139,0.815,140,2.709,141,1.849,142,0.815,143,2.479,144,0.815,145,1.404,146,2.198,147,0.815,148,0.815,149,1.404,150,2.027,151,0.815,152,0.815,153,0.815,154,0.815,155,0.815,156,1.404,157,0.815,158,0.815,159,2.198,160,0.815,161,0.815,162,0.815,163,0.815,164,0.815,165,1.404,166,0.815,167,1.439,168,0.815,169,0.815,170,0.815,171,0.815,172,0.815,173,1.404,174,0.815,175,0.426,176,0.815,177,0.634,178,0.815,179,0.815,180,0.815,181,0.815,182,0.815,183,0.815,184,1.404,185,0.815,186,1.567,187,0.815,188,0.815,189,1.404,190,0.815,191,0.815,192,0.815,193,0.815,194,0.815,195,0.815,196,0.815,197,0.815,198,0.815,199,0.815,200,0.815,201,0.815,202,0.815,203,0.815,204,0.815,205,0.815,206,0.815,207,0.634,208,1.404,209,0.815,210,0.815,211,0.815,212,0.815,213,1.092,214,0.815,215,0.815,216,0.815,217,0.634,218,0.815,219,0.815,220,0.815,221,0.815,222,0.815,223,0.815,224,2.198,225,1.849,226,1.404,227,0.815,228,0.815,229,0.815,230,0.815,231,2.198,232,0.815,233,1.404,234,0.815,235,1.404,236,0.815,237,0.815,238,0.815,239,0.815,240,0.815,241,0.815,242,1.849,243,0.815,244,0.815,245,0.815,246,0.815,247,0.815,248,0.815,249,0.815,250,0.815,251,1.404,252,2.198,253,0.815,254,2.198,255,2.198,256,0.815,257,1.404,258,0.815,259,0.815,260,0.815,261,0.815,262,0.815,263,0.815,264,0.815,265,0.634,266,0.815,267,0.815,268,0.815,269,1.404,270,1.404,271,1.404,272,0.815,273,1.404,274,2.709,275,1.404,276,1.404,277,2.198,278,1.404,279,2.198,280,1.404,281,2.198,282,1.404,283,2.198,284,2.198,285,2.198,286,1.404,287,1.404,288,2.198,289,1.404,290,1.404,291,3.066,292,1.404,293,1.404,294,1.404,295,1.404,296,2.709,297,1.404,298,1.404,299,1.404,300,1.092,301,1.404,302,1.404]],["title/components/WaterUsageForecastsComponent.html",[45,0.722,106,0.591]],["body/components/WaterUsageForecastsComponent.html",[0,0.539,3,0.458,4,0.458,5,0.368,8,0.288,9,0.987,13,0.638,14,0.071,15,0.458,21,0.674,22,0.67,23,0.968,42,0.04,43,0.04,45,1.133,46,0.559,47,1.421,48,1.174,49,1.174,50,1.174,52,1.714,55,1.174,56,2.379,57,2.379,58,2.568,59,1.174,60,1.718,62,1.681,63,2.501,66,1.421,69,1.85,71,1.681,72,1.445,73,0.971,74,1.718,76,0.971,77,0.809,82,1.184,83,0.674,86,0.809,88,2.115,92,1.475,93,1.333,96,1.174,97,1.718,98,1.718,99,1.174,100,2.236,101,1.174,102,1.718,103,0.559,104,2.236,105,1.428,106,0.873,107,1.64,108,1.174,109,1.174,112,2.115,113,2.501,119,2.031,127,2.753,132,1.174,135,2.115,136,2.753,175,0.971,186,1.174,303,1.64,304,1.445,305,1.445,306,2.718,307,2.718,308,2.718,309,2.718,310,2.115,311,2.718,312,3.214,313,1.857,314,2.718,315,1.857,316,1.857,317,1.857,318,1.857,319,1.857,320,1.857,321,1.857,322,1.857,323,1.857,324,1.857,325,2.115,326,1.857,327,1.857,328,1.857,329,1.857,330,1.857,331,2.718,332,1.857,333,1.857]],["title/modules/WaterUsageForecastsModule.html",[334,1.515,335,1.254]],["body/modules/WaterUsageForecastsModule.html",[3,0.628,4,0.628,5,0.505,14,0.071,15,0.628,42,0.05,43,0.05,46,1.309,52,1.476,53,1.608,82,1.964,83,0.924,85,1.33,86,1.109,92,0.924,93,1.02,103,1.309,105,1.23,106,1.154,111,1.608,175,1.33,303,1.109,335,2.43,336,1.608,337,1.771,338,1.98,339,1.98,340,1.98,341,2.636,342,1.98,343,1.98,344,2.544,345,3.387,346,3.387,347,3.387,348,1.98,349,3.387,350,3.387,351,3.387,352,2.544,353,2.544,354,3.387,355,3.387,356,2.544,357,2.544,358,3.387,359,2.544,360,2.544]],["title/injectables/WaterUsageForecastsService.html",[134,1.254,361,1.254]],["body/injectables/WaterUsageForecastsService.html",[3,0.511,4,0.511,5,0.411,8,0.321,10,1.281,13,0.738,14,0.072,15,0.511,16,0.623,18,2.055,21,1.241,22,1.007,23,0.885,42,0.043,43,0.043,62,1.537,66,1.537,69,1.537,71,1.537,73,1.083,82,1.829,83,0.752,85,1.083,86,0.902,92,1.068,93,1.183,105,1.068,107,0.902,119,1.858,121,1.612,132,1.858,134,1.537,137,3.267,138,2.288,150,2.352,167,1.612,175,1.083,177,1.612,186,1.309,207,1.612,213,2.66,303,1.489,305,1.612,310,2.288,325,2.288,361,1.537,362,2.071,363,1.309,364,2.94,365,2.94,366,3.418,367,2.071,368,3.721,369,2.071,370,2.94,371,2.071,372,3.418,373,3.418,374,3.418,375,3.418,376,2.071,377,2.071,378,3.721,379,2.94,380,2.94,381,2.071,382,2.071,383,2.071,384,1.309,385,2.071,386,2.071,387,2.071,388,2.071,389,2.071,390,2.071,391,2.071,392,2.071,393,2.288,394,2.071,395,2.071,396,2.071,397,2.071,398,2.071,399,2.071,400,2.071,401,2.071]],["title/coverage.html",[402,2.533]],["body/coverage.html",[0,0.793,1,1.226,5,0.558,6,1.742,7,2.091,13,0.558,14,0.07,16,0.847,38,1.022,42,0.053,43,0.053,45,1.204,46,0.847,51,2.189,52,1.576,53,1.778,54,2.286,93,1.204,103,0.847,105,1.314,106,0.694,110,2.189,111,1.778,134,1.471,265,3.478,303,1.742,304,2.189,361,1.471,363,2.286,384,1.778,393,2.189,402,2.189,403,2.813,404,2.813,405,2.813,406,3.617,407,3.617,408,2.813,409,2.813,410,2.813,411,2.813,412,2.813,413,3.617,414,2.813,415,2.189,416,2.189,417,2.189,418,2.813,419,2.813,420,2.813,421,2.813]],["title/dependencies.html",[337,1.505,422,2.011]],["body/dependencies.html",[14,0.069,42,0.062,43,0.062,83,1.311,337,2.204,348,2.808,423,3.609,424,3.609,425,3.609,426,4.215]],["title/miscellaneous/enumerations.html",[427,1.051,428,2.24]],["body/miscellaneous/enumerations.html",[6,1.517,8,0.539,14,0.068,30,2.157,31,2.157,32,2.157,42,0.061,43,0.061,77,1.916,150,2.608,427,1.82,428,2.708,429,3.48,430,4.126]],["title/index.html",[8,0.371,431,1.866]],["body/index.html",[2,1.668,14,0.068,42,0.058,43,0.058,46,1.275,47,1.668,103,1.275,106,1.153,300,3.046,334,2.016,335,2.486,337,2.047,338,2.482,339,2.482,340,2.482,341,3.046,342,2.482,343,2.482,361,1.668,431,2.482,432,3.915]],["title/modules.html",[336,2.057]],["body/modules.html",[14,0.063,42,0.063,43,0.063,335,1.935,336,2.338,433,3.7,434,3.7,435,3.7,436,3.7]],["title/miscellaneous/variables.html",[427,1.051,437,2.24]],["body/miscellaneous/variables.html",[0,0.609,8,0.475,13,0.758,14,0.07,22,0.757,42,0.056,43,0.056,76,1.998,77,1.665,92,1.512,93,1.349,106,0.757,107,1.814,217,2.387,303,1.337,334,1.939,363,2.415,384,2.415,415,2.387,416,2.974,417,3.239,427,1.604,437,2.387,438,3.068,439,3.068,440,3.068,441,3.068,442,3.068,443,3.068,444,3.068,445,3.068,446,3.068,447,3.068,448,3.068]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":265,"title":{},"body":{"components/ResultDataViewComponent.html":{},"coverage.html":{}}}],["0/1",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":300,"title":{},"body":{"components/ResultDataViewComponent.html":{},"index.html":{}}}],["1.5",{"_index":245,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["1/1",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["12345",{"_index":277,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["13.2.0",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":263,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["2.3.0",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":432,"title":{},"body":{"index.html":{}}}],["33",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["5443ba",{"_index":219,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["a9c940",{"_index":221,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["accessors",{"_index":130,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["accumulations",{"_index":17,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["activatedroute",{"_index":136,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["actual_component",{"_index":109,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["agriculture",{"_index":209,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["amounts",{"_index":34,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["angular/common",{"_index":348,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":381,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["angular/core",{"_index":83,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":175,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["api.ts",{"_index":416,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_url",{"_index":384,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":395,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["areacomponents",{"_index":115,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["ba4c43",{"_index":216,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["backgroundcolor",{"_index":248,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["bcd9e0",{"_index":214,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["blue",{"_index":236,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["boolean",{"_index":144,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["bordercolor",{"_index":231,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["borderskipped",{"_index":246,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["borderwidth",{"_index":244,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["break",{"_index":235,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["browse",{"_index":436,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":433,"title":{},"body":{"modules.html":{}}}],["businesses",{"_index":213,"title":{},"body":{"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["case",{"_index":233,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["catch(console.error",{"_index":200,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["change",{"_index":323,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["chart",{"_index":267,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chart.getdatasetmeta(item.datasetindex",{"_index":270,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chart.getdatasetmeta(item.datasetindex).hidden",{"_index":269,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chart.js/auto",{"_index":181,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chart.update",{"_index":272,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chartdata",{"_index":141,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chartevent",{"_index":146,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chartlegendfilter",{"_index":123,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chartlegendfilter(item",{"_index":139,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chartlegendonclick",{"_index":124,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chartlegendonclick(event",{"_index":145,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["chartmodule",{"_index":354,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["check",{"_index":320,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["class",{"_index":86,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["cluster_waterusageforecastsmodule",{"_index":338,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["cluster_waterusageforecastsmodule_declarations",{"_index":339,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["cluster_waterusageforecastsmodule_exports",{"_index":340,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["colormap",{"_index":208,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["common",{"_index":85,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["commonmodule",{"_index":347,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["component",{"_index":45,"title":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"coverage.html":{}}}],["component[1",{"_index":302,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["component_template",{"_index":101,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["components",{"_index":47,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"index.html":{}}}],["console.log([event",{"_index":266,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["const",{"_index":207,"title":{},"body":{"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["constructor",{"_index":132,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["constructor(http",{"_index":367,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["constructor(private",{"_index":319,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["constructor(route",{"_index":313,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["constructor(service",{"_index":133,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["consumerareadata",{"_index":116,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["consumergroup",{"_index":18,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["consumergroupdata",{"_index":117,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["content",{"_index":394,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["context",{"_index":398,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["core",{"_index":447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["correct",{"_index":326,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["coverage",{"_index":402,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["data",{"_index":105,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["data.areas",{"_index":299,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data.branches",{"_index":301,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data.consumer",{"_index":297,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data.datasets.length",{"_index":262,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["datasets",{"_index":251,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["de_de",{"_index":444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":345,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["default",{"_index":76,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":69,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["dependencies",{"_index":337,"title":{"dependencies.html":{}},"body":{"modules/WaterUsageForecastsModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":305,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["didfinish",{"_index":118,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["directive",{"_index":99,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["directives",{"_index":108,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["display",{"_index":325,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["displaying",{"_index":306,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["displayname",{"_index":39,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["doc",{"_index":318,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["documentation",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":49,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["e02abf",{"_index":223,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["ein",{"_index":281,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["eine",{"_index":274,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["element",{"_index":98,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["en_us",{"_index":445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end",{"_index":35,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["endyear",{"_index":40,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["entrycomponent",{"_index":442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumerations",{"_index":428,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equation",{"_index":26,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["event",{"_index":148,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["export",{"_index":15,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["exports",{"_index":346,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["extract",{"_index":324,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["false",{"_index":80,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["farming_forestry_fishing_industry",{"_index":374,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["fetchdata",{"_index":125,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["fetchdata(key",{"_index":149,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["fetchforecastdata",{"_index":366,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["fetchforecastdata(key",{"_index":371,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["fisheries",{"_index":211,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["flat",{"_index":257,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["float",{"_index":27,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["forecast",{"_index":10,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecastentry",{"_index":1,"title":{"interfaces/ForecastEntry.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"coverage.html":{}}}],["forecastmodel",{"_index":372,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["forecastresponse",{"_index":16,"title":{"interfaces/ForecastResponse.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["forecastresponse[\"accumulations",{"_index":206,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecastresponse[\"partials\"][0][\"consumergroup",{"_index":24,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["forecastresponse[\"partials\"][0][\"referenceusages",{"_index":37,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["forecasts",{"_index":107,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["forecasts.component",{"_index":356,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["forecasts.component.html",{"_index":311,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["forecasts.component.ts",{"_index":304,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{},"coverage.html":{}}}],["forecasts.component.ts:16",{"_index":316,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["forecasts.component.ts:18",{"_index":314,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["forecasts.component.ts:22",{"_index":315,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["forecasts.display.loading",{"_index":401,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["forecasts.map",{"_index":94,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["forecasts.module.ts",{"_index":344,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["forecasts.parameter",{"_index":290,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.parameter.linear",{"_index":292,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.parameter.logarithmic",{"_index":293,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.parameter.polynomial",{"_index":294,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.result",{"_index":296,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.service",{"_index":174,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.service.ts",{"_index":363,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecasts.service.ts:18",{"_index":369,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["forecasts.service.ts:25",{"_index":376,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["forecasttype",{"_index":150,"title":{},"body":{"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["forecasttype.linear",{"_index":189,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecastusage",{"_index":38,"title":{"interfaces/ForecastUsage.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"coverage.html":{}}}],["forestry",{"_index":210,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["function",{"_index":227,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["gemeinde",{"_index":285,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["getmethod",{"_index":169,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["green",{"_index":212,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["groups",{"_index":298,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["headers",{"_index":392,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["household",{"_index":215,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["households_and_small_businesses",{"_index":373,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["html",{"_index":97,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["http",{"_index":370,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["httpclient",{"_index":368,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["httpcontext",{"_index":379,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["httpheaders",{"_index":380,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["identifier",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":112,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["import",{"_index":82,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["imported",{"_index":87,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["imports",{"_index":360,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["infinity",{"_index":226,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["informationen",{"_index":273,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["inject",{"_index":448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":361,"title":{"injectables/WaterUsageForecastsService.html":{}},"body":{"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"index.html":{}}}],["injectables",{"_index":362,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["institution",{"_index":218,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["interact",{"_index":364,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/WaterUsageForecastsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"index.html":{}}}],["internal",{"_index":190,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["invalid",{"_index":330,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["item",{"_index":143,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["item.linewidth",{"_index":264,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["json",{"_index":397,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["key",{"_index":21,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["key.length",{"_index":328,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["key].flat",{"_index":333,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["keys",{"_index":63,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["label",{"_index":237,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["labels",{"_index":261,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["landkreis",{"_index":284,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["legend",{"_index":96,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["legend.chart",{"_index":268,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["legend.legenditems.length).hidden",{"_index":271,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["legenditem",{"_index":140,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["lib",{"_index":57,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["linear",{"_index":31,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"miscellaneous/enumerations.html":{}}}],["literal",{"_index":44,"title":{},"body":{"interfaces/ForecastResponse.html":{},"components/MapSelectViewComponent.html":{}}}],["logarithmic",{"_index":30,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"miscellaneous/enumerations.html":{}}}],["m",{"_index":173,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["map",{"_index":58,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["map(el",{"_index":254,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["mapcomponent",{"_index":84,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["mapcomponent.resolution",{"_index":78,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["mapselection",{"_index":67,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["mapselection(selection",{"_index":68,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["mapselectviewcomponent",{"_index":46,"title":{"components/MapSelectViewComponent.html":{}},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{}}}],["mapusage(el",{"_index":255,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["mapusage(usage",{"_index":228,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["matching",{"_index":43,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["math.max(usage.endyear",{"_index":230,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["math.min(usage.startyear",{"_index":229,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["maxyear",{"_index":225,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["metadata",{"_index":55,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["method",{"_index":131,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["method(m",{"_index":193,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["methode",{"_index":289,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["methods",{"_index":66,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["middle",{"_index":247,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["minyear",{"_index":224,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["miscellaneous",{"_index":427,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":329,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["model",{"_index":29,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["module",{"_index":334,"title":{"modules/WaterUsageForecastsModule.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":336,"title":{"modules.html":{}},"body":{"modules/WaterUsageForecastsModule.html":{},"modules.html":{}}}],["municipal",{"_index":19,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["name",{"_index":23,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["new",{"_index":393,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["ngmodule",{"_index":349,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["ngondestroy",{"_index":126,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["ngoninit",{"_index":127,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["ngx",{"_index":352,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["null",{"_index":159,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["number",{"_index":28,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{}}}],["object",{"_index":252,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["object.assign",{"_index":198,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["observable",{"_index":378,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["ondestroy",{"_index":114,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["oninit",{"_index":113,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["oowv",{"_index":279,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["optional",{"_index":62,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["out",{"_index":343,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["overview",{"_index":431,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":422,"title":{"dependencies.html":{}},"body":{}}],["parameter",{"_index":286,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["parameters",{"_index":71,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["partials",{"_index":20,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["path",{"_index":440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["peer",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["pipe(takewhile",{"_index":183,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["polynomial",{"_index":32,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"miscellaneous/enumerations.html":{}}}],["postleitzahl",{"_index":276,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["prettyprintnum",{"_index":178,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["private",{"_index":119,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["prognosemodell",{"_index":287,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["promise",{"_index":165,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["provided",{"_index":309,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["providedin",{"_index":385,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["providing",{"_index":365,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["public",{"_index":217,"title":{},"body":{"components/ResultDataViewComponent.html":{},"miscellaneous/variables.html":{}}}],["public_institutions",{"_index":375,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["query",{"_index":321,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["queryparams",{"_index":197,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["re",{"_index":191,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["record",{"_index":12,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["red",{"_index":234,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["reference",{"_index":11,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{}}}],["referenceusages",{"_index":25,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["region",{"_index":283,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["regionalschlüssel",{"_index":278,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["regression",{"_index":288,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["regressionmethod",{"_index":120,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["relativeto",{"_index":195,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["request",{"_index":307,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["reset",{"_index":342,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["resolution",{"_index":64,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["response",{"_index":121,"title":{},"body":{"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["response.ts",{"_index":7,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"coverage.html":{}}}],["responsetype",{"_index":396,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["result",{"_index":104,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["resultdataviewcomponent",{"_index":103,"title":{"components/ResultDataViewComponent.html":{}},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{}}}],["results",{"_index":42,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":186,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["returns",{"_index":73,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["root",{"_index":386,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["route",{"_index":135,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["router",{"_index":137,"title":{},"body":{"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["routermodule",{"_index":350,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["rxjs",{"_index":177,"title":{},"body":{"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["scopes",{"_index":441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":52,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["select.get",{"_index":95,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selectedview",{"_index":312,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["selection",{"_index":72,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["selection.keys",{"_index":89,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selection.keys.length",{"_index":91,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selectionready",{"_index":65,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selector",{"_index":56,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["server",{"_index":310,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["service",{"_index":138,"title":{},"body":{"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["set",{"_index":192,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["set(use_api_url",{"_index":399,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["set(use_loader",{"_index":400,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["setmethod(m",{"_index":171,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["small",{"_index":220,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["src/.../forecast",{"_index":429,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../public",{"_index":439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../water",{"_index":438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/forecast",{"_index":6,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/views/map",{"_index":51,"title":{},"body":{"components/MapSelectViewComponent.html":{},"coverage.html":{}}}],["src/lib/views/result",{"_index":110,"title":{},"body":{"components/ResultDataViewComponent.html":{},"coverage.html":{}}}],["src/lib/water",{"_index":303,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/public",{"_index":415,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stadt",{"_index":275,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["start",{"_index":36,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["startyear",{"_index":41,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["statements",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":22,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["stringtocolor",{"_index":179,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["stringtocolor(usage.displayname",{"_index":249,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["subscribe(({key",{"_index":185,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["subscribe(data",{"_index":203,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["subscribequery",{"_index":122,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["support",{"_index":434,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":435,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":232,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["table",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["takewhile",{"_index":176,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["teilgebeit",{"_index":282,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["teilgebiet",{"_index":280,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["template",{"_index":48,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["templateurl",{"_index":60,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["this.consumerareadata",{"_index":258,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.consumergroupdata",{"_index":250,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.fetchdata(key",{"_index":188,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.http.get(url.tostring",{"_index":391,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["this.key",{"_index":187,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.keys",{"_index":88,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["this.route",{"_index":196,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.route.queryparams",{"_index":182,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.route.queryparams.subscribe(({key",{"_index":327,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["this.route.snapshot.queryparams",{"_index":199,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.route.snapshot.queryparams[\"method",{"_index":201,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.router.navigate",{"_index":194,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.router.parseurl(`${api_url}/${forecastmodel",{"_index":388,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["this.selectedview",{"_index":331,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["this.selectionready",{"_index":90,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["this.service.fetchforecastdata(key",{"_index":202,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.subscribequery",{"_index":184,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.updateareacomponents(data.partials",{"_index":205,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.updategraphs(data.accumulations",{"_index":204,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["tick",{"_index":180,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["todo",{"_index":317,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["tourism",{"_index":222,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["translate",{"_index":291,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["translate/core",{"_index":353,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["translatemodule",{"_index":351,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["translations",{"_index":443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":50,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["true",{"_index":167,"title":{},"body":{"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["tslib",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.ts",{"_index":430,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":332,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["updateareacomponents",{"_index":128,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["updateareacomponents(forecast",{"_index":154,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["updategraphs",{"_index":129,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["updategraphs(forecast",{"_index":156,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["upon",{"_index":322,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["url",{"_index":387,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["url.queryparams[\"consumergroup",{"_index":389,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["url.queryparams[\"key",{"_index":390,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["usage",{"_index":93,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usage.displayname",{"_index":238,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["usage.startyear",{"_index":241,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["usage.usages.map((val",{"_index":239,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["usages",{"_index":33,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastUsage.html":{}}}],["use_api_url",{"_index":382,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["use_loader",{"_index":383,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["val",{"_index":243,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["value",{"_index":77,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values(forecast.consumergroup.forecast",{"_index":256,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["values(forecast.consumergroup.reference",{"_index":253,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["values(forecast.municipal.forecast",{"_index":260,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["values(forecast.municipal.reference",{"_index":259,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["var",{"_index":100,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["variable",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":437,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":59,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["view'},{'name",{"_index":102,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["view.component",{"_index":358,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["view.component.html",{"_index":61,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["view.component.ts",{"_index":54,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:11",{"_index":79,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:128",{"_index":155,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:13",{"_index":75,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:136",{"_index":142,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:142",{"_index":147,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:15",{"_index":81,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["view.component.ts:17",{"_index":70,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:23",{"_index":166,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:24",{"_index":162,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:26",{"_index":161,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:27",{"_index":160,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:28",{"_index":158,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:30",{"_index":163,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:31",{"_index":168,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:33",{"_index":153,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:43",{"_index":152,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:48",{"_index":164,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:49",{"_index":172,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:59",{"_index":170,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:63",{"_index":151,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:71",{"_index":157,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view/map",{"_index":53,"title":{},"body":{"components/MapSelectViewComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["view/result",{"_index":111,"title":{},"body":{"components/ResultDataViewComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["views/map",{"_index":357,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["views/result",{"_index":359,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["void",{"_index":74,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{}}}],["water",{"_index":92,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["waterusageforecastscomponent",{"_index":106,"title":{"components/WaterUsageForecastsComponent.html":{}},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["waterusageforecastsmodule",{"_index":335,"title":{"modules/WaterUsageForecastsModule.html":{}},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{},"modules.html":{}}}],["waterusageforecastsservice",{"_index":134,"title":{"injectables/WaterUsageForecastsService.html":{}},"body":{"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["well",{"_index":308,"title":{},"body":{"components/WaterUsageForecastsComponent.html":{}}}],["wisdom",{"_index":446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdominterface",{"_index":417,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdommodule",{"_index":355,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["x",{"_index":240,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["y",{"_index":242,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["yes",{"_index":377,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["zeitraum",{"_index":295,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["zoom",{"_index":341,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ForecastEntry.html":{"url":"interfaces/ForecastEntry.html","title":"interface - ForecastEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/forecast-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            forecast\n                                        \n                                \n                                \n                                        \n                                            reference\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        forecast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forecast:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ForecastResponse {\n  accumulations: {\n    consumerGroup: ForecastEntry,\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastResponse.html":{"url":"interfaces/ForecastResponse.html","title":"interface - ForecastResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/forecast-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accumulations\n                                        \n                                \n                                \n                                        \n                                            partials\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accumulations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accumulations:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        partials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        partials:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ForecastResponse {\n  accumulations: {\n    consumerGroup: ForecastEntry,\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastUsage.html":{"url":"interfaces/ForecastUsage.html","title":"interface - ForecastUsage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastUsage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/forecast-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            endYear\n                                        \n                                \n                                \n                                        \n                                            startYear\n                                        \n                                \n                                \n                                        \n                                            usages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ForecastResponse {\n  accumulations: {\n    consumerGroup: ForecastEntry,\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapSelectViewComponent.html":{"url":"components/MapSelectViewComponent.html","title":"component - MapSelectViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapSelectViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/views/map-select-view/map-select-view.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-map-select-view\n            \n\n\n\n\n            \n                templateUrl\n                ./map-select-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                keys\n                            \n                            \n                                Resolution\n                            \n                            \n                                selectionReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mapSelection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mapSelection\n                        \n                    \n                \n            \n            \n                \nmapSelection(selection: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/map-select-view/map-select-view.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        keys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/map-select-view/map-select-view.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Resolution\n                        \n                    \n                \n            \n                \n                    \n                        Default value : MapComponent.Resolution\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/map-select-view/map-select-view.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/map-select-view/map-select-view.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from \"@angular/core\";\nimport {MapComponent} from \"common\";\n\n@Component({\n  selector: 'lib-map-select-view',\n  templateUrl: './map-select-view.component.html'\n})\nexport class MapSelectViewComponent {\n\n  // imported resolution from the map component\n  Resolution = MapComponent.Resolution;\n\n  keys?: string[];\n\n  selectionReady = false;\n\n  mapSelection(\n    selection: {keys: string[]}\n  ) {\n    this.keys = selection.keys;\n    this.selectionReady = !!selection.keys.length;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n  \n    \n      \n        \n      \n      water-usage-forecasts.map-select.get-results\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        water-usage-forecasts.map-select.get-results      '\n    var COMPONENTS = [{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'WaterUsageForecastsComponent', 'selector': 'lib-water-usage-forecasts'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapSelectViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultDataViewComponent.html":{"url":"components/ResultDataViewComponent.html","title":"component - ResultDataViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResultDataViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/views/result-data-view/result-data-view.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-result-data-view\n            \n\n\n\n\n            \n                templateUrl\n                ./result-data-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                areaComponents\n                            \n                            \n                                consumerAreaData\n                            \n                            \n                                consumerGroupData\n                            \n                            \n                                didFinish\n                            \n                            \n                                    Private\n                                key\n                            \n                            \n                                regressionMethod\n                            \n                            \n                                    Optional\n                                response\n                            \n                            \n                                    Private\n                                subscribeQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chartLegendFilter\n                            \n                            \n                                chartLegendOnClick\n                            \n                            \n                                    Private\n                                fetchData\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                updateAreaComponents\n                            \n                            \n                                    Private\n                                updateGraphs\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    method\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: WaterUsageForecastsService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        WaterUsageForecastsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartLegendFilter\n                        \n                    \n                \n            \n            \n                \nchartLegendFilter(item: LegendItem, data: ChartData)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            LegendItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            ChartData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartLegendOnClick\n                        \n                    \n                \n            \n            \n                \nchartLegendOnClick(event: ChartEvent, item: LegendItem, legend: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            ChartEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            LegendItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    legend\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        fetchData\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchData(key: string | string[], method: ForecastType)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    method\n                                    \n                                                ForecastType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateAreaComponents\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAreaComponents(forecast)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    forecast\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateGraphs\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGraphs(forecast)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    forecast\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        areaComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumerAreaData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumerGroupData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        didFinish\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        regressionMethod\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ForecastType\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        response\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscribeQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        method\n                    \n                \n\n                \n                    \n                        getmethod()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:59\n                                \n                            \n\n                \n                    \n                        setmethod(m: ForecastType)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:49\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            m\n                                                    \n                                                            \n                                                                            ForecastType\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from \"@angular/core\";\n\nimport {ForecastType} from \"../../forecast-type\";\nimport {WaterUsageForecastsService} from \"../../water-usage-forecasts.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {ForecastResponse, ForecastUsage} from \"../../forecast-response\";\nimport {takeWhile} from \"rxjs\";\nimport {prettyPrintNum, stringToColor} from \"common\";\nimport {ChartData, ChartEvent, LegendItem, Tick} from \"chart.js/auto\";\n\n@Component({\n  selector: 'lib-result-data-view',\n  templateUrl: './result-data-view.component.html'\n})\nexport class ResultDataViewComponent implements OnInit, OnDestroy {\n\n  constructor(\n    private service: WaterUsageForecastsService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  response?: Promise;\n  didFinish = false;\n\n  consumerGroupData: any = null;\n  consumerAreaData: any = null;\n  areaComponents?: [string, string][];\n\n  private key!: string | string[];\n  private subscribeQuery = true;\n\n  ngOnInit(): void {\n    this.route.queryParams\n      .pipe(takeWhile(() => this.subscribeQuery))\n      .subscribe(({key, method}) => {\n        if (!key) return;\n        this.key = key;\n        this.fetchData(key, method ?? ForecastType.LINEAR);\n      })\n  }\n\n  ngOnDestroy(): void {\n    this.subscribeQuery = false;\n  }\n\n  /** @internal just a re-export of the type */\n  regressionMethod = ForecastType;\n  set method(m: ForecastType) {\n     this.router.navigate([], {\n       relativeTo: this.route,\n       queryParams: Object.assign(\n         {},\n         this.route.snapshot.queryParams,\n         {method: m}\n       )\n     }).catch(console.error);\n  }\n  get method() {\n    return this.route.snapshot.queryParams[\"method\"] ?? ForecastType.LINEAR;\n  }\n\n  private fetchData(key: string | string[], method: ForecastType): void {\n    this.service.fetchForecastData(key, method)\n      .subscribe(data => {\n        this.updateGraphs(data.accumulations);\n        this.updateAreaComponents(data.partials);\n      });\n  }\n\n  private updateGraphs(forecast: ForecastResponse[\"accumulations\"]): void {\n    const colorMap = {\n      \"Agriculture, Forestry, Fisheries\": \"green\",\n      \"Businesses\": \"#bcd9e0\",\n      \"Household\": \"#ba4c43\",\n      \"Public Institution\": \"#5443ba\",\n      \"Small Businesses\": \"#a9c940\",\n      \"Tourism\": \"#e02abf\"\n    }\n    let [minYear, maxYear] = [Infinity, -Infinity];\n    function mapUsage(usage: ForecastUsage, type: \"forecast\" | \"reference\") {\n      minYear = Math.min(usage.startYear, minYear);\n      maxYear = Math.max(usage.endYear, maxYear);\n      let borderColor = \"\";\n      switch (type) {\n        case \"forecast\":\n          borderColor = \"red\";\n          break;\n        case \"reference\":\n          borderColor = \"blue\";\n          break;\n      }\n      return {\n        label: usage.displayName,\n        data: usage.usages.map((val, i) => ({x: i + usage.startYear, y: val})),\n        borderWidth: 1.5,\n        borderSkipped: \"middle\",\n        borderColor,\n        backgroundColor: stringToColor(usage.displayName, colorMap)\n      }\n    }\n    this.consumerGroupData = {\n      datasets: [\n        Object\n          .values(forecast.consumerGroup.reference)\n          .map(el => mapUsage(el, \"reference\")),\n        Object\n          .values(forecast.consumerGroup.forecast)\n          .map(el => mapUsage(el, \"forecast\"))\n      ].flat()\n    }\n    this.consumerAreaData = {\n      datasets: [\n        Object\n          .values(forecast.municipal.reference)\n          .map(el => mapUsage(el, \"reference\")),\n        Object\n          .values(forecast.municipal.forecast)\n          .map(el => mapUsage(el, \"forecast\"))\n      ].flat()\n    }\n    let labels: number[] = [];\n    for (let y = minYear; y = data.datasets.length / 2) return false;\n    item.lineWidth = 0;\n    return true;\n  }\n  chartLegendOnClick(event: ChartEvent, item: LegendItem, legend: any) {\n    console.log([event, item, legend]);\n    let chart = legend.chart;\n    chart.getDatasetMeta(item.datasetIndex).hidden =\n      !chart.getDatasetMeta(item.datasetIndex).hidden;\n    chart.getDatasetMeta(item.datasetIndex + legend.legendItems.length).hidden =\n      !chart.getDatasetMeta(item.datasetIndex + legend.legendItems.length).hidden;\n    chart.update();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Informationen\n      \n      \n        \n          \n            Name:\n            Eine Stadt\n          \n          \n            Postleitzahl:\n            12345\n          \n          \n            Regionalschlüssel:\n            12345\n          \n          \n            OOWV Teilgebiet:\n            Ein Teilgebeit\n          \n          \n            OOWV Region:\n            Eine Region\n          \n          \n            Landkreis:\n            Ein Landkreis\n          \n          \n            Gemeinde:\n            Eine Gemeinde\n          \n        \n      \n    \n  \n  \n    \n      \n        Parameter\n      \n      \n        \n          Prognosemodell\n          \n            \n              \n                Regression\n                \n              \n            \n              \n            \n            \n              \n                Regression\n              \n            \n          \n        \n        \n          Methode\n          \n            \n              \n                \n                  {{\"water-usage-forecasts.parameter.\" + method | translate}}\n                \n                \n              \n            \n              \n            \n            \n              \n                \n                  {{\"water-usage-forecasts.parameter.linear\" | translate}}\n                \n                \n                  {{\"water-usage-forecasts.parameter.logarithmic\" | translate}}\n                \n                \n                  {{\"water-usage-forecasts.parameter.polynomial\" | translate}}\n                \n              \n            \n          \n        \n        \n          Zeitraum\n\n        \n        -->\n      \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n      water-usage-forecasts.result-data.consumer-groups\n    \n  \n  \n    \n  \n\n\n\n  \n    \n      water-usage-forecasts.result-data.areas\n    \n  \n  \n    \n  \n\n\n 1\">\n  \n    \n      water-usage-forecasts.result-data.branches\n    \n  \n  \n    \n      \n        {{component[1]}}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Informationen                                          Name:            Eine Stadt                                Postleitzahl:            12345                                Regionalschlüssel:            12345                                OOWV Teilgebiet:            Ein Teilgebeit                                OOWV Region:            Eine Region                                Landkreis:            Ein Landkreis                                Gemeinde:            Eine Gemeinde                                                  Parameter                              Prognosemodell                                                    Regression                                                                                                              Regression                                                              Methode                                                                      {{\"water-usage-forecasts.parameter.\" + method | translate}}                                                                                                                                                {{\"water-usage-forecasts.parameter.linear\" | translate}}                                                  {{\"water-usage-forecasts.parameter.logarithmic\" | translate}}                                                  {{\"water-usage-forecasts.parameter.polynomial\" | translate}}                                                                              Zeitraum                -->                                water-usage-forecasts.result-data.consumer-groups                          water-usage-forecasts.result-data.areas               1\">            water-usage-forecasts.result-data.branches                          {{component[1]}}            '\n    var COMPONENTS = [{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'WaterUsageForecastsComponent', 'selector': 'lib-water-usage-forecasts'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultDataViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WaterUsageForecastsComponent.html":{"url":"components/WaterUsageForecastsComponent.html","title":"component - WaterUsageForecastsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WaterUsageForecastsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/water-usage-forecasts.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component displaying the request interface as well as the data provided by\nthe server for the water usage forecasts.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-water-usage-forecasts\n            \n\n\n\n\n            \n                templateUrl\n                ./water-usage-forecasts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                keys\n                            \n                            \n                                selectedView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/lib/water-usage-forecasts.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/water-usage-forecasts.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        keys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/water-usage-forecasts.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"map-select\" | \"result-data\"\n\n                    \n                \n                \n                    \n                        Default value : \"map-select\"\n                    \n                \n                    \n                        \n                                Defined in src/lib/water-usage-forecasts.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n// TODO: doc this\n\n/**\n * Component displaying the request interface as well as the data provided by\n * the server for the water usage forecasts.\n */\n@Component({\n  selector: \"lib-water-usage-forecasts\",\n  templateUrl: \"./water-usage-forecasts.component.html\"\n})\nexport class WaterUsageForecastsComponent implements OnInit {\n\n  selectedView: \"map-select\" | \"result-data\" = \"map-select\";\n\n  private keys?: string[];\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    // check for query parameters, upon change extract them and display correct\n    // view\n    this.route.queryParams.subscribe(({key}) => {\n      if (!key || !key.length) {\n        // missing or invalid parameters, display the map selection\n        this.selectedView = \"map-select\";\n        this.keys = undefined;\n        return;\n      }\n\n      this.keys = [key].flat();\n      this.selectedView = \"result-data\";\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'WaterUsageForecastsComponent', 'selector': 'lib-water-usage-forecasts'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WaterUsageForecastsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WaterUsageForecastsModule.html":{"url":"modules/WaterUsageForecastsModule.html","title":"module - WaterUsageForecastsModule","body":"\n                   \n\n\n\n\n    Modules\n    WaterUsageForecastsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WaterUsageForecastsModule\n\n\n\ncluster_WaterUsageForecastsModule_declarations\n\n\n\ncluster_WaterUsageForecastsModule_exports\n\n\n\n\nMapSelectViewComponent\n\nMapSelectViewComponent\n\n\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule -->\n\nMapSelectViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nResultDataViewComponent\n\nResultDataViewComponent\n\nWaterUsageForecastsModule -->\n\nResultDataViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterUsageForecastsComponent\n\nWaterUsageForecastsComponent\n\nWaterUsageForecastsModule -->\n\nWaterUsageForecastsComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterUsageForecastsComponent \n\nWaterUsageForecastsComponent \n\nWaterUsageForecastsComponent  -->\n\nWaterUsageForecastsModule->WaterUsageForecastsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/water-usage-forecasts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapSelectViewComponent\n                        \n                        \n                            ResultDataViewComponent\n                        \n                        \n                            WaterUsageForecastsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            WaterUsageForecastsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {ChartModule, WisdomModule} from \"common\";\n\nimport {WaterUsageForecastsComponent} from \"./water-usage-forecasts.component\";\nimport {\n  MapSelectViewComponent\n} from \"./views/map-select-view/map-select-view.component\";\nimport {\n  ResultDataViewComponent\n} from \"./views/result-data-view/result-data-view.component\";\n\n@NgModule({\n  declarations: [\n    WaterUsageForecastsComponent,\n    MapSelectViewComponent,\n    ResultDataViewComponent\n  ],\n  imports: [\n    WisdomModule,\n    ChartModule,\n    CommonModule,\n    RouterModule,\n    TranslateModule\n  ],\n  exports: [\n    WaterUsageForecastsComponent\n  ]\n})\nexport class WaterUsageForecastsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WaterUsageForecastsService.html":{"url":"injectables/WaterUsageForecastsService.html","title":"injectable - WaterUsageForecastsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WaterUsageForecastsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/water-usage-forecasts.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to interact with server providing the data to display.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchForecastData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/lib/water-usage-forecasts.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchForecastData\n                        \n                    \n                \n            \n            \n                \nfetchForecastData(key: string | string[], forecastModel: ForecastType, consumerGroup?: \"businesses\" | \"households_and_small_businesses\" | \"farming_forestry_fishing_industry\" | \"public_institutions\" | \"all\")\n                \n            \n\n\n            \n                \n                    Defined in src/lib/water-usage-forecasts.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    forecastModel\n                                    \n                                                ForecastType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    consumerGroup\n                                    \n                                            \"businesses\" | \"households_and_small_businesses\" | \"farming_forestry_fishing_industry\" | \"public_institutions\" | \"all\"\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\nimport {ForecastType} from \"./forecast-type\";\nimport {Router} from \"@angular/router\";\nimport {ForecastResponse} from \"./forecast-response\";\n\nconst API_URL = \"water-usage-forecasts\";\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/forecast-response.ts\n            \n            interface\n            ForecastEntry\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/forecast-response.ts\n            \n            interface\n            ForecastResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/forecast-response.ts\n            \n            interface\n            ForecastUsage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/views/map-select-view/map-select-view.component.ts\n            \n            component\n            MapSelectViewComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/views/result-data-view/result-data-view.component.ts\n            \n            component\n            ResultDataViewComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/lib/water-usage-forecasts.component.ts\n            \n            component\n            WaterUsageForecastsComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/lib/water-usage-forecasts.service.ts\n            \n            injectable\n            WaterUsageForecastsService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/lib/water-usage-forecasts.service.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/public-api.ts\n            \n            variable\n            wisdomInterface\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^13.2.0\n        \n            @angular/core : ^13.2.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ForecastType   (src/.../forecast-type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/forecast-type.ts\n    \n        \n            \n                \n                    \n                        \n                        ForecastType\n                    \n                \n                        \n                            \n                                 LOGARITHMIC\n                            \n                        \n                        \n                            \n                                Value : logarithmic\n                            \n                        \n                        \n                            \n                                 LINEAR\n                            \n                        \n                        \n                            \n                                Value : linear\n                            \n                        \n                        \n                            \n                                 POLYNOMIAL\n                            \n                        \n                        \n                            \n                                Value : polynomial\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WaterUsageForecastsModule\n\n\n\ncluster_WaterUsageForecastsModule_declarations\n\n\n\ncluster_WaterUsageForecastsModule_exports\n\n\n\n\nMapSelectViewComponent\n\nMapSelectViewComponent\n\n\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule -->\n\nMapSelectViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nResultDataViewComponent\n\nResultDataViewComponent\n\nWaterUsageForecastsModule -->\n\nResultDataViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterUsageForecastsComponent\n\nWaterUsageForecastsComponent\n\nWaterUsageForecastsModule -->\n\nWaterUsageForecastsComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterUsageForecastsComponent \n\nWaterUsageForecastsComponent \n\nWaterUsageForecastsComponent  -->\n\nWaterUsageForecastsModule->WaterUsageForecastsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        WaterUsageForecastsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL   (src/.../water-usage-forecasts.service.ts)\n                        \n                        \n                            wisdomInterface   (src/.../public-api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/water-usage-forecasts.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"water-usage-forecasts\"\n                    \n                \n\n\n        \n    \n\n    src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        wisdomInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WisdomInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n  path: \"water-usage-forecasts\",\n  scopes: [\"water-usage-forecasts\"],\n  entryComponent: WaterUsageForecastsComponent,\n  translations: {\n    de_DE,\n    en_US\n  }\n}\n                    \n                \n\n            \n                \n                    Public interface for the wisdom core to inject this module.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
