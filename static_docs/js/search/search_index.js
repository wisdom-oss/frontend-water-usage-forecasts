var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/ConsumerDetailComponent.html",[0,0.514,1,0.804]],["body/components/ConsumerDetailComponent.html",[0,0.709,1,1.213,2,1.418,3,0.322,4,0.322,5,1.09,6,1.09,7,1.09,8,0.277,9,4.006,10,4.006,11,4.006,12,1.738,13,1.747,14,2.29,15,3.424,16,1.09,17,2.396,18,2.396,19,1.158,20,2.198,21,1.572,22,2.92,23,0.194,24,0.681,25,1.34,26,4.14,27,0.778,28,2.657,29,4.16,30,2.657,31,3.555,32,3.555,33,1.078,34,3.974,35,0.532,36,3.546,37,3.749,38,2.823,39,0.604,40,2.024,41,2.823,42,4.16,43,2.506,44,4.16,45,2.823,46,2.579,47,2.823,48,1.496,49,3.546,50,0.945,51,0.04,52,0.523,53,1.159,54,3.546,55,3.218,56,2.459,57,0.631,58,1.108,59,2.139,60,2.459,61,2.459,62,2.459,63,3.424,64,1.577,65,1.425,66,0.763,67,3.546,68,2.92,69,2.459,70,2.94,71,2.024,72,0.658,73,2.024,74,1.738,75,2.024,76,2.459,77,2.024,78,2.459,79,0.694,80,2.024,81,0.277,82,0.472,83,1.738,84,0.419,85,0.529,86,2.024,87,1.354,88,0.328,89,2.459,90,2.198,91,1.282,92,1.738,93,0.322,94,0.322,95,2.024,96,3.546,97,2.459,98,2.459,99,2.507,100,2.459,101,2.459,102,2.459,103,1.738,104,2.459,105,1.738,106,2.459,107,1.738,108,2.459,109,1.738,110,2.459,111,2.459,112,2.459,113,2.024,114,1.738,115,2.459,116,2.024,117,1.354,118,1.211,119,2.024,120,2.024,121,0.681,122,2.459,123,1.738,124,1.354,125,2.459,126,2.459,127,2.459,128,2.459,129,2.459,130,0.889,131,1.572,132,1.572,133,1.09,134,2.018,135,1.09,136,2.459,137,1.572,138,0.655,139,0.889,140,1.572,141,0.726,142,0.655,143,0.322,144,1.488,145,1.09,146,0.726,147,1.09,148,0.655,149,0.655,150,0.604,151,0.889,152,0.726,153,0.529,154,1.09,155,1.09,156,0.023,157,0.023]],["title/injectables/ConsumersService.html",[43,1.661,158,0.514]],["body/injectables/ConsumersService.html",[3,0.357,4,0.357,8,0.307,19,1.204,23,0.215,24,0.733,25,1.017,27,0.573,28,2.626,30,2.424,33,1.047,35,0.573,39,0.813,43,2.101,48,1.017,50,1.271,51,0.04,52,0.519,55,2.698,57,0.499,58,1.017,64,0.891,65,1.3,66,0.821,72,0.713,79,0.657,81,0.307,82,0.524,84,0.465,85,0.587,88,0.215,93,0.499,94,0.357,114,3.678,118,1.344,119,2.245,120,2.245,121,1.026,156,0.025,157,0.025,158,0.65,159,1.344,160,1.691,161,2.424,162,1.247,163,3.817,164,4.62,165,3.817,166,1.501,167,1.641,168,1.675,169,2.727,170,1.641,171,4.771,172,2.101,173,3.817,174,3.113,175,2.727,176,3.817,177,3.817,178,3.928,179,2.686,180,3.817,181,4.404,182,3.372,183,3.113,184,4.404,185,3.143,186,3.817,187,3.143,188,1.746,189,1.247,190,1.247,191,0.891,192,0.891,193,0.891,194,2.245,195,2.245,196,1.127,197,2.245,198,0.805,199,0.727,200,1.928,201,2.245,202,2.727,203,1.501,204,2.727,205,3.434,206,5.672,207,2.727,208,1.928,209,2.727,210,2.727,211,1.209,212,2.727,213,5.021,214,2.727,215,2.727,216,2.727,217,2.727,218,2.245,219,2.727,220,2.727,221,2.727,222,2.245,223,0.891,224,0.891,225,3.678,226,4.404,227,0.916,228,2.727,229,4.404,230,3.817,231,3.626,232,2.727,233,1.344,234,2.245,235,2.727,236,2.727,237,0.891,238,0.891,239,0.891,240,0.891,241,0.891,242,0.891,243,0.891,244,0.891,245,0.915,246,0.891,247,2.245,248,2.245]],["title/interfaces/Datapoint.html",[249,0.649,250,1.661]],["body/interfaces/Datapoint.html",[3,0.482,4,0.482,8,0.415,23,0.29,24,0.896,27,0.7,35,0.553,39,0.628,51,0.04,52,0.529,66,1.004,72,0.704,79,0.726,81,0.415,82,0.708,84,0.628,85,0.793,88,0.29,93,0.704,94,0.482,121,1.13,142,1.364,143,0.742,150,0.628,156,0.03,157,0.03,158,0.795,167,1.525,168,1.512,170,1.204,188,1.673,189,1.525,190,1.525,191,1.204,192,1.204,193,1.204,196,1.088,198,1.088,199,0.982,223,1.204,224,1.204,227,0.708,233,1.816,237,1.204,238,1.204,239,1.204,240,1.204,241,1.204,242,1.204,243,1.204,244,1.204,245,0.884,246,1.204,249,1.004,250,3.057,251,1.816,252,1.816,253,1.816,254,3.805,255,3.805,256,3.805,257,1.474,258,1.332,259,1.332,260,1.088,261,0.884,262,2.605,263,2.605,264,2.605,265,1.634,266,2.285,267,1.634,268,0.982,269,1.634]],["title/interfaces/ForecastEntry.html",[249,0.649,270,1.487]],["body/interfaces/ForecastEntry.html",[3,0.417,4,0.417,8,0.359,19,0.765,23,0.251,24,0.816,27,0.637,33,0.613,35,0.479,39,0.544,51,0.04,52,0.455,53,1.042,57,0.556,66,0.914,72,0.714,79,0.694,81,0.359,82,0.613,84,0.544,85,0.686,88,0.376,93,0.694,94,0.417,121,1.069,143,0.714,150,0.724,153,0.686,156,0.031,157,0.027,158,0.724,162,1.042,167,1.388,168,1.411,170,1.042,172,1.756,179,1.572,188,1.561,189,1.388,190,1.388,191,1.042,192,1.042,193,1.042,196,0.942,198,0.942,199,0.85,211,2.258,223,1.042,224,1.042,227,0.613,237,1.042,238,1.042,239,1.042,240,1.042,241,1.042,242,1.042,243,1.042,244,1.042,245,0.765,246,1.042,249,1.096,251,1.572,257,1.276,258,1.153,259,1.153,260,1.255,261,0.765,267,1.414,268,1.273,269,1.414,270,2.51,271,1.042,272,1.414,273,2.418,274,1.756,275,2.63,276,2.63,277,2.63,278,1.572,279,2.634,280,1.978,281,1.978,282,1.978,283,1.978,284,1.756,285,2.961,286,1.756,287,3.289,288,2.63,289,1.978,290,1.978,291,1.978,292,1.978,293,1.978,294,1.978,295,1.883,296,1.978,297,1.756,298,1.756,299,1.978,300,1.414,301,1.978,302,1.978,303,1.978,304,1.978,305,1.978,306,1.756,307,1.414,308,1.756,309,1.978,310,1.756,311,1.978,312,1.978,313,1.978,314,1.978,315,1.978]],["title/interfaces/ForecastResponse.html",[249,0.649,261,0.724]],["body/interfaces/ForecastResponse.html",[3,0.487,4,0.487,8,0.42,23,0.294,24,0.902,27,0.705,35,0.559,39,0.635,51,0.04,52,0.515,66,1.011,72,0.615,79,0.729,81,0.42,82,0.716,84,0.635,85,0.802,88,0.294,93,0.707,94,0.487,121,0.988,142,1.371,143,0.673,150,0.635,156,0.03,157,0.03,158,0.801,167,1.536,168,1.52,170,1.218,188,1.682,189,1.536,190,1.536,191,1.218,192,1.218,193,1.218,196,1.101,198,1.101,199,0.993,223,1.218,224,1.218,227,0.716,233,1.836,237,1.218,238,1.218,239,1.218,240,1.218,241,1.218,242,1.218,243,1.218,244,1.218,245,0.894,246,1.218,249,1.011,250,3.27,251,1.836,252,1.836,253,1.836,254,2.634,255,2.634,256,2.634,257,1.49,258,1.347,259,1.347,260,1.101,261,1.127,262,3.82,263,3.82,264,3.82,265,1.652,266,2.31,267,1.652,268,0.993,269,1.652]],["title/interfaces/ForecastResponse-1.html",[249,0.545,261,0.607,316,1.394]],["body/interfaces/ForecastResponse-1.html",[3,0.408,4,0.408,8,0.352,19,0.749,23,0.246,24,0.804,27,0.628,33,0.6,35,0.468,39,0.532,51,0.04,52,0.528,53,1.02,57,0.618,66,0.901,72,0.709,79,0.689,81,0.352,82,0.6,84,0.532,85,0.672,88,0.372,93,0.689,94,0.408,121,1.064,143,0.618,150,0.714,153,0.672,156,0.033,157,0.027,158,0.714,161,1.719,162,1.02,167,1.369,168,1.396,170,1.02,172,2.306,179,1.538,188,1.544,189,1.369,190,1.369,191,1.02,192,1.02,193,1.02,196,0.922,198,0.922,199,0.832,211,1.384,223,1.02,224,1.02,227,0.6,237,1.02,238,1.02,239,1.02,240,1.02,241,1.02,242,1.02,243,1.02,244,1.02,245,0.749,246,1.02,249,1.133,251,1.538,257,1.249,258,1.128,259,1.128,260,1.237,261,1.004,267,1.384,268,1.259,269,1.384,270,2.328,271,1.02,272,1.384,273,1.856,274,1.719,275,2.602,276,2.602,277,2.602,278,2.063,279,2.93,280,2.596,281,2.596,282,2.596,283,2.596,284,2.306,285,3.361,286,1.719,287,3.265,288,2.602,289,3.131,290,1.936,291,1.936,292,1.936,293,1.936,294,1.936,295,1.856,296,1.936,297,1.719,298,1.719,299,1.936,300,1.384,301,1.936,302,1.936,303,1.936,304,1.936,305,1.936,306,1.719,307,1.384,308,1.719,309,1.936,310,1.719,311,1.936,312,1.936,313,1.936,314,1.936,315,1.936,317,3.57]],["title/interfaces/ForecastUsage.html",[249,0.649,300,1.338]],["body/interfaces/ForecastUsage.html",[3,0.41,4,0.41,8,0.352,19,0.751,23,0.247,24,0.806,27,0.629,33,0.601,35,0.47,39,0.533,51,0.04,52,0.502,53,1.023,57,0.549,66,0.902,72,0.737,79,0.69,81,0.352,82,0.601,84,0.533,85,0.673,88,0.373,93,0.69,94,0.41,121,1.131,143,0.619,150,0.715,153,0.673,156,0.031,157,0.027,158,0.715,162,1.023,167,1.371,168,1.397,170,1.023,172,1.723,179,1.542,188,1.546,189,1.371,190,1.371,191,1.023,192,1.023,193,1.023,196,0.924,198,0.924,199,0.834,211,1.387,223,1.023,224,1.023,227,0.601,237,1.023,238,1.023,239,1.023,240,1.023,241,1.023,242,1.023,243,1.023,244,1.023,245,0.751,246,1.023,249,1.087,251,1.542,257,1.252,258,1.131,259,1.131,260,1.239,261,0.751,267,1.387,268,1.261,269,1.387,270,2.332,271,1.023,272,1.387,273,1.859,274,1.723,275,2.605,276,2.605,277,2.605,278,1.542,279,2.601,280,1.941,281,1.941,282,1.941,283,1.941,284,1.723,285,2.934,286,1.723,287,3.268,288,2.605,289,1.941,290,1.941,291,1.941,292,1.941,293,1.941,294,1.941,295,2.336,296,1.941,297,1.723,298,1.723,299,1.941,300,1.859,301,3.134,302,3.134,303,3.134,304,1.941,305,1.941,306,1.723,307,1.387,308,1.723,309,1.941,310,1.723,311,1.941,312,1.941,313,1.941,314,1.941,315,1.941]],["title/components/MapSelectViewComponent.html",[0,0.514,138,0.804]],["body/components/MapSelectViewComponent.html",[0,0.853,1,0.815,2,1.651,3,0.4,4,0.4,5,1.355,6,1.355,7,1.355,8,0.344,13,2.034,14,2.574,16,1.355,17,2.516,18,2.516,19,0.733,21,1.83,23,0.241,24,0.793,25,1.334,27,0.62,33,0.961,35,0.62,38,3.104,39,0.704,41,3.104,46,2.56,47,3.104,48,1.436,50,1.1,51,0.04,52,0.498,53,1.528,57,0.54,58,1.1,59,2.072,64,1.349,65,1.219,72,0.612,79,0.612,81,0.344,82,0.587,84,0.521,88,0.412,91,1.948,93,0.4,94,0.4,117,1.683,118,1.506,124,1.683,130,1.105,131,1.83,132,1.83,133,1.355,134,2.219,135,1.355,137,1.83,138,1.334,139,2.174,140,1.83,141,0.903,142,0.815,143,0.4,144,1.636,145,1.355,146,0.903,147,1.355,148,0.815,149,0.815,150,0.918,151,1.105,152,0.903,153,0.888,154,1.355,155,1.355,156,0.032,157,0.027,317,2.919,318,4.535,319,3.894,320,1.683,321,3.4,322,3.4,323,4.122,324,4.535,325,4.676,326,4.676,327,3.057,328,4.129,329,3.057,330,2.517,331,3.4,332,3.057,333,3.057,334,3.057,335,2.56,336,3.057,337,3.057,338,3.057,339,2.517,340,3.057,341,2.517,342,3.057,343,3.057,344,3.057,345,3.057,346,4.129,347,4.129]],["title/components/ProphetForecastResultDataComponent.html",[0,0.514,141,0.891]],["body/components/ProphetForecastResultDataComponent.html",[0,0.595,1,0.489,2,1.139,3,0.24,4,0.24,5,0.814,6,0.814,7,0.814,8,0.207,13,1.404,14,1.011,16,0.814,17,2.212,18,2.212,19,0.44,21,1.263,23,0.31,24,0.547,25,1.135,27,0.524,33,0.903,35,0.427,39,0.313,48,1.359,50,1.135,51,0.04,52,0.52,57,0.754,58,1.049,59,1.998,64,1.141,65,1.031,72,0.68,74,1.298,79,0.557,81,0.207,83,1.298,85,0.395,88,0.371,91,0.663,93,0.24,94,0.24,103,1.298,105,2.468,107,2.014,117,2.166,121,1.013,130,0.663,131,1.263,132,1.263,133,0.814,134,1.744,135,0.814,137,1.263,138,0.489,139,0.663,140,1.263,141,1.162,142,1.295,143,0.774,144,1.933,145,0.814,146,0.542,147,0.814,148,0.489,149,0.489,150,0.828,151,0.663,152,0.542,153,0.395,154,0.814,155,0.814,156,0.018,157,0.018,162,0.931,227,0.67,245,1.224,259,0.663,261,0.44,265,1.744,268,1.135,273,1.263,335,3.467,341,3.711,348,1.836,349,2.077,350,1.878,351,3.545,352,1.011,353,2.875,354,2.849,355,3.492,356,2.014,357,3.492,358,3.492,359,4.2,360,2.849,361,2.014,362,2.346,363,2.849,364,2.014,365,2.468,366,1.511,367,2.346,368,1.836,369,1.511,370,2.849,371,3.711,372,4.508,373,1.836,374,2.014,375,1.836,376,2.346,377,3.24,378,1.836,379,1.298,380,2.849,381,3.24,382,1.836,383,3.492,384,2.849,385,1.836,386,1.836,387,1.836,388,2.468,389,1.836,390,1.836,391,1.836,392,1.511,393,1.511,394,1.836,395,1.511,396,1.511,397,1.511,398,1.298,399,1.298,400,1.511,401,1.511,402,1.511,403,1.511,404,1.511,405,1.298,406,1.836,407,1.298,408,2.468,409,1.836,410,1.836,411,1.836,412,1.836,413,1.511,414,1.836,415,1.836,416,1.836,417,1.836,418,1.836,419,1.836,420,3.24,421,2.849,422,1.836,423,1.836,424,1.836,425,1.836,426,1.836,427,1.836,428,2.468,429,1.511,430,2.849,431,1.511,432,1.836,433,1.836,434,1.511,435,1.511,436,1.836,437,2.875,438,3.492,439,1.836,440,1.836,441,2.014,442,1.836,443,3.492,444,1.836,445,1.836,446,1.836,447,1.836,448,1.836,449,1.836,450,1.836,451,1.836,452,1.836,453,2.849,454,3.492,455,1.836,456,2.875,457,1.836,458,2.875,459,2.875,460,3.492,461,4.508,462,4.508,463,3.935,464,3.492,465,1.836,466,1.836,467,1.836,468,1.836,469,1.836,470,1.836,471,1.836,472,1.836,473,1.836,474,1.836,475,1.836,476,2.849,477,2.849,478,4.508,479,3.186,480,2.849,481,2.849,482,1.836,483,1.836,484,1.836,485,2.346,486,2.849,487,2.849,488,2.346,489,3.935,490,1.836,491,1.836,492,1.836,493,1.836,494,1.836,495,1.836,496,1.836,497,1.836,498,1.836,499,1.836]],["title/injectables/ProphetForecastService.html",[158,0.514,265,1.338]],["body/injectables/ProphetForecastService.html",[3,0.478,4,0.478,8,0.411,23,0.288,25,1.236,27,0.696,33,0.891,35,0.765,39,0.79,48,1.236,50,1.236,51,0.04,52,0.486,58,0.973,66,0.998,72,0.702,79,0.724,81,0.411,82,0.701,84,0.622,85,0.785,88,0.288,93,0.702,94,0.478,121,0.979,142,1.359,143,0.667,150,0.622,156,0.03,157,0.03,158,0.79,159,1.799,166,2.01,167,1.753,168,1.698,170,1.516,188,1.753,189,1.516,190,1.516,191,1.193,192,1.193,193,1.193,196,1.078,198,1.078,199,0.973,223,1.193,224,1.193,227,0.701,233,1.799,237,1.193,238,1.193,239,1.193,240,1.193,241,1.193,242,1.193,243,1.193,244,1.193,245,0.876,246,1.193,249,0.998,250,2.953,252,2.512,253,1.799,254,2.581,255,2.581,256,2.581,257,1.46,258,1.32,259,1.32,260,1.078,261,0.876,262,2.581,263,2.581,264,2.581,265,2.056,266,2.876,267,1.618,268,1.236,269,1.618,308,2.554,500,3.652,501,3.652]],["title/components/ResultDataComponent.html",[0,0.514,146,0.891]],["body/components/ResultDataComponent.html",[0,0.783,1,0.787,2,1.613,3,0.386,4,0.386,5,1.309,6,1.309,7,1.309,8,0.333,16,1.309,17,2.498,18,2.498,19,0.708,21,1.788,23,0.233,24,0.775,25,1.224,27,0.689,33,0.882,48,1.481,50,0.787,51,0.04,52,0.508,57,0.764,58,0.787,59,1.309,64,1.501,65,1.356,72,0.646,79,0.601,81,0.333,87,1.626,88,0.318,91,1.067,93,0.386,94,0.386,130,1.067,131,1.788,132,1.788,133,1.309,134,2.188,135,1.309,137,1.788,138,0.787,139,1.067,140,1.788,141,0.872,142,1.075,143,0.386,144,1.816,145,1.309,146,1.458,147,1.309,148,0.787,149,0.787,150,0.687,151,1.067,152,0.872,153,0.635,154,1.309,155,1.309,156,0.026,157,0.026,162,1.501,203,3.059,227,0.567,259,1.067,260,1.191,268,1.224,273,1.788,349,2.254,350,2.037,352,1.626,356,2.851,364,2.851,365,3.247,367,2.432,369,2.432,388,2.851,398,2.088,399,2.088,407,2.088,408,3.489,502,3.494,503,4.593,504,4.576,505,3.321,506,2.954,507,2.954,508,3.384,509,3.384,510,4.034,511,2.432,512,3.321,513,2.432,514,2.432,515,2.954,516,2.088,517,2.432,518,2.432,519,2.432,520,2.432,521,2.954,522,2.432,523,2.432,524,2.432,525,4.034,526,2.954,527,3.321,528,2.432,529,2.954,530,4.034]],["title/components/ResultDataViewComponent.html",[0,0.514,148,0.804]],["body/components/ResultDataViewComponent.html",[0,0.58,1,0.317,2,1.22,3,0.34,4,0.156,5,0.528,6,0.528,7,0.528,8,0.134,13,0.988,14,1.431,16,0.528,17,1.901,18,1.901,19,0.816,20,1.244,21,0.889,23,0.094,24,0.385,25,1.181,27,0.797,28,1.104,31,0.842,32,1.418,33,0.947,35,0.458,38,1.891,39,0.52,41,1.891,43,2.269,46,2.556,47,1.891,48,1.415,50,0.983,51,0.041,52,0.454,53,1.206,57,0.779,58,1.098,59,1.965,64,1.402,65,1.496,72,0.72,79,0.561,81,0.134,82,0.229,84,0.203,86,0.98,87,1.104,88,0.404,90,1.244,91,1.55,92,0.842,93,0.445,94,0.156,99,0.842,117,2.031,118,2.349,121,0.586,123,1.418,124,1.104,130,0.43,131,0.889,132,0.889,133,0.528,134,1.352,135,0.528,137,0.889,138,0.317,139,0.43,140,0.889,141,0.352,142,0.692,143,0.561,144,1.347,145,0.528,146,0.352,147,0.528,148,0.813,149,0.317,150,0.933,151,1.23,152,0.352,153,0.559,154,0.528,155,0.528,156,0.025,157,0.013,161,2.161,162,1.526,168,1.379,178,1.651,182,2.406,183,2.406,187,1.651,198,0.352,200,0.842,203,2.82,205,2.659,208,0.842,218,1.651,225,3.37,227,0.385,245,0.286,258,1.333,260,0.901,261,0.286,265,0.889,268,1.293,273,1.352,278,0.988,288,1.431,295,0.889,306,1.679,316,1.431,320,0.656,321,1.651,322,1.651,323,3.038,324,3.232,330,0.98,331,4.262,335,1.244,349,2.139,350,1.933,361,1.837,365,1.837,374,0.842,379,1.418,398,0.842,399,0.842,405,0.842,407,0.842,408,2.156,428,1.418,429,1.651,431,2.14,435,0.98,479,3.431,505,1.651,508,1.611,509,1.611,514,0.98,516,0.842,520,3.996,522,0.98,523,0.98,524,0.98,527,1.651,528,0.98,531,2.006,532,2.599,533,2.14,534,3.404,535,2.599,536,2.599,537,3.394,538,2.955,539,2.599,540,3.404,541,3.05,542,2.006,543,2.006,544,1.191,545,2.031,546,4.122,547,3.925,548,2.599,549,1.837,550,2.006,551,2.006,552,1.191,553,3.05,554,2.006,555,3.925,556,3.05,557,2.006,558,1.191,559,2.006,560,1.191,561,2.006,562,2.006,563,2.006,564,1.191,565,2.006,566,2.006,567,2.006,568,2.511,569,3.301,570,4.767,571,2.006,572,2.006,573,2.006,574,1.191,575,2.599,576,4.122,577,2.006,578,2.006,579,1.191,580,2.14,581,1.191,582,1.191,583,2.006,584,2.006,585,3.038,586,2.006,587,1.191,588,2.006,589,2.006,590,2.006,591,1.191,592,1.191,593,2.006,594,1.191,595,2.006,596,1.191,597,2.006,598,3.69,599,2.006,600,2.006,601,1.191,602,2.599,603,2.14,604,2.599,605,1.191,606,2.006,607,2.006,608,2.599,609,1.191,610,2.006,611,2.006,612,2.599,613,1.191,614,2.006,615,2.006,616,2.006,617,2.006,618,2.006,619,2.006,620,2.006,621,2.006,622,2.006,623,1.191,624,1.191,625,1.191,626,3.05,627,2.006,628,1.191,629,1.191,630,1.191,631,1.191,632,2.599,633,1.191,634,1.191,635,0.98,636,1.244,637,2.006,638,1.191,639,1.191,640,1.191,641,2.006,642,1.191,643,1.191,644,1.191,645,1.191,646,1.191,647,1.191,648,1.191,649,1.191,650,0.98,651,1.191,652,1.191,653,2.599,654,2.599,655,1.191,656,0.98,657,1.191,658,1.191,659,1.191,660,1.191,661,2.006,662,1.191,663,1.191,664,1.191,665,1.191,666,0.98,667,1.191,668,1.191,669,1.191,670,0.98,671,1.191,672,1.191,673,1.191,674,1.191,675,1.191,676,1.191,677,1.191,678,1.191,679,1.191,680,1.191,681,1.191,682,2.006,683,2.006,684,1.191,685,1.651,686,1.191,687,1.191,688,1.191,689,1.191,690,1.191,691,2.006,692,2.006,693,1.651,694,2.006,695,1.191,696,1.191,697,1.191,698,1.191,699,0.98,700,1.191,701,1.191,702,1.191,703,1.191,704,1.191,705,1.191,706,2.599,707,1.191,708,1.191,709,1.191,710,1.191,711,3.038,712,2.006,713,2.006,714,2.006,715,2.006,716,2.006,717,2.006,718,2.006,719,2.006,720,2.006,721,2.006,722,2.006,723,2.006,724,2.006,725,2.006]],["title/components/WaterRightDetailComponent.html",[0,0.514,149,0.804]],["body/components/WaterRightDetailComponent.html",[0,0.542,1,0.424,2,1.018,3,0.208,4,0.208,5,0.706,6,0.706,7,0.706,8,0.179,9,3.373,12,1.125,13,1.255,14,1.752,15,2.62,16,0.706,17,2.115,18,2.115,19,0.382,20,1.579,21,1.129,22,2.096,23,0.125,24,0.489,25,0.678,27,0.546,28,1.402,30,2.335,31,2.25,32,2.571,33,0.698,35,0.382,37,2.994,38,2.254,39,0.434,40,1.311,41,2.254,46,1.973,47,2.254,48,1.233,50,0.678,51,0.04,52,0.379,53,0.832,57,0.555,58,0.848,59,1.612,63,2.62,64,1.04,65,0.94,66,0.548,68,3.492,71,1.311,72,0.333,73,1.311,74,1.125,75,1.311,77,1.311,79,0.605,80,1.311,81,0.179,82,0.306,84,0.271,85,0.342,87,0.876,88,0.48,91,1.61,92,1.125,93,0.208,94,0.208,95,1.311,99,1.125,113,2.994,116,1.311,117,0.876,118,0.784,121,0.489,123,1.125,124,0.876,130,0.575,131,1.129,132,1.129,133,0.706,134,1.612,135,0.706,137,1.129,138,0.424,139,0.575,140,1.129,141,0.47,142,0.424,143,0.208,144,1.188,145,0.706,146,0.47,147,0.706,148,0.424,149,0.969,150,1.041,151,2.076,152,0.47,153,0.342,154,0.706,155,0.706,156,0.016,157,0.016,162,1.04,208,1.125,211,1.129,227,0.611,339,1.311,434,1.311,437,2.994,479,4.308,512,2.62,537,3.274,545,2.002,569,3.459,603,2.096,635,1.311,636,1.579,670,2.096,685,1.311,693,1.311,699,1.311,726,3.373,727,3.373,728,2.546,729,3.637,730,1.592,731,1.592,732,2.546,733,1.592,734,2.546,735,2.546,736,2.25,737,1.592,738,1.592,739,1.311,740,1.311,741,1.592,742,2.546,743,1.592,744,1.592,745,1.592,746,1.311,747,1.592,748,1.592,749,1.592,750,1.592,751,1.592,752,1.592,753,1.592,754,1.592,755,1.592,756,1.592,757,1.592,758,1.592,759,1.592,760,1.592,761,1.592,762,1.592,763,1.592,764,1.592,765,1.592,766,1.592,767,6.087,768,1.592,769,1.592,770,2.62,771,1.592,772,1.592,773,1.592,774,1.592,775,4.894,776,2.546,777,2.546,778,2.546,779,4.242,780,2.546,781,2.546,782,2.546,783,2.546,784,2.546,785,2.546,786,2.546,787,2.546,788,2.546,789,2.546,790,3.637,791,2.546,792,2.546,793,2.546,794,2.546,795,2.546,796,2.546,797,2.546,798,2.546,799,2.546,800,2.546,801,2.546,802,2.546,803,2.546,804,3.637,805,3.637,806,2.546,807,2.546,808,2.546,809,2.546,810,2.546,811,2.546,812,2.546,813,2.546,814,2.546,815,2.546,816,2.546,817,2.546,818,2.546,819,2.546,820,2.546,821,2.546,822,2.546,823,2.546,824,2.546,825,2.546,826,2.546,827,2.546,828,2.546,829,2.546,830,2.546,831,2.546,832,2.546,833,2.546,834,2.546,835,2.546,836,2.546,837,2.546,838,2.546,839,2.546,840,2.546,841,2.546,842,2.546,843,2.546,844,2.546,845,2.546,846,2.546,847,2.546,848,2.546,849,2.546,850,2.546,851,2.546,852,2.546,853,2.546,854,2.546,855,2.546,856,2.546,857,2.546]],["title/injectables/WaterRightsService.html",[158,0.514,545,1.661]],["body/injectables/WaterRightsService.html",[3,0.413,4,0.413,8,0.355,23,0.249,25,1.266,27,0.633,28,1.737,30,1.737,33,0.974,35,0.633,39,0.719,48,1.266,50,1.266,51,0.04,52,0.545,58,1.124,64,1.031,65,0.932,66,1.195,72,0.413,79,0.691,81,0.355,82,0.606,84,0.538,85,0.679,91,1.141,93,0.622,94,0.413,114,2.231,121,1.066,150,0.538,156,0.027,157,0.027,158,0.719,159,1.555,166,1.737,167,1.657,168,1.64,170,1.378,174,3.736,185,2.598,188,1.727,189,1.553,190,1.553,191,1.031,192,1.031,193,1.031,194,2.598,196,1.246,198,0.932,199,0.841,222,2.598,223,1.031,224,1.031,227,0.974,231,3.473,233,1.555,234,2.598,237,1.378,238,1.378,239,1.378,240,1.378,241,1.378,242,1.378,243,1.378,244,1.378,245,1.216,246,1.378,247,2.598,248,2.598,271,1.657,316,2.792,428,2.982,545,2.322,549,2.231,736,2.982,746,2.598,770,2.598,858,1.956,859,4.218,860,4.218,861,3.156,862,4.218,863,3.156,864,4.218,865,3.156,866,2.598,867,3.156,868,3.473,869,3.156,870,4.176,871,3.156,872,4.218,873,3.156,874,4.218,875,3.156,876,3.156,877,3.156,878,3.156,879,3.156,880,3.156,881,3.156,882,3.156,883,3.156,884,3.156,885,3.156,886,3.156,887,3.156,888,3.156,889,3.156,890,3.156,891,3.156,892,3.156,893,3.156,894,3.156]],["title/modules/WaterUsageForecastsModule.html",[895,1.871,896,1.871]],["body/modules/WaterUsageForecastsModule.html",[1,1.486,3,0.452,4,0.452,8,0.389,10,2.444,11,2.444,51,0.04,57,0.712,79,0.781,81,0.389,82,0.664,84,0.589,88,0.392,93,0.452,94,0.452,130,1.25,138,1.486,139,1.619,141,1.647,143,0.586,144,1.718,146,1.647,148,1.486,149,1.486,151,1.619,152,1.647,153,0.964,156,0.029,157,0.029,319,2.444,350,1.9,351,2.777,395,2.847,396,2.847,502,2.144,726,2.444,727,2.444,739,2.847,740,2.847,895,2.144,896,3.766,897,2.444,898,2.144,899,4.091,900,2.847,901,2.847,902,2.847,903,2.847,904,2.847,905,3.688,906,2.847,907,2.444,908,3.458,909,3.458,910,4.48,911,2.847,912,4.48,913,4.48,914,4.48,915,4.48,916,4.48,917,4.48,918,4.48,919,3.458,920,4.48,921,5.256,922,4.969,923,3.167,924,3.458]],["title/components/WaterUsageForecastsResultDataComponent.html",[0,0.514,152,0.891]],["body/components/WaterUsageForecastsResultDataComponent.html",[0,0.797,1,0.437,2,1.478,3,0.214,4,0.214,5,0.726,6,0.726,7,0.726,8,0.184,13,1.284,16,0.726,17,2.135,18,2.135,19,0.968,21,1.155,23,0.205,24,0.5,25,1.2,26,2.671,27,0.723,33,0.925,35,0.391,39,0.279,48,1.405,50,1.2,51,0.04,52,0.496,57,0.763,58,1.145,59,2.072,64,1.208,65,1.092,66,0.352,72,0.705,79,0.528,81,0.184,83,1.158,84,0.279,85,0.352,87,0.902,88,0.468,91,0.592,93,0.214,94,0.214,103,2.852,105,1.158,107,1.158,109,3.037,118,0.807,121,0.71,130,1.853,131,1.155,132,1.155,133,0.726,134,1.638,135,0.726,137,1.155,138,0.437,139,0.592,140,1.155,141,0.484,142,0.437,143,0.646,144,1.931,145,0.726,146,0.484,147,0.726,148,0.437,149,0.437,150,0.841,151,0.592,152,1.092,153,1.264,154,0.726,155,0.726,156,0.024,157,0.017,161,2.035,162,1.208,183,2.613,203,2.48,205,2.292,211,1.438,225,2.613,227,0.623,245,0.625,260,1.269,261,0.393,268,0.985,278,1.821,284,1.434,286,1.434,297,1.434,298,1.434,300,1.155,307,1.638,310,2.365,316,1.434,335,1.016,349,2.133,350,1.928,352,0.902,353,2.671,356,1.842,361,1.842,362,2.145,364,1.842,366,1.349,371,2.671,374,1.842,376,2.145,377,3.043,379,1.158,381,3.043,388,1.158,392,3.043,393,3.537,397,1.349,403,1.349,404,1.349,405,1.158,413,1.349,420,1.349,441,2.293,456,1.349,458,1.349,459,1.349,485,1.349,488,1.349,511,1.349,513,1.349,516,1.158,518,1.349,519,1.349,533,2.671,555,2.671,568,2.671,569,3.037,580,2.145,585,1.349,650,1.349,666,1.349,711,3.043,868,1.349,907,1.842,923,4.101,925,3.244,926,3.244,927,3.244,928,3.697,929,2.606,930,2.606,931,2.606,932,2.606,933,2.606,934,2.606,935,3.244,936,3.244,937,3.244,938,3.244,939,2.671,940,3.244,941,3.244,942,3.244,943,2.606,944,2.606,945,2.606,946,2.606,947,2.606,948,2.606,949,1.639,950,1.639,951,1.639,952,3.697,953,1.639,954,1.639,955,1.639,956,1.639,957,1.639,958,1.639,959,1.639,960,1.639,961,4.675,962,2.606,963,1.639,964,2.606,965,3.244,966,2.606,967,2.606,968,2.606,969,2.606,970,2.606,971,2.606,972,1.639,973,1.639,974,1.639,975,1.639,976,3.244,977,1.639,978,1.639,979,2.606,980,1.639,981,2.606,982,2.606,983,2.606,984,1.639,985,1.639,986,1.639,987,1.639,988,1.639,989,1.639,990,1.639,991,1.639,992,2.606,993,1.639,994,1.639,995,1.639,996,1.639,997,3.697,998,3.244,999,2.606,1000,1.639,1001,1.639,1002,1.639,1003,1.639,1004,1.639,1005,1.639,1006,1.639,1007,3.244,1008,1.639,1009,1.639,1010,1.639,1011,1.639,1012,1.639,1013,1.639,1014,1.639,1015,3.697,1016,3.697,1017,1.639,1018,2.606,1019,1.639,1020,1.639,1021,1.639,1022,1.639,1023,1.639,1024,1.639,1025,1.639,1026,1.639,1027,1.639,1028,1.639,1029,1.639,1030,1.639,1031,1.639,1032,2.606,1033,2.606,1034,1.639,1035,1.639,1036,2.606,1037,2.606,1038,2.606]],["title/injectables/WaterUsageForecastsService.html",[158,0.514,307,1.338]],["body/injectables/WaterUsageForecastsService.html",[3,0.388,4,0.388,8,0.334,19,0.711,23,0.234,25,1.077,27,0.607,33,0.884,35,0.691,39,0.689,48,1.077,50,1.077,51,0.041,52,0.439,53,0.969,57,0.602,58,0.79,66,0.87,72,0.746,79,0.677,81,0.334,82,0.569,84,0.505,85,0.638,88,0.408,93,0.677,94,0.388,121,1.049,143,0.602,150,0.689,153,0.638,156,0.03,157,0.026,158,0.689,159,1.461,161,1.632,162,1.321,166,1.632,167,1.615,168,1.614,170,1.321,172,1.632,179,1.461,188,1.615,189,1.321,190,1.321,191,0.969,192,0.969,193,0.969,196,0.875,198,0.875,199,0.79,211,1.314,223,0.969,224,0.969,227,0.569,237,0.969,238,0.969,239,0.969,240,0.969,241,0.969,242,0.969,243,0.969,244,0.969,245,0.711,246,0.969,249,1.063,257,1.186,258,1.071,259,1.071,260,1.46,261,0.711,266,1.838,267,1.314,268,1.317,269,1.314,270,2.268,271,1.504,272,1.314,273,1.792,274,1.632,275,2.534,276,2.534,277,2.534,278,1.461,279,2.853,280,1.838,281,1.838,282,1.838,283,1.838,284,1.632,285,2.853,286,1.632,287,3.388,288,2.534,289,1.838,290,1.838,291,1.838,292,1.838,293,1.838,294,1.838,295,1.792,296,1.838,297,1.632,298,1.632,299,1.838,300,1.314,301,1.838,302,1.838,303,1.838,304,2.507,305,2.507,306,2.226,307,1.792,308,2.534,309,2.853,310,2.534,311,2.853,312,2.853,313,2.853,314,1.838,315,1.838,1039,2.965,1040,2.965,1041,2.965]],["title/injectables/WaterUsageHistoryService.html",[45,1.871,158,0.514]],["body/injectables/WaterUsageHistoryService.html",[3,0.479,4,0.479,8,0.412,19,0.878,23,0.289,25,1.239,27,0.697,30,2.559,33,0.893,34,4.204,35,0.697,39,0.792,45,2.882,48,1.239,50,1.239,51,0.04,52,0.512,57,0.479,58,0.976,66,1.155,70,2.589,72,0.668,79,0.725,81,0.412,82,0.703,84,0.624,85,0.788,88,0.437,91,1.324,93,0.608,94,0.479,109,3.286,121,0.893,156,0.03,157,0.03,158,0.792,159,1.805,166,2.016,167,1.755,168,1.699,170,1.519,188,1.669,189,1.519,190,1.519,191,1.197,192,1.197,193,1.197,196,1.082,198,1.082,199,0.976,223,1.197,224,1.197,227,0.703,233,1.805,237,1.197,238,1.197,239,1.197,240,1.197,241,1.197,242,1.197,243,1.197,244,1.197,245,1.115,246,1.197,271,1.669,295,1.623,1042,2.271,1043,4.648,1044,3.663,1045,4.648,1046,3.663,1047,4.648,1048,3.663,1049,3.663,1050,3.663,1051,4.648,1052,3.663,1053,3.663]],["title/coverage.html",[1054,3.37]],["body/coverage.html",[0,0.953,1,0.864,8,0.365,9,3.036,10,2.292,11,2.292,12,3.036,43,1.785,45,2.01,51,0.04,52,0.309,53,1.06,57,0.731,66,0.698,88,0.453,90,2.01,138,0.864,139,1.552,141,0.958,143,0.562,144,1.675,146,0.958,148,0.864,149,0.864,151,1.552,152,0.958,153,0.924,156,0.028,157,0.028,158,0.909,160,2.663,199,1.421,249,1.147,250,1.785,252,2.526,253,2.526,261,1.03,265,1.437,270,1.598,271,1.877,272,2.364,300,1.437,307,1.437,318,2.67,319,2.292,320,2.651,349,2.133,350,1.928,351,2.663,352,2.651,441,4.278,502,2.01,538,2.01,545,1.785,636,2.01,726,2.292,727,2.292,858,2.663,923,3.036,1042,2.663,1054,2.67,1055,3.243,1056,3.243,1057,3.243,1058,3.536,1059,3.536,1060,5.801,1061,5.591,1062,2.67,1063,5.127,1064,3.243,1065,4.816,1066,4.816,1067,4.296,1068,4.296,1069,3.243,1070,3.243,1071,3.243,1072,3.243,1073,3.243,1074,3.243,1075,4.296,1076,3.243,1077,3.243,1078,3.243,1079,3.243,1080,3.243,1081,2.67,1082,2.67,1083,2.67,1084,3.243,1085,3.243]],["title/dependencies.html",[898,2.246,1086,2.085]],["body/dependencies.html",[51,0.038,81,0.531,156,0.035,157,0.035,898,3.357,911,3.881,1087,4.715,1088,4.715,1089,4.715,1090,5.415]],["title/miscellaneous/enumerations.html",[1091,1.248,1092,2.983]],["body/miscellaneous/enumerations.html",[23,0.332,35,0.761,51,0.038,57,0.663,65,1.666,88,0.4,142,1.449,143,0.755,144,1.777,156,0.033,157,0.033,252,2.077,253,2.498,257,2.027,258,1.832,260,1.666,271,1.377,272,2.247,275,2.791,276,2.791,277,2.791,349,2.027,350,1.832,351,3.143,352,3.106,359,4.174,400,3.47,401,3.47,402,3.47,502,2.613,504,4.174,517,3.47,1091,2.077,1092,3.47,1093,2.98,1094,4.174,1095,2.98]],["title/index.html",[23,0.238,1096,2.485]],["body/index.html",[1,1.454,2,1.701,51,0.039,130,1.537,138,1.454,141,1.612,146,1.612,148,1.454,149,1.454,152,1.612,156,0.033,157,0.033,159,2.096,251,2.096,316,2.341,895,3.16,896,3.824,898,2.637,899,3.502,900,3.502,901,3.502,902,3.502,903,3.502,904,3.502,905,4.196,906,3.502,907,3.007,1096,3.502,1097,4.254,1098,5.097]],["title/modules.html",[897,2.893]],["body/modules.html",[51,0.035,156,0.035,157,0.035,896,2.958,897,3.373,1099,4.772,1100,4.772,1101,4.772,1102,4.772]],["title/properties.html",[24,0.696,1086,2.085]],["body/properties.html",[24,0.92,51,0.037,156,0.035,157,0.035,1103,4.792,1104,4.792]],["title/miscellaneous/typealiases.html",[1091,1.248,1105,3.623]],["body/miscellaneous/typealiases.html",[23,0.342,51,0.036,52,0.543,55,3.647,57,0.72,70,3.647,88,0.407,156,0.033,157,0.033,160,2.69,174,3.068,182,3.068,200,3.068,201,3.573,203,2.389,271,1.686,317,3.891,320,2.84,349,1.735,350,1.568,508,2.69,509,2.69,538,3.198,736,3.647,858,3.531,866,4.247,870,4.247,1042,3.198,1091,2.138,1093,3.068,1095,4.027,1106,4.34,1107,3.573,1108,4.34]],["title/miscellaneous/variables.html",[1091,1.248,1109,2.983]],["body/miscellaneous/variables.html",[0,0.873,1,0.862,20,2.005,23,0.255,51,0.04,52,0.541,53,1.741,57,0.67,64,1.895,65,1.712,72,0.697,88,0.457,90,2.658,124,2.36,138,0.862,142,0.862,143,0.423,148,0.862,149,0.862,150,0.967,153,1.178,156,0.031,157,0.028,160,2.005,164,3.53,179,2.112,195,2.663,196,0.955,197,2.663,199,1.545,205,2.005,249,0.696,252,1.593,253,2.112,268,0.862,271,1.572,272,1.9,274,1.78,295,1.433,320,2.36,349,1.293,350,1.169,508,2.005,509,2.005,538,2.658,549,2.286,636,2.658,656,2.663,858,2.658,895,2.005,939,2.663,1042,2.658,1058,2.663,1059,3.96,1062,2.663,1081,2.663,1082,3.53,1083,3.96,1091,1.593,1093,2.286,1094,2.663,1095,3.4,1107,2.663,1109,2.663,1110,4.288,1111,3.234,1112,3.234,1113,4.288,1114,3.234,1115,4.288,1116,5.122,1117,3.234,1118,5.674,1119,4.288,1120,4.81,1121,3.234,1122,3.234,1123,3.234,1124,3.234,1125,3.234,1126,3.234,1127,3.234,1128,3.234,1129,3.234,1130,3.234,1131,3.234,1132,3.234,1133,3.234]]],"invertedIndex":[["",{"_index":51,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":441,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1104,"title":{},"body":{"properties.html":{}}}],["0.2em",{"_index":491,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["0/1",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1078,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1066,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1075,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1074,"title":{},"body":{"coverage.html":{}}}],["0a758f",{"_index":468,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["1",{"_index":316,"title":{"interfaces/ForecastResponse-1.html":{}},"body":{"components/ResultDataViewComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"index.html":{}}}],["1/1",{"_index":1065,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":113,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["100",{"_index":1063,"title":{},"body":{"coverage.html":{}}}],["10000",{"_index":681,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["10bbe5",{"_index":470,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["12",{"_index":773,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["16.1.0",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["18/19",{"_index":1077,"title":{},"body":{"coverage.html":{}}}],["1:25000",{"_index":847,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["1].recordedat.toisostring().substring(0",{"_index":112,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["2",{"_index":459,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["2.5.3",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":1064,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":774,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["33",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":1098,"title":{},"body":{"index.html":{}}}],["53",{"_index":1079,"title":{},"body":{"coverage.html":{}}}],["5443ba",{"_index":946,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["66",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1097,"title":{},"body":{"index.html":{}}}],["8/15",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1076,"title":{},"body":{"coverage.html":{}}}],["9999",{"_index":772,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["_method",{"_index":503,"title":{},"body":{"components/ResultDataComponent.html":{}}}],["a37a00",{"_index":457,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["a9c940",{"_index":947,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["above",{"_index":228,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["access",{"_index":274,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":505,"title":{},"body":{"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["accumulated",{"_index":280,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["accumulations",{"_index":285,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["activatedroute",{"_index":41,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["active",{"_index":867,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["activeelement",{"_index":390,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["actual_component",{"_index":155,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["administration",{"_index":604,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["afterviewinit",{"_index":15,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["agriculture",{"_index":935,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["aliases",{"_index":1106,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowing",{"_index":620,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["amount",{"_index":1051,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["amounts",{"_index":296,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["angular",{"_index":171,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["angular/common",{"_index":911,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":191,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["angular/core",{"_index":81,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":82,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["any).dataset.prognosisvariant",{"_index":425,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["api",{"_index":179,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["api.ts",{"_index":1082,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_url",{"_index":199,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":240,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["area",{"_index":569,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["areacomponents",{"_index":533,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["array",{"_index":218,"title":{},"body":{"injectables/ConsumersService.html":{},"components/ResultDataViewComponent.html":{}}}],["association",{"_index":834,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["authority",{"_index":779,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["automatically",{"_index":554,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["b00058",{"_index":472,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["ba4c43",{"_index":945,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["backgroundcolor",{"_index":105,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["bar",{"_index":464,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["base",{"_index":195,"title":{},"body":{"injectables/ConsumersService.html":{},"miscellaneous/variables.html":{}}}],["basechartdirective",{"_index":394,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["based",{"_index":580,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["bcd9e0",{"_index":944,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["behavior",{"_index":758,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["behaviorsubject",{"_index":63,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["behaviorsubject([[nan",{"_index":735,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["behaviorsubject([nan",{"_index":67,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["between",{"_index":982,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["bit",{"_index":418,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["black",{"_index":488,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["blue",{"_index":106,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["body",{"_index":850,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["bold",{"_index":495,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["boolean",{"_index":868,"title":{},"body":{"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["bootstrap",{"_index":900,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["bordercolor",{"_index":456,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["borderskipped",{"_index":1009,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["borderwidth",{"_index":458,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["both",{"_index":966,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["bounds",{"_index":437,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["bounds[0].push(coordinates[0",{"_index":753,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["bounds[1].push(coordinates[1",{"_index":754,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["box",{"_index":607,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["breadcrumb",{"_index":566,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["breadcrumbs",{"_index":46,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["breadcrumbsservice",{"_index":47,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["break",{"_index":527,"title":{},"body":{"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["browse",{"_index":1102,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1099,"title":{},"body":{"modules.html":{}}}],["businesses",{"_index":310,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["calculate",{"_index":283,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["calculated",{"_index":687,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["calculation",{"_index":258,"title":{},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["calendar",{"_index":338,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["call",{"_index":561,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["canactivate",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":408,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["catch(console.error",{"_index":660,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["changed",{"_index":559,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["changes",{"_index":379,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["changes['key",{"_index":404,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["changes['method",{"_index":987,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["chart",{"_index":371,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["chart.data.datasets",{"_index":1030,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["chart.getdatasetmeta(i).hidden",{"_index":1031,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["chart.getdatasetmeta(index).hidden",{"_index":1032,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["chart.hide(i",{"_index":423,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["chart.js",{"_index":83,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["chart.show(i",{"_index":422,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["chart.update",{"_index":1035,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["chartdata",{"_index":26,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["chartdataset",{"_index":453,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["chartelements",{"_index":357,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["chartevent",{"_index":392,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["chartlabelupdate",{"_index":360,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["chartlabelupdate(chart",{"_index":370,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["chartlegendfilter",{"_index":928,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["chartlegendfilter(item",{"_index":954,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["chartlegendonclick",{"_index":929,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["chartlegendonclick(event",{"_index":962,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["charts",{"_index":396,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"modules/WaterUsageForecastsModule.html":{}}}],["children",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":94,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["cleaned",{"_index":879,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["click",{"_index":971,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["clicked",{"_index":967,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["client",{"_index":172,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["cluster_waterusageforecastsmodule",{"_index":903,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["cluster_waterusageforecastsmodule_declarations",{"_index":904,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["color",{"_index":487,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["colormap",{"_index":986,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["colors",{"_index":932,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["combinelatestwith",{"_index":633,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["common",{"_index":84,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["common.map.resolution",{"_index":706,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["commonmodule",{"_index":910,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["component",{"_index":0,"title":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component[1",{"_index":725,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["component_template",{"_index":135,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"index.html":{}}}],["console",{"_index":534,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["console.log(url.tostring",{"_index":1048,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["const",{"_index":198,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["constructor(breadcrumbs",{"_index":327,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["constructor(http",{"_index":166,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["constructor(private",{"_index":403,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["constructor(route",{"_index":40,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["constructor(service",{"_index":366,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["constructor(waterrightservice",{"_index":544,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["consumer",{"_index":19,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["consumer/:consumer",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consumerareadata",{"_index":925,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["consumerdetailcomponent",{"_index":1,"title":{"components/ConsumerDetailComponent.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["consumergroup",{"_index":287,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["consumergroupdata",{"_index":926,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["consumericon",{"_index":90,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consumerlocationsresponse",{"_index":55,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"miscellaneous/typealiases.html":{}}}],["consumers",{"_index":164,"title":{},"body":{"injectables/ConsumersService.html":{},"miscellaneous/variables.html":{}}}],["consumersservice",{"_index":43,"title":{"injectables/ConsumersService.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ResultDataViewComponent.html":{},"coverage.html":{}}}],["consumersservice#fetchconsumers",{"_index":202,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["consumersservice.fetchconsumers",{"_index":1108,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consumption",{"_index":340,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["content",{"_index":239,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["context",{"_index":243,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["continue",{"_index":670,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["coordinate",{"_index":210,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["coordinates",{"_index":28,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{}}}],["coordinates[0",{"_index":127,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["coordinates[1",{"_index":128,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["core",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["correct",{"_index":572,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["coverage",{"_index":1054,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":571,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["crs",{"_index":213,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["cservice",{"_index":42,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["current",{"_index":550,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["currentkey",{"_index":430,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["cursor",{"_index":496,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["data",{"_index":57,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data'},{'name",{"_index":145,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.areas",{"_index":1038,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.branches",{"_index":724,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data.component",{"_index":922,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["data.component.css",{"_index":355,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["data.component.html",{"_index":356,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.component.ts",{"_index":352,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["data.component.ts:124",{"_index":975,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.component.ts:140",{"_index":955,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.component.ts:154",{"_index":963,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.component.ts:22",{"_index":506,"title":{},"body":{"components/ResultDataComponent.html":{}}}],["data.component.ts:25",{"_index":510,"title":{},"body":{"components/ResultDataComponent.html":{}}}],["data.component.ts:27",{"_index":950,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.component.ts:30",{"_index":951,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.component.ts:33",{"_index":949,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.component.ts:40",{"_index":368,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["data.component.ts:41",{"_index":507,"title":{},"body":{"components/ResultDataComponent.html":{}}}],["data.component.ts:43",{"_index":369,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{}}}],["data.component.ts:44",{"_index":953,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.component.ts:46",{"_index":385,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["data.component.ts:47",{"_index":511,"title":{},"body":{"components/ResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.component.ts:48",{"_index":386,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["data.component.ts:49",{"_index":513,"title":{},"body":{"components/ResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.component.ts:50",{"_index":367,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{}}}],["data.component.ts:51",{"_index":934,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.component.ts:54",{"_index":378,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["data.component.ts:55",{"_index":973,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.component.ts:58",{"_index":373,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["data.component.ts:59",{"_index":972,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.component.ts:72",{"_index":980,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.component.ts:78",{"_index":382,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["data.component.ts:84",{"_index":375,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["data.consumer",{"_index":1036,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.datasets.length",{"_index":1022,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["data.legaltitle",{"_index":776,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data.locations",{"_index":749,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data.map",{"_index":1050,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["data.map(({usage",{"_index":104,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["data.map(({year",{"_index":108,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["data.results",{"_index":712,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data.selection",{"_index":713,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data.shapes",{"_index":668,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data.subject",{"_index":777,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data/prophet",{"_index":351,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["data/result",{"_index":502,"title":{},"body":{"components/ResultDataComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["data/water",{"_index":923,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"coverage.html":{}}}],["data?.address",{"_index":785,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.annotation",{"_index":857,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.bailee",{"_index":787,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.dateofchange?.toisostring()?.slice(0",{"_index":789,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.externalid",{"_index":794,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.filereference",{"_index":796,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.grantingauthority",{"_index":780,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.id",{"_index":791,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.no",{"_index":792,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.registeringauthority",{"_index":782,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data?.waterauthority",{"_index":783,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["data[0",{"_index":684,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data[1",{"_index":695,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["data[data.length",{"_index":111,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["data]'},{'name",{"_index":147,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["datapoint",{"_index":250,"title":{"interfaces/Datapoint.html":{}},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastResponse.html":{},"injectables/ProphetForecastService.html":{},"coverage.html":{}}}],["datasets",{"_index":103,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["date",{"_index":1047,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["date(date*1000).getfullyear",{"_index":1052,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["date(raw.dateofchange",{"_index":890,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["date(raw.valid.from",{"_index":893,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["date(raw.valid.until",{"_index":894,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["date(recordedat*1000",{"_index":1053,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["de_de",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":899,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["decoration",{"_index":489,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["decorators",{"_index":74,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["default",{"_index":64,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":48,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["dependencies",{"_index":898,"title":{"dependencies.html":{}},"body":{"modules/WaterUsageForecastsModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":161,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastResponse-1.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["detail",{"_index":20,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["detail'},{'name",{"_index":137,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["detail.component",{"_index":918,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["detail.component.html",{"_index":22,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts",{"_index":12,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:20",{"_index":737,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":738,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":77,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:24",{"_index":73,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":71,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":76,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:27",{"_index":69,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":62,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:30",{"_index":78,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":49,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:34",{"_index":730,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:38",{"_index":731,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":61,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:58",{"_index":56,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:75",{"_index":60,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["detail.component.ts:76",{"_index":733,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["detail/consumer",{"_index":11,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["detail/water",{"_index":727,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["details",{"_index":877,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["detect",{"_index":611,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["didfinish",{"_index":535,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["differ",{"_index":610,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["difference",{"_index":981,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["different",{"_index":959,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["directive",{"_index":133,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["directives",{"_index":154,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["discharge",{"_index":807,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["display",{"_index":306,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["displayed",{"_index":556,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["displaying",{"_index":531,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["displayname",{"_index":301,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["district",{"_index":603,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["docheck",{"_index":532,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["document.getelementbyid(`${location?.id}`)?.scrollintoview",{"_index":757,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["documentation",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":282,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["doing",{"_index":412,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["done",{"_index":584,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["ds",{"_index":254,"title":{},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastResponse.html":{},"injectables/ProphetForecastService.html":{}}}],["e02abf",{"_index":948,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["el",{"_index":438,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["el.upper",{"_index":443,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["element",{"_index":132,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["elementref",{"_index":389,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["elements",{"_index":606,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["elsewhere",{"_index":679,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["emits",{"_index":181,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["en_us",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end",{"_index":297,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["endpoint",{"_index":197,"title":{},"body":{"injectables/ConsumersService.html":{},"miscellaneous/variables.html":{}}}],["endyear",{"_index":302,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["entries",{"_index":614,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["entry",{"_index":435,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["entry.highmigrationprognosis",{"_index":450,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["entry.lowmigrationprognosis",{"_index":439,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["entry.mediummigrationprognosis",{"_index":446,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["entry[1",{"_index":703,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["enum",{"_index":259,"title":{},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["enumerations",{"_index":1092,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equation",{"_index":292,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["event",{"_index":381,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["event.native",{"_index":1026,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["event.target",{"_index":424,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["eventemitter",{"_index":952,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["evt",{"_index":756,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["export",{"_index":93,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["exports",{"_index":902,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["false",{"_index":335,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["farming_forestry_fishing_industry",{"_index":312,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["fetch",{"_index":553,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["fetchconsumers",{"_index":165,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["fetchconsumers(params",{"_index":173,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["fetchdata",{"_index":361,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["fetchdata(key",{"_index":374,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["fetches",{"_index":176,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["fetchforecastdata",{"_index":308,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["fetchforecastdata(key",{"_index":266,"title":{},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastResponse.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["fetchwaterrightdetails",{"_index":859,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["fetchwaterrightdetails(no",{"_index":862,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["fetchwaterrightlocations",{"_index":860,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["fetchwaterrightlocations(params",{"_index":864,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["fetchwaterusagehistory",{"_index":1043,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["fetchwaterusagehistory(id",{"_index":1045,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["ff0d86",{"_index":474,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["ffbf00",{"_index":466,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{}}}],["filtered",{"_index":970,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["first",{"_index":956,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["firstvaluefrom",{"_index":397,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["firstvaluefrom(this.service.fetchforecastdata(key",{"_index":988,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["fisheries",{"_index":937,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["flat",{"_index":1018,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["float",{"_index":293,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["font",{"_index":493,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["forecast",{"_index":143,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["forecast.service",{"_index":399,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["forecast.service.ts",{"_index":253,"title":{},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastResponse.html":{},"injectables/ProphetForecastService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["forecast.service.ts:30",{"_index":500,"title":{},"body":{"injectables/ProphetForecastService.html":{}}}],["forecast.service.ts:37",{"_index":501,"title":{},"body":{"injectables/ProphetForecastService.html":{}}}],["forecastentry",{"_index":270,"title":{"interfaces/ForecastEntry.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["forecasting",{"_index":627,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecastmodel",{"_index":309,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecastresponse",{"_index":261,"title":{"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{}},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["forecastresponse[\"accumulations",{"_index":991,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["forecastresponse[\"partials\"][0][\"consumergroup",{"_index":290,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecastresponse[\"partials\"][0][\"referenceusages",{"_index":299,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecasts",{"_index":153,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecasts.breadcrumbs.map",{"_index":705,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.breadcrumbs.water",{"_index":339,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["forecasts.display.loading",{"_index":269,"title":{},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["forecasts.map",{"_index":346,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["forecasts.module.ts",{"_index":909,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["forecasts.parameter",{"_index":719,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.parameter.linear",{"_index":720,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.parameter.logarithmic",{"_index":721,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.parameter.polynomial",{"_index":722,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecasts.prophet.high",{"_index":481,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["forecasts.prophet.low",{"_index":477,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["forecasts.prophet.medium",{"_index":480,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["forecasts.result",{"_index":711,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["forecasts.service",{"_index":516,"title":{},"body":{"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["forecasts.service.ts",{"_index":272,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["forecasts.service.ts:67",{"_index":1039,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["forecasts.service.ts:74",{"_index":1040,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["forecasts.water",{"_index":767,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["forecasts/results",{"_index":710,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["forecastservice",{"_index":504,"title":{},"body":{"components/ResultDataComponent.html":{},"miscellaneous/enumerations.html":{}}}],["forecastservice.prophet",{"_index":529,"title":{},"body":{"components/ResultDataComponent.html":{}}}],["forecastservice.water_usage",{"_index":526,"title":{},"body":{"components/ResultDataComponent.html":{}}}],["forecasttype",{"_index":260,"title":{},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["forecastusage",{"_index":300,"title":{"interfaces/ForecastUsage.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["forestry",{"_index":936,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["form",{"_index":281,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["found",{"_index":184,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["full",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fully",{"_index":599,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["function",{"_index":964,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["generic",{"_index":565,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["geojson",{"_index":114,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{}}}],["geojson.coordinates",{"_index":219,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["geojson.coordinates[0",{"_index":120,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{}}}],["geojson.coordinates[1",{"_index":119,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{}}}],["geojson.crs",{"_index":209,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["geojson.crs.properties",{"_index":215,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["geojson.crs.properties.name",{"_index":216,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["geojson.crs.type",{"_index":214,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["geojson.type",{"_index":217,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["getkey",{"_index":628,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["getmethod",{"_index":514,"title":{},"body":{"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["graphs",{"_index":976,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["green",{"_index":943,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["group",{"_index":286,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["grouped",{"_index":462,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["groups",{"_index":1037,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["gui",{"_index":619,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["half",{"_index":957,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["handleconsumerdata",{"_index":36,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["handleconsumerdata(data",{"_index":54,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["headers",{"_index":238,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["here",{"_index":686,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["hidden",{"_index":463,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["high",{"_index":402,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"miscellaneous/enumerations.html":{}}}],["highmigrationprognosis",{"_index":264,"title":{},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastResponse.html":{},"injectables/ProphetForecastService.html":{}}}],["highmigrationprognosisdata",{"_index":449,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["highmigrationprognosisdata.bounds",{"_index":473,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["highmigrationprognosisdata.bounds.push([el.lower",{"_index":451,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["highmigrationprognosisdata.forecast",{"_index":471,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["highmigrationprognosisdata.forecast.push(el.forecast",{"_index":452,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["history.service",{"_index":89,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["history.service.ts",{"_index":1042,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["history.service.ts:18",{"_index":1044,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["history.service.ts:25",{"_index":1046,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["historydata",{"_index":29,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["historyresponse",{"_index":70,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/typealiases.html":{}}}],["household",{"_index":938,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["households_and_small_businesses",{"_index":311,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["hservice",{"_index":44,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["html",{"_index":131,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["http",{"_index":170,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["httpclient",{"_index":167,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["httpcontext",{"_index":189,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["httpheaders",{"_index":190,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["https://unpkg.com/ionicons@5.5.2/dist/svg/business.svg",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://unpkg.com/ionicons@5.5.2/dist/svg/water.svg",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":124,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":92,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["icons.ts",{"_index":1059,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["iconsize",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconurl",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":30,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["identifier",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":180,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["import",{"_index":79,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["imported",{"_index":336,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["imports",{"_index":924,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["include",{"_index":186,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["includes",{"_index":600,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infinity",{"_index":999,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["inject",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":158,"title":{"injectables/ConsumersService.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{}}}],["injectables",{"_index":159,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"index.html":{}}}],["input",{"_index":388,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["input(\"colors",{"_index":985,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["input(\"key",{"_index":518,"title":{},"body":{"components/ResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["input(\"method",{"_index":519,"title":{},"body":{"components/ResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["input[type=\"radio",{"_index":484,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["input[type=\"radio\"]:checked",{"_index":498,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["input[type=radio",{"_index":482,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["inputs",{"_index":364,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["institution",{"_index":940,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["interact",{"_index":304,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["interactions",{"_index":551,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["interface",{"_index":249,"title":{"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{}},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interfaces",{"_index":251,"title":{},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"index.html":{}}}],["internal",{"_index":637,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["isreal",{"_index":676,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["item",{"_index":961,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["item.linewidth",{"_index":1023,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["iterate",{"_index":682,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["itself",{"_index":284,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["json",{"_index":242,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["json.parse(cleaned",{"_index":885,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["json.parse(json.stringify(raw",{"_index":887,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["json.stringify(res",{"_index":880,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["k",{"_index":632,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["key",{"_index":268,"title":{},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["key(k",{"_index":645,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["key(s",{"_index":557,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["key].flat",{"_index":431,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["keys",{"_index":323,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["keyvaluediffer",{"_index":608,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["keyvaluediffers",{"_index":547,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["label",{"_index":485,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["labels",{"_index":107,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["labels.push(el.ds.split",{"_index":440,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["latitude",{"_index":221,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["leaflet",{"_index":743,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["leafletmouseevent",{"_index":742,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["legend",{"_index":130,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"index.html":{}}}],["legend.chart",{"_index":1024,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["legend.legenditems.length",{"_index":1034,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["legendelement",{"_index":391,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["legenditem",{"_index":393,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["legends",{"_index":958,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["lib",{"_index":18,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["line",{"_index":461,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["linear",{"_index":276,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["link",{"_index":118,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["list",{"_index":177,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["literal",{"_index":317,"title":{},"body":{"interfaces/ForecastResponse-1.html":{},"components/MapSelectViewComponent.html":{},"miscellaneous/typealiases.html":{}}}],["loader",{"_index":586,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["location",{"_index":208,"title":{},"body":{"injectables/ConsumersService.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["location.name",{"_index":755,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location.real",{"_index":751,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.basinno?.key",{"_index":817,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.basinno?.name",{"_index":818,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.county",{"_index":820,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.eusurveyarea?.key",{"_index":823,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.eusurveyarea?.name",{"_index":824,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.field",{"_index":826,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.floodarea",{"_index":853,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.groundwatervolume",{"_index":829,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.id",{"_index":800,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.irrigationarea?.amount",{"_index":809,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.irrigationarea?.unit",{"_index":810,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.legalscope",{"_index":799,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.localsubdistrict",{"_index":832,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.location",{"_index":750,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.maintenanceassociation?.key",{"_index":835,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.maintenanceassociation?.name",{"_index":836,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.municipalarea?.key",{"_index":838,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.municipalarea?.name",{"_index":839,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.name",{"_index":798,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.no",{"_index":802,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.plot",{"_index":841,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.rainsupplement?.amount",{"_index":813,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.rainsupplement?.duration",{"_index":815,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.rainsupplement?.unit",{"_index":814,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.rivershed",{"_index":843,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.serialno",{"_index":845,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.topmap1to25000?.key",{"_index":848,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.topmap1to25000?.name",{"_index":849,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.waterbody",{"_index":851,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["location?.waterprotectionarea",{"_index":855,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["locations",{"_index":178,"title":{},"body":{"injectables/ConsumersService.html":{},"components/ResultDataViewComponent.html":{}}}],["logarithmic",{"_index":275,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["longitude",{"_index":220,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["look",{"_index":417,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["low",{"_index":400,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"miscellaneous/enumerations.html":{}}}],["lower",{"_index":255,"title":{},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastResponse.html":{},"injectables/ProphetForecastService.html":{}}}],["lowmigrationprognosis",{"_index":262,"title":{},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastResponse.html":{},"injectables/ProphetForecastService.html":{}}}],["lowmigrationprognosisdata",{"_index":436,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["lowmigrationprognosisdata.bounds",{"_index":465,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["lowmigrationprognosisdata.bounds.push([el.lower",{"_index":442,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["lowmigrationprognosisdata.forecast",{"_index":455,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["lowmigrationprognosisdata.forecast.push(el.forecast",{"_index":444,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["m",{"_index":626,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["makes",{"_index":415,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["map",{"_index":91,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["map(el",{"_index":1015,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["mapcomponent",{"_index":31,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["mapcomponent[\"inputmarkers",{"_index":638,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["mapkeynames",{"_index":365,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["mapkeynames[data[0",{"_index":476,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["mapped",{"_index":590,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["mapresolution",{"_index":536,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["mapselection",{"_index":326,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["mapselection(selection",{"_index":329,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["mapselectviewcomponent",{"_index":138,"title":{"components/MapSelectViewComponent.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mapservice",{"_index":546,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["mapusage",{"_index":1000,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["mapusage(el",{"_index":1016,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["marker",{"_index":32,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["marker.geojson!.coordinates[0",{"_index":690,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["marker.geojson!.coordinates[1",{"_index":689,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["marker.geojson.coordinates[0",{"_index":697,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["marker.geojson.coordinates[1",{"_index":696,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["marker.id",{"_index":698,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["marker.name",{"_index":691,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["marker.waterright",{"_index":692,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["markers",{"_index":537,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["markers.push",{"_index":685,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["matching",{"_index":157,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.max(...bounds[0",{"_index":761,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["math.max(...bounds[1",{"_index":762,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["math.max(usage.endyear",{"_index":1002,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["math.min(...bounds[0",{"_index":763,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["math.min(...bounds[1",{"_index":764,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["math.min(usage.startyear",{"_index":1001,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["maxyear",{"_index":998,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["medium",{"_index":401,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mediummigrationprognosis",{"_index":263,"title":{},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastResponse.html":{},"injectables/ProphetForecastService.html":{}}}],["mediummigrationprognosisdata",{"_index":445,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["mediummigrationprognosisdata.bounds",{"_index":469,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["mediummigrationprognosisdata.bounds.push([el.lower",{"_index":447,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["mediummigrationprognosisdata.forecast",{"_index":467,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["mediummigrationprognosisdata.forecast.push(el.forecast",{"_index":448,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["merged",{"_index":597,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["method",{"_index":203,"title":{},"body":{"injectables/ConsumersService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"miscellaneous/typealiases.html":{}}}],["method(m",{"_index":639,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["method(method",{"_index":521,"title":{},"body":{"components/ResultDataComponent.html":{}}}],["methode",{"_index":718,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["methods",{"_index":35,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/enumerations.html":{}}}],["middle",{"_index":1010,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["migration",{"_index":478,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["minyear",{"_index":997,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["miscellaneous",{"_index":1091,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":294,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["module",{"_index":895,"title":{"modules/WaterUsageForecastsModule.html":{}},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":897,"title":{"modules.html":{}},"body":{"modules/WaterUsageForecastsModule.html":{},"modules.html":{}}}],["more",{"_index":567,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["move",{"_index":678,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["multiple",{"_index":663,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["municipal",{"_index":288,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["names",{"_index":588,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["name}}{{id",{"_index":136,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["nan",{"_index":68,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["navigate",{"_index":578,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["new",{"_index":66,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{}}}],["ng2",{"_index":395,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"modules/WaterUsageForecastsModule.html":{}}}],["ngafterviewinit",{"_index":37,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["ngchartsmodule",{"_index":916,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["ngdocheck",{"_index":541,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["ngmodule",{"_index":912,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["ngonchanges",{"_index":362,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["ngonchanges(changes",{"_index":376,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["ngx",{"_index":739,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{}}}],["null",{"_index":183,"title":{},"body":{"injectables/ConsumersService.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["number",{"_index":121,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["object",{"_index":205,"title":{},"body":{"injectables/ConsumersService.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":657,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["object.entries(this.selection",{"_index":612,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["object.fromentries([[name",{"_index":659,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["object.keys(this.selection",{"_index":700,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["object.values(forecast.municipal.reference)[0",{"_index":993,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["observable",{"_index":188,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["omit",{"_index":871,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["onchanges",{"_index":353,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["onclick",{"_index":693,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["one",{"_index":568,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["onlabelchange",{"_index":363,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["onlabelchange(event",{"_index":380,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["opacity",{"_index":483,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["optional",{"_index":25,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["out",{"_index":907,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"index.html":{}}}],["output",{"_index":983,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["outputs",{"_index":933,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["over",{"_index":683,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["overview",{"_index":1096,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":1086,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":225,"title":{},"body":{"injectables/ConsumersService.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["parameter",{"_index":576,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["parameters",{"_index":50,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["params",{"_index":185,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{}}}],["params.id",{"_index":229,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["params.in",{"_index":231,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{}}}],["params.isactive",{"_index":872,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["params.isreal",{"_index":874,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["params.usageabove",{"_index":226,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["part",{"_index":969,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["partial",{"_index":174,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["partials",{"_index":289,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["path",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["peer",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["pipe(combinelatestwith(this.consumersservice.fetchconsumers",{"_index":677,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["pipe(map",{"_index":1049,"title":{},"body":{"injectables/WaterUsageHistoryService.html":{}}}],["pipe(map((raw",{"_index":886,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["pipe(map((res",{"_index":878,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["placed",{"_index":593,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["point",{"_index":222,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{}}}],["pointer",{"_index":497,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["pointerevent",{"_index":1027,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["pointstyle",{"_index":460,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["polynomial",{"_index":277,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["possible",{"_index":257,"title":{},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/enumerations.html":{}}}],["private",{"_index":27,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["prognosemodell",{"_index":717,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["prognosis",{"_index":341,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{}}}],["prognosisvariant",{"_index":359,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"miscellaneous/enumerations.html":{}}}],["prognosisvariant.high",{"_index":411,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["prognosisvariant.low",{"_index":409,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["prognosisvariant.medium",{"_index":410,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["promise",{"_index":429,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["promise.all(res).then(res",{"_index":433,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"properties.html":{}}}],["property",{"_index":206,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["prophet",{"_index":142,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastResponse.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["prophetforecastresultdatacomponent",{"_index":141,"title":{"components/ProphetForecastResultDataComponent.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"coverage.html":{},"index.html":{}}}],["prophetforecastservice",{"_index":265,"title":{"injectables/ProphetForecastService.html":{}},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastResponse.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataViewComponent.html":{},"coverage.html":{}}}],["prophetforecasttype",{"_index":509,"title":{},"body":{"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["prophetforecasttype.prophet",{"_index":528,"title":{},"body":{"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["protection",{"_index":854,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["providedin",{"_index":223,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["providers",{"_index":901,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["providing",{"_index":305,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["ptevent",{"_index":1025,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["ptevent.ctrlkey",{"_index":1029,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["ptevent.shiftkey",{"_index":1028,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["public",{"_index":939,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{},"miscellaneous/variables.html":{}}}],["public_institutions",{"_index":313,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["query",{"_index":575,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["querylist",{"_index":383,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["queryparameterguard",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryparams",{"_index":656,"title":{},"body":{"components/ResultDataViewComponent.html":{},"miscellaneous/variables.html":{}}}],["rate.amount",{"_index":804,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["rate.unit}}/{{rate.duration",{"_index":805,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["raw.dateofchange",{"_index":888,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["raw.valid",{"_index":891,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["re",{"_index":595,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["readonly",{"_index":358,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["real",{"_index":869,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["received",{"_index":278,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["receiving",{"_index":163,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["record",{"_index":273,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["recordedat",{"_index":34,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["redirectto",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reduces",{"_index":616,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["ref",{"_index":992,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["ref.endyear",{"_index":995,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["ref.startyear",{"_index":996,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["reference",{"_index":211,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["referenceusages",{"_index":291,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["refprogsplit",{"_index":927,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["regression",{"_index":598,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["regressionmethod",{"_index":538,"title":{},"body":{"components/ResultDataViewComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["regressionmethod.linear",{"_index":644,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["relativeto",{"_index":654,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["relevant",{"_index":978,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["replace(/\"'([^'\"\\s:,]+)'\"/g",{"_index":883,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["replace(/\"\\s*([^\"]+)\\s*\"/g",{"_index":881,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["replace(/'\"([^'\"\\s:,]+)\"'/g",{"_index":884,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["replace(/'\\s*([^']+)\\s*'/g",{"_index":882,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["representing",{"_index":207,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["request",{"_index":187,"title":{},"body":{"injectables/ConsumersService.html":{},"components/ResultDataViewComponent.html":{}}}],["requesting",{"_index":577,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["res",{"_index":428,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterRightsService.html":{}}}],["res.dateofchange",{"_index":889,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["res.push(firstvaluefrom(this.service.fetchforecastdata(currentkey)).then(res",{"_index":432,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["res.valid",{"_index":892,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["reset",{"_index":906,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}],["resolution",{"_index":324,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["resolution.municipal",{"_index":642,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["resolution.toenum(shape.key.length",{"_index":669,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["response",{"_index":182,"title":{},"body":{"injectables/ConsumersService.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/typealiases.html":{}}}],["responsetype",{"_index":241,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["result",{"_index":144,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["resultdatacomponent",{"_index":146,"title":{"components/ResultDataComponent.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"coverage.html":{},"index.html":{}}}],["resultdataviewcomponent",{"_index":148,"title":{"components/ResultDataViewComponent.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":156,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":227,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["returned",{"_index":201,"title":{},"body":{"injectables/ConsumersService.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":58,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["right",{"_index":151,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"coverage.html":{}}}],["right.address",{"_index":784,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.annotation",{"_index":856,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.bailee",{"_index":786,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.basin",{"_index":816,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.county",{"_index":819,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.eu",{"_index":821,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.external",{"_index":793,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.field",{"_index":825,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.file",{"_index":795,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.flood",{"_index":852,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.fluid",{"_index":806,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.granting",{"_index":778,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.groundwater",{"_index":827,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.internal",{"_index":790,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.irrigation",{"_index":808,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.local",{"_index":830,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.location",{"_index":801,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.locations",{"_index":797,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.maintenance",{"_index":833,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.municipal",{"_index":837,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.plot",{"_index":840,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.rain",{"_index":811,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.registering",{"_index":781,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.rivershed",{"_index":842,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.serial",{"_index":844,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.since",{"_index":768,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.top",{"_index":846,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.water",{"_index":775,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right.withdrawal",{"_index":803,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["right/:waterright",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rights",{"_index":549,"title":{},"body":{"components/ResultDataViewComponent.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/variables.html":{}}}],["rights.service",{"_index":635,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["rights.service.ts",{"_index":858,"title":{},"body":{"injectables/WaterRightsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rights.service.ts:116",{"_index":861,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["rights.service.ts:123",{"_index":865,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["rights.service.ts:144",{"_index":863,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["root",{"_index":224,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["route",{"_index":53,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":168,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["routermodule",{"_index":913,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["runs",{"_index":414,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["rxjs",{"_index":85,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["rxjs/operators",{"_index":634,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["scatter",{"_index":454,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["scopes",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second",{"_index":968,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["sel[0",{"_index":714,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["select",{"_index":139,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"coverage.html":{}}}],["select.get",{"_index":347,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selected",{"_index":570,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["selected.length",{"_index":704,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["selected.push([key",{"_index":702,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["selected[0][0",{"_index":707,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["selected[0][1",{"_index":708,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["selecting",{"_index":621,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["selection",{"_index":331,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["selection.keys",{"_index":343,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selection.keys.length",{"_index":345,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selection[res].push([shape.key",{"_index":671,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["selectiondiffer",{"_index":539,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["selectionentries",{"_index":540,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["selectionready",{"_index":325,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["server",{"_index":279,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["service",{"_index":162,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["services/consumers.service",{"_index":86,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["services/prophet",{"_index":398,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["services/water",{"_index":87,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["set",{"_index":520,"title":{},"body":{"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["set(use_api_url",{"_index":244,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["set(use_error_handler",{"_index":247,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{}}}],["set(use_loader",{"_index":246,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["setbreadcrumbs",{"_index":542,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["setbreadcrumbs(key",{"_index":563,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["setkey(k",{"_index":630,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["setmethod(m",{"_index":624,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["setmethod(method",{"_index":515,"title":{},"body":{"components/ResultDataComponent.html":{}}}],["settingsarray",{"_index":406,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["settingsarray.entries",{"_index":421,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["shape",{"_index":200,"title":{},"body":{"injectables/ConsumersService.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/typealiases.html":{}}}],["shape.name",{"_index":672,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["shape[0",{"_index":716,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["shape[1",{"_index":715,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["shapes",{"_index":589,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["show",{"_index":420,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["simplechanges",{"_index":377,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["small",{"_index":941,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["smooth",{"_index":759,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["smoother",{"_index":419,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["something",{"_index":622,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["span.tag",{"_index":486,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["specified",{"_index":230,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["split",{"_index":662,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["src/.../consumers.service.ts",{"_index":1107,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../map",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../prophet",{"_index":1094,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../public",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../result",{"_index":1093,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../routing.ts",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../water",{"_index":1095,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/map",{"_index":1058,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/routing.ts",{"_index":1062,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/services/consumers.service.ts",{"_index":160,"title":{},"body":{"injectables/ConsumersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/services/consumers.service.ts:49",{"_index":169,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["src/lib/services/consumers.service.ts:72",{"_index":175,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["src/lib/services/prophet",{"_index":252,"title":{},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastResponse.html":{},"injectables/ProphetForecastService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/lib/services/water",{"_index":271,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/views/detail",{"_index":9,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{}}}],["src/lib/views/map",{"_index":318,"title":{},"body":{"components/MapSelectViewComponent.html":{},"coverage.html":{}}}],["src/lib/views/result",{"_index":349,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/water",{"_index":908,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["src/public",{"_index":1081,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":298,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["startyear",{"_index":303,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["state",{"_index":602,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["statements",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":72,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["stringtocolor",{"_index":984,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["stringtocolor(usage.displayname",{"_index":1011,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["styles",{"_index":348,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["styleurls",{"_index":354,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["sub",{"_index":831,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["subroutines",{"_index":664,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["subscribe(data",{"_index":99,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["subset",{"_index":977,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["supplement",{"_index":812,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["support",{"_index":1100,"title":{},"body":{"modules.html":{}}}],["survey",{"_index":822,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["svg",{"_index":1101,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":407,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["system",{"_index":212,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["table",{"_index":1085,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1084,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["text",{"_index":117,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["then(data",{"_index":666,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["thickness",{"_index":490,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["this#fetchdata",{"_index":562,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this._method",{"_index":530,"title":{},"body":{"components/ResultDataComponent.html":{}}}],["this.bounds.next",{"_index":760,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.bounds.subscribe(bounds",{"_index":744,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.breadcrumbs.set(0",{"_index":337,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["this.breadcrumbs.set(1",{"_index":709,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.breadcrumbs.set(2",{"_index":116,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["this.chartdata",{"_index":102,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.chartelements.get(index)!.chart",{"_index":426,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["this.chartlabelupdate(chart",{"_index":427,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["this.colormap",{"_index":1012,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["this.consumerareadata",{"_index":1019,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["this.consumergroupdata",{"_index":1013,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["this.coordinates.next(coordinates",{"_index":125,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.coordinates.subscribe(coordinates",{"_index":126,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.cservice.fetchconsumers({id",{"_index":98,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.data",{"_index":434,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["this.data.push([key",{"_index":475,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["this.fetchdata(this.key",{"_index":405,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["this.handleconsumerdata(data",{"_index":100,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.hservice.fetchwaterusagehistory(this.id",{"_index":101,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.http.get(url.tostring",{"_index":237,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["this.id",{"_index":96,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.keys",{"_index":342,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["this.keyvaluediffers.find(this.selection).create",{"_index":649,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.map.map?.flytobounds(bounds",{"_index":745,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.mapcomponent.map!.flyto(coordinates",{"_index":129,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.mapresolution",{"_index":641,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.mapservice.fetchlayerdata(null",{"_index":665,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.marker",{"_index":122,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.markers",{"_index":699,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["this.method",{"_index":650,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["this.name",{"_index":115,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.recordedat",{"_index":110,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.refprogsplit",{"_index":994,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["this.route",{"_index":655,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.route.parent",{"_index":694,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.route.snapshot.params[\"consumer",{"_index":97,"title":{},"body":{"components/ConsumerDetailComponent.html":{}}}],["this.route.snapshot.params[\"waterright",{"_index":747,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.route.snapshot.queryparams",{"_index":658,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.route.snapshot.queryparams[\"key",{"_index":647,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.route.snapshot.queryparams[\"method",{"_index":643,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.router.createurltree([api_url",{"_index":876,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["this.router.navigate",{"_index":653,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.router.parseurl(`${api_url}/${forecastmodel",{"_index":314,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["this.router.parseurl(api_url",{"_index":233,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastResponse.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["this.selection",{"_index":673,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.selection[key",{"_index":701,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.selectiondiffer",{"_index":648,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.selectiondiffer.diff(this.selection",{"_index":651,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.selectionentries",{"_index":652,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.selectionready",{"_index":344,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["this.service",{"_index":525,"title":{},"body":{"components/ResultDataComponent.html":{}}}],["this.service.fetchwaterrightdetails(waterright",{"_index":748,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.setbreadcrumbs(key",{"_index":674,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.translate.instant(\"water",{"_index":766,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this.updateareacomponents(data.partials",{"_index":990,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["this.updategraphs(data.accumulations",{"_index":989,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["this.updatequeryparam(\"key",{"_index":646,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.updatequeryparam(\"method",{"_index":640,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this.waterrightservice.fetchwaterrightlocations",{"_index":675,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["this[\"data\"][\"valid",{"_index":765,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["this[\"selection",{"_index":667,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["through",{"_index":492,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["todo",{"_index":661,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["toggle",{"_index":965,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["toggle(item.datasetindex",{"_index":1033,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["tooltip",{"_index":123,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["tourism",{"_index":942,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["transition",{"_index":416,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["translate",{"_index":479,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["translate/core",{"_index":740,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{}}}],["translatemodule",{"_index":914,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["translateservice",{"_index":729,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["translations",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["true",{"_index":245,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["tslib",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["tupleswap",{"_index":741,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["tupleswap(location.location.coordinates",{"_index":752,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["two",{"_index":413,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["type",{"_index":52,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1105,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedef",{"_index":204,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["undefined",{"_index":512,"title":{},"body":{"components/ResultDataComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["unnecessary",{"_index":617,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["unset",{"_index":499,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["until",{"_index":770,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{}}}],["update",{"_index":555,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["updateareacomponents",{"_index":930,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["updateareacomponents(forecast",{"_index":974,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["updated",{"_index":615,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["updategraphs",{"_index":931,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["updategraphs(forecast",{"_index":979,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["updatequeryparam",{"_index":543,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["updatequeryparam(name",{"_index":573,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["updates",{"_index":618,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["upper",{"_index":256,"title":{},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastResponse.html":{},"injectables/ProphetForecastService.html":{}}}],["url",{"_index":196,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["url.queryparams[\"consumergroup",{"_index":315,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["url.queryparams[\"id",{"_index":235,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["url.queryparams[\"in",{"_index":234,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{}}}],["url.queryparams[\"is_active",{"_index":873,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["url.queryparams[\"is_real",{"_index":875,"title":{},"body":{"injectables/WaterRightsService.html":{}}}],["url.queryparams[\"key",{"_index":267,"title":{},"body":{"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterUsageForecastsService.html":{}}}],["url.queryparams[\"usage_above",{"_index":236,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["usage",{"_index":88,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["usage.displayname",{"_index":1003,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["usage.startyear",{"_index":1006,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["usage.usages.map((val",{"_index":1004,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["usageabove",{"_index":680,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["usages",{"_index":295,"title":{},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/ResultDataViewComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{},"miscellaneous/variables.html":{}}}],["use_api_url",{"_index":192,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["use_error_handler",{"_index":194,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{}}}],["use_error_handler.handler.toast",{"_index":248,"title":{},"body":{"injectables/ConsumersService.html":{},"injectables/WaterRightsService.html":{}}}],["use_loader",{"_index":193,"title":{},"body":{"injectables/ConsumersService.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"injectables/ProphetForecastService.html":{},"injectables/WaterRightsService.html":{},"injectables/WaterUsageForecastsService.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["used",{"_index":585,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["val",{"_index":1008,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["valid",{"_index":734,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["valid.from.toisostring().slice(0",{"_index":769,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["valid.until.toisostring().slice(0",{"_index":771,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["validtostring",{"_index":728,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["validtostring(data?.valid",{"_index":788,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["validtostring(valid",{"_index":732,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["value",{"_index":65,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"injectables/ConsumersService.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values(forecast.consumergroup.forecast",{"_index":1017,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["values(forecast.consumergroup.reference",{"_index":1014,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["values(forecast.municipal.forecast",{"_index":1021,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["values(forecast.municipal.reference",{"_index":1020,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["var",{"_index":134,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["variable",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1109,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":372,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["version",{"_index":1103,"title":{},"body":{"properties.html":{}}}],["via",{"_index":688,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view",{"_index":321,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["view'},{'name",{"_index":140,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["view.component",{"_index":920,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["view.component.html",{"_index":322,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["view.component.ts",{"_index":320,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["view.component.ts:102",{"_index":587,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:104",{"_index":581,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:110",{"_index":625,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:12",{"_index":334,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:127",{"_index":623,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:135",{"_index":631,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:14",{"_index":333,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:140",{"_index":629,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:145",{"_index":560,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:151",{"_index":558,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:16",{"_index":328,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:163",{"_index":574,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:183",{"_index":552,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:23",{"_index":332,"title":{},"body":{"components/MapSelectViewComponent.html":{}}}],["view.component.ts:263",{"_index":564,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:31",{"_index":330,"title":{},"body":{"components/MapSelectViewComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["view.component.ts:56",{"_index":594,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:65",{"_index":596,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:68",{"_index":601,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:70",{"_index":582,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:73",{"_index":605,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:81",{"_index":609,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:90",{"_index":613,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:93",{"_index":591,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:96",{"_index":579,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view.component.ts:99",{"_index":592,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["view/consumer",{"_index":10,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["view/map",{"_index":319,"title":{},"body":{"components/MapSelectViewComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["view/result",{"_index":350,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["view/water",{"_index":726,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"coverage.html":{}}}],["viewchild",{"_index":80,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["viewchild(\"map",{"_index":95,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["viewchild('map",{"_index":75,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterRightDetailComponent.html":{}}}],["viewchildren",{"_index":387,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["viewchildren(basechartdirective",{"_index":384,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["views/detail",{"_index":917,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["views/map",{"_index":919,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["views/result",{"_index":921,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["void",{"_index":59,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{}}}],["volume",{"_index":828,"title":{},"body":{"components/WaterRightDetailComponent.html":{}}}],["water",{"_index":150,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"interfaces/Datapoint.html":{},"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"injectables/ProphetForecastService.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"miscellaneous/variables.html":{}}}],["water_usage",{"_index":517,"title":{},"body":{"components/ResultDataComponent.html":{},"miscellaneous/enumerations.html":{}}}],["waterright",{"_index":746,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{}}}],["waterrightdetailcomponent",{"_index":149,"title":{"components/WaterRightDetailComponent.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["waterrightdetailrawresponse",{"_index":870,"title":{},"body":{"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["waterrightdetailresponse",{"_index":736,"title":{},"body":{"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["waterrighticon",{"_index":636,"title":{},"body":{"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["waterrightlocationresponse",{"_index":866,"title":{},"body":{"injectables/WaterRightsService.html":{},"miscellaneous/typealiases.html":{}}}],["waterrightservice",{"_index":548,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["waterrightsservice",{"_index":545,"title":{"injectables/WaterRightsService.html":{}},"body":{"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"injectables/WaterRightsService.html":{},"coverage.html":{}}}],["waterusageforecastsmodule",{"_index":896,"title":{"modules/WaterUsageForecastsModule.html":{}},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{},"modules.html":{}}}],["waterusageforecastsresultdatacomponent",{"_index":152,"title":{"components/WaterUsageForecastsResultDataComponent.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"components/MapSelectViewComponent.html":{},"components/ProphetForecastResultDataComponent.html":{},"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"components/WaterRightDetailComponent.html":{},"modules/WaterUsageForecastsModule.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"coverage.html":{},"index.html":{}}}],["waterusageforecastsservice",{"_index":307,"title":{"injectables/WaterUsageForecastsService.html":{}},"body":{"interfaces/ForecastEntry.html":{},"interfaces/ForecastResponse-1.html":{},"interfaces/ForecastUsage.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageForecastsService.html":{},"coverage.html":{}}}],["waterusageforecasttype",{"_index":508,"title":{},"body":{"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["waterusageforecasttype.linear",{"_index":522,"title":{},"body":{"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["waterusageforecasttype.logarithmic",{"_index":524,"title":{},"body":{"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["waterusageforecasttype.polynomial",{"_index":523,"title":{},"body":{"components/ResultDataComponent.html":{},"components/ResultDataViewComponent.html":{}}}],["waterusagehistoryservice",{"_index":45,"title":{"injectables/WaterUsageHistoryService.html":{}},"body":{"components/ConsumerDetailComponent.html":{},"injectables/WaterUsageHistoryService.html":{},"coverage.html":{}}}],["weight",{"_index":494,"title":{},"body":{"components/ProphetForecastResultDataComponent.html":{}}}],["whether",{"_index":583,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["wisdom",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wisdominterface",{"_index":1083,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wisdommodule",{"_index":915,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{}}}],["within",{"_index":232,"title":{},"body":{"injectables/ConsumersService.html":{}}}],["work",{"_index":960,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["x",{"_index":1005,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["y",{"_index":1007,"title":{},"body":{"components/WaterUsageForecastsResultDataComponent.html":{}}}],["year",{"_index":109,"title":{},"body":{"components/ConsumerDetailComponent.html":{},"components/WaterUsageForecastsResultDataComponent.html":{},"injectables/WaterUsageHistoryService.html":{}}}],["yes",{"_index":1041,"title":{},"body":{"injectables/WaterUsageForecastsService.html":{}}}],["zeitraum",{"_index":723,"title":{},"body":{"components/ResultDataViewComponent.html":{}}}],["zoom",{"_index":905,"title":{},"body":{"modules/WaterUsageForecastsModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ConsumerDetailComponent.html":{"url":"components/ConsumerDetailComponent.html","title":"component - ConsumerDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConsumerDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-consumer-detail\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./consumer-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                chartData\n                            \n                            \n                                    Private\n                                coordinates\n                            \n                            \n                                historyData\n                            \n                            \n                                id\n                            \n                            \n                                    \n                                mapComponent\n                            \n                            \n                                    Optional\n                                marker\n                            \n                            \n                                name\n                            \n                            \n                                recordedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleConsumerData\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, cService: ConsumersService, hService: WaterUsageHistoryService, breadcrumbs: BreadcrumbsService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cService\n                                                  \n                                                        \n                                                                        ConsumersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hService\n                                                  \n                                                        \n                                                                        WaterUsageHistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breadcrumbs\n                                                  \n                                                        \n                                                                    BreadcrumbsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleConsumerData\n                        \n                    \n                \n            \n            \n                \nhandleConsumerData(data: ConsumerLocationsResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ConsumerLocationsResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chartData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartData\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        coordinates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject<>\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([NaN, NaN])\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        historyData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HistoryResponse\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mapComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MapComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('map')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        marker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Marker\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recordedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ViewChild, Component, OnInit, AfterViewInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ChartData} from \"chart.js\";\nimport {MapComponent, Marker, BreadcrumbsService} from \"common\";\nimport {BehaviorSubject} from \"rxjs\";\n\nimport {\n  ConsumerLocationsResponse,\n  ConsumersService\n} from \"../../../services/consumers.service\";\nimport {\n  HistoryResponse,\n  WaterUsageHistoryService\n} from \"../../../services/water-usage-history.service\";\nimport {consumerIcon} from \"../../../map-icons\";\n\n@Component({\n  selector: 'lib-consumer-detail',\n  templateUrl: './consumer-detail.component.html'\n})\nexport class ConsumerDetailComponent implements OnInit, AfterViewInit {\n\n  name: string = \"\";\n  id: string = \"\";\n  historyData: HistoryResponse = [];\n  marker?: Marker;\n  private coordinates: BehaviorSubject =\n    new BehaviorSubject([NaN, NaN]);\n  chartData?: ChartData;\n  recordedAt: string = \"\";\n\n  @ViewChild(\"map\") mapComponent!: MapComponent;\n\n  constructor(\n    private route: ActivatedRoute,\n    private cService: ConsumersService,\n    private hService: WaterUsageHistoryService,\n    private breadcrumbs: BreadcrumbsService\n  ) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params[\"consumer\"];\n    this.cService.fetchConsumers({id: [this.id]})\n      .subscribe(data => this.handleConsumerData(data ?? []));\n    this.hService.fetchWaterUsageHistory(this.id)\n      .subscribe(data => {\n        this.chartData = {\n          datasets: [{\n            data: data.map(({usage}) => usage),\n            backgroundColor: \"blue\"\n          }],\n          labels: data.map(({year}) => year)\n        };\n        this.recordedAt = data[data.length - 1].recordedAt.toISOString().substring(0, 10);\n      });\n  }\n\n  handleConsumerData(data: ConsumerLocationsResponse) {\n    for (let {id, name, geojson} of data) {\n      this.name = name;\n      this.breadcrumbs.set(2, {\n        text: name,\n        link: \"#\"\n      });\n      let coordinates = [geojson.coordinates[1], geojson.coordinates[0]] as [number, number];\n      this.marker = {\n        coordinates,\n        tooltip: name,\n        icon: consumerIcon\n      }\n      this.coordinates.next(coordinates);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.coordinates.subscribe(coordinates => {\n      if (coordinates[0] && coordinates[1]) this.mapComponent.map!.flyTo(coordinates);\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n{{name}}\n{{id}}\n\n\n  \n    \n  \n\n\n\n  \n    \n      \n    \n  \n  \n    {{recordedAt}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{name}}{{id}}                                {{recordedAt}}  '\n    var COMPONENTS = [{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ProphetForecastResultDataComponent', 'selector': 'lib-prophet-forecast-result-data'},{'name': 'ResultDataComponent', 'selector': '[lib-result-data]'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'},{'name': 'WaterUsageForecastsResultDataComponent', 'selector': 'lib-water-usage-forecasts-result-data'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConsumerDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsumersService.html":{"url":"injectables/ConsumersService.html","title":"injectable - ConsumersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsumersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/consumers.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for receiving consumers data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchConsumers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/consumers.service.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular HTTP client.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular router.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchConsumers\n                        \n                    \n                \n            \n            \n                \nfetchConsumers(params: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/consumers.service.ts:72\n                \n            \n\n\n            \n                \n                    Fetches a list of consumer locations from the API.\n  this value.\n  IDs.\n  locations.\n  emits the API response or null if no consumers were found.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        \nThe parameters to include in the API request.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable that\nemits the API response or null if no consumers were found.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER, USE_ERROR_HANDLER} from \"common\";\nimport {Observable} from \"rxjs\";\n\n/** The base URL for the consumers API endpoint. */\nconst API_URL = \"consumers/\";\n\n/**\n * The shape of the response returned by the\n * {@link ConsumersService#fetchConsumers} method.\n * @typedef {Object} ConsumerLocationsResponse\n * @property {number} id - The ID of the consumer.\n * @property {string} name - The name of the consumer.\n * @property {Object} geojson - The GeoJSON object representing the location of\n *   the consumer.\n * @property {Object} geojson.crs - The coordinate reference system (CRS) of\n *   the GeoJSON object.\n * @property {string} geojson.crs.type - The type of CRS.\n * @property {Object} geojson.crs.properties - The properties of the CRS.\n * @property {string} geojson.crs.properties.name - The name of the CRS.\n * @property {string} geojson.type - The type of GeoJSON object.\n * @property {Array} geojson.coordinates - The coordinates of the GeoJSON\n *   object.\n * @property {number} geojson.coordinates[0] - The longitude of the\n *   coordinates.\n * @property {number} geojson.coordinates[1] - The latitude of the coordinates.\n */\nexport type ConsumerLocationsResponse = {\n  id: number,\n  name: string,\n  geojson: {\n    crs: {\n      type: \"name\",\n      properties: {\n        name: string\n      }\n    },\n    type: \"Point\",\n    coordinates: [number, number]\n  }\n}[];\n\n/** Service for receiving consumers data. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsumersService {\n  /**\n   * Constructor.\n   * @param {HttpClient} http - The Angular HTTP client.\n   * @param {Router} router - The Angular router.\n   */\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  /**\n   * Fetches a list of consumer locations from the API.\n   * @param {Object} params - The parameters to include in the API request.\n   * @param {number} params.usageAbove - Only return consumers with usage above\n   *   this value.\n   * @param {string[]} params.id - Only return consumers with the specified\n   *   IDs.\n   * @param {string[]} params.in - Only return consumers within the specified\n   *   locations.\n   * @returns {Observable} An observable that\n   *   emits the API response or `null` if no consumers were found.\n   */\n  fetchConsumers(params: Partial = {}): Observable {\n    let url = this.router.parseUrl(API_URL);\n    if (params.in) url.queryParams[\"in\"] = params.in;\n    if (params.id) url.queryParams[\"id\"] = params.id;\n    if (params.usageAbove) url.queryParams[\"usage_above\"] = params.usageAbove;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n        .set(USE_ERROR_HANDLER, USE_ERROR_HANDLER.handler.TOAST)\n    }) as Observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Datapoint.html":{"url":"interfaces/Datapoint.html","title":"interface - Datapoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Datapoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/prophet-forecast.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ds\n                                        \n                                \n                                \n                                        \n                                            forecast\n                                        \n                                \n                                \n                                        \n                                            lower\n                                        \n                                \n                                \n                                        \n                                            upper\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ds:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forecast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forecast:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lower\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lower:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        upper\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        upper:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\nconst API_URL = \"prophet-forecast/\";\n\n/** Possible forecast calculation methods. */\nexport enum ForecastType {\n  PROPHET = \"prophet\"\n}\n\nexport interface Datapoint {\n  ds: string,\n  lower: number,\n  forecast: number,\n  upper: number\n}\n\nexport interface ForecastResponse {\n  lowMigrationPrognosis: Datapoint[],\n  mediumMigrationPrognosis: Datapoint[],\n  highMigrationPrognosis: Datapoint[]\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProphetForecastService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(key: string): Observable {\n    let url = this.router.parseUrl(API_URL);\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastEntry.html":{"url":"interfaces/ForecastEntry.html","title":"interface - ForecastEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/water-usage-forecasts.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            forecast\n                                        \n                                \n                                \n                                        \n                                            reference\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        forecast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forecast:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\n/** Route of the API access. */\nconst API_URL = \"water-usage-forecasts\";\n\n/** Possible forecast calculation methods. */\nexport enum ForecastType {\n  LOGARITHMIC = \"logarithmic\",\n  LINEAR = \"linear\",\n  POLYNOMIAL = \"polynomial\"\n}\n\n/** Interface for the data received from the server. */\nexport interface ForecastResponse {\n  /**\n   * The results in accumulated form so that the client doesn't have to\n   * calculate it itself.\n   */\n  accumulations: {\n    /** Accumulations by consumer group. */\n    consumerGroup: ForecastEntry,\n    /** Accumulations by municipal. */\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastResponse.html":{"url":"interfaces/ForecastResponse.html","title":"interface - ForecastResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/prophet-forecast.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            highMigrationPrognosis\n                                        \n                                \n                                \n                                        \n                                            lowMigrationPrognosis\n                                        \n                                \n                                \n                                        \n                                            mediumMigrationPrognosis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        highMigrationPrognosis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highMigrationPrognosis:         Datapoint[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Datapoint[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lowMigrationPrognosis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lowMigrationPrognosis:         Datapoint[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Datapoint[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mediumMigrationPrognosis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mediumMigrationPrognosis:         Datapoint[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Datapoint[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\nconst API_URL = \"prophet-forecast/\";\n\n/** Possible forecast calculation methods. */\nexport enum ForecastType {\n  PROPHET = \"prophet\"\n}\n\nexport interface Datapoint {\n  ds: string,\n  lower: number,\n  forecast: number,\n  upper: number\n}\n\nexport interface ForecastResponse {\n  lowMigrationPrognosis: Datapoint[],\n  mediumMigrationPrognosis: Datapoint[],\n  highMigrationPrognosis: Datapoint[]\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProphetForecastService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(key: string): Observable {\n    let url = this.router.parseUrl(API_URL);\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastResponse-1.html":{"url":"interfaces/ForecastResponse-1.html","title":"interface - ForecastResponse-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/water-usage-forecasts.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the data received from the server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accumulations\n                                        \n                                \n                                \n                                        \n                                            partials\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accumulations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accumulations:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The results in accumulated form so that the client doesn't have to\ncalculate it itself.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        partials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        partials:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\n/** Route of the API access. */\nconst API_URL = \"water-usage-forecasts\";\n\n/** Possible forecast calculation methods. */\nexport enum ForecastType {\n  LOGARITHMIC = \"logarithmic\",\n  LINEAR = \"linear\",\n  POLYNOMIAL = \"polynomial\"\n}\n\n/** Interface for the data received from the server. */\nexport interface ForecastResponse {\n  /**\n   * The results in accumulated form so that the client doesn't have to\n   * calculate it itself.\n   */\n  accumulations: {\n    /** Accumulations by consumer group. */\n    consumerGroup: ForecastEntry,\n    /** Accumulations by municipal. */\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastUsage.html":{"url":"interfaces/ForecastUsage.html","title":"interface - ForecastUsage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForecastUsage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/water-usage-forecasts.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            endYear\n                                        \n                                \n                                \n                                        \n                                            startYear\n                                        \n                                \n                                \n                                        \n                                            usages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\n/** Route of the API access. */\nconst API_URL = \"water-usage-forecasts\";\n\n/** Possible forecast calculation methods. */\nexport enum ForecastType {\n  LOGARITHMIC = \"logarithmic\",\n  LINEAR = \"linear\",\n  POLYNOMIAL = \"polynomial\"\n}\n\n/** Interface for the data received from the server. */\nexport interface ForecastResponse {\n  /**\n   * The results in accumulated form so that the client doesn't have to\n   * calculate it itself.\n   */\n  accumulations: {\n    /** Accumulations by consumer group. */\n    consumerGroup: ForecastEntry,\n    /** Accumulations by municipal. */\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapSelectViewComponent.html":{"url":"components/MapSelectViewComponent.html","title":"component - MapSelectViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapSelectViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/views/map-select-view/map-select-view.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-map-select-view\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./map-select-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                keys\n                            \n                            \n                                Resolution\n                            \n                            \n                                selectionReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mapSelection\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breadcrumbs: BreadcrumbsService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/lib/views/map-select-view/map-select-view.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breadcrumbs\n                                                  \n                                                        \n                                                                    BreadcrumbsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mapSelection\n                        \n                    \n                \n            \n            \n                \nmapSelection(selection: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/map-select-view/map-select-view.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/map-select-view/map-select-view.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        keys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/map-select-view/map-select-view.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Resolution\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Resolution\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/map-select-view/map-select-view.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/map-select-view/map-select-view.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Resolution, BreadcrumbsService} from \"common\";\n\n@Component({\n  selector: 'lib-map-select-view',\n  templateUrl: './map-select-view.component.html'\n})\nexport class MapSelectViewComponent implements OnInit {\n\n  // imported resolution from the map component\n  Resolution = Resolution;\n\n  keys?: string[];\n\n  selectionReady = false;\n\n  constructor(\n    private breadcrumbs: BreadcrumbsService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.breadcrumbs.set(0, {\n      icon: \"calendar\",\n      text: \"water-usage-forecasts.breadcrumbs.water-consumption-prognosis\",\n      link: \"/water-usage-forecasts\"\n    })\n  }\n\n  mapSelection(\n    selection: {keys: string[]}\n  ) {\n    this.keys = selection.keys;\n    this.selectionReady = !!selection.keys.length;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n  \n    \n      \n        \n      \n      water-usage-forecasts.map-select.get-results\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        water-usage-forecasts.map-select.get-results      '\n    var COMPONENTS = [{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ProphetForecastResultDataComponent', 'selector': 'lib-prophet-forecast-result-data'},{'name': 'ResultDataComponent', 'selector': '[lib-result-data]'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'},{'name': 'WaterUsageForecastsResultDataComponent', 'selector': 'lib-water-usage-forecasts-result-data'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapSelectViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProphetForecastResultDataComponent.html":{"url":"components/ProphetForecastResultDataComponent.html","title":"component - ProphetForecastResultDataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProphetForecastResultDataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/views/result-data-view/result-data/prophet-forecast-result-data/prophet-forecast-result-data.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-prophet-forecast-result-data\n            \n\n\n\n            \n                styleUrls\n                ./prophet-forecast-result-data.component.css\n            \n\n\n\n            \n                templateUrl\n                ./prophet-forecast-result-data.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                chartElements\n                            \n                            \n                                data\n                            \n                            \n                                    Readonly\n                                PrognosisVariant\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chartLabelUpdate\n                            \n                            \n                                    Private\n                                fetchData\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                onLabelChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                mapKeyNames\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ProphetForecastService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/views/result-data-view/result-data/prophet-forecast-result-data/prophet-forecast-result-data.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ProphetForecastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/views/result-data-view/result-data/prophet-forecast-result-data/prophet-forecast-result-data.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapKeyNames\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/lib/views/result-data-view/result-data/prophet-forecast-result-data/prophet-forecast-result-data.component.ts:43\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartLabelUpdate\n                        \n                    \n                \n            \n            \n                \nchartLabelUpdate(chart: Chart, variant: PrognosisVariant)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data/prophet-forecast-result-data/prophet-forecast-result-data.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                            Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    variant\n                                    \n                                                PrognosisVariant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        fetchData\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchData(key: string | string[])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data/prophet-forecast-result-data/prophet-forecast-result-data.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data/prophet-forecast-result-data/prophet-forecast-result-data.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLabelChange\n                        \n                    \n                \n            \n            \n                \nonLabelChange(event: Event, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data/prophet-forecast-result-data/prophet-forecast-result-data.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        chartElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren(BaseChartDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data/prophet-forecast-result-data/prophet-forecast-result-data.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data/prophet-forecast-result-data/prophet-forecast-result-data.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        PrognosisVariant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : PrognosisVariant\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data/prophet-forecast-result-data/prophet-forecast-result-data.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  OnChanges,\n  SimpleChanges,\n  ViewChildren,\n  Component,\n  OnInit,\n  Input,\n  QueryList,\n  ElementRef\n} from \"@angular/core\";\nimport {\n  Chart,\n  ActiveElement,\n  LegendElement,\n  ChartEvent,\n  LegendItem\n} from \"chart.js\";\nimport {BaseChartDirective} from \"ng2-charts\";\nimport {firstValueFrom} from \"rxjs\";\n\nimport {\n  ForecastResponse,\n  ProphetForecastService\n} from \"../../../../services/prophet-forecast.service\";\n\nenum PrognosisVariant {\n  LOW,\n  MEDIUM,\n  HIGH\n}\n\n@Component({\n  selector: 'lib-prophet-forecast-result-data',\n  templateUrl: './prophet-forecast-result-data.component.html',\n  styleUrls: [\"./prophet-forecast-result-data.component.css\"]\n})\nexport class ProphetForecastResultDataComponent implements OnChanges {\n\n  @Input()\n  key!: string | string[];\n\n  @Input()\n  mapKeyNames: Record = {};\n\n  @ViewChildren(BaseChartDirective)\n  chartElements!: QueryList;\n\n  readonly PrognosisVariant = PrognosisVariant;\n\n  data: [string, any][] = [];\n\n  constructor(private service: ProphetForecastService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['key']) this.fetchData(this.key);\n  }\n\n  chartLabelUpdate(chart: Chart, variant: PrognosisVariant) {\n    let settingsArray = (() => {\n      switch (variant) {\n        case PrognosisVariant.LOW:\n          return [true, true, false, false, false, false];\n        case PrognosisVariant.MEDIUM:\n          return [false, false, true, true, false, false];\n        case PrognosisVariant.HIGH:\n          return [false, false, false, false, true, true];\n      }\n    })();\n    // doing it in two runs makes the transition look a bit smoother\n    for (let [i, show] of settingsArray.entries()) {\n      if (show) chart.show(i);\n    }\n    for (let [i, show] of settingsArray.entries()) {\n      if (!show) chart.hide(i);\n    }\n  }\n\n  onLabelChange(event: Event, index: number) {\n    let variant = +(event.target as any).dataset.prognosisVariant as PrognosisVariant;\n    let chart = this.chartElements.get(index)!.chart!;\n    this.chartLabelUpdate(chart, variant);\n  }\n\n  private fetchData(key: string | string[]): void {\n    let res: Promise[] = [];\n    for (let currentKey of [key].flat()) {\n      res.push(firstValueFrom(this.service.fetchForecastData(currentKey)).then(res => [currentKey, res]))\n    }\n    Promise.all(res).then(res => {\n      this.data = [];\n      for (let [key, entry] of res) {\n        let labels = [];\n\n        let lowMigrationPrognosisData = {\n          bounds: [] as [number, number][],\n          forecast: [] as number[]\n        };\n        for (let el of entry.lowMigrationPrognosis) {\n          labels.push(el.ds.split(\"-\")[0]);\n          lowMigrationPrognosisData.bounds.push([el.lower, el.upper]);\n          lowMigrationPrognosisData.forecast.push(el.forecast);\n        }\n\n        let mediumMigrationPrognosisData = {\n          bounds: [] as [number, number][],\n          forecast: [] as number[]\n        };\n        for (let el of entry.mediumMigrationPrognosis) {\n          mediumMigrationPrognosisData.bounds.push([el.lower, el.upper]);\n          mediumMigrationPrognosisData.forecast.push(el.forecast);\n        }\n\n        let highMigrationPrognosisData = {\n          bounds: [] as [number, number][],\n          forecast: [] as number[]\n        };\n        for (let el of entry.highMigrationPrognosis) {\n          highMigrationPrognosisData.bounds.push([el.lower, el.upper]);\n          highMigrationPrognosisData.forecast.push(el.forecast);\n        }\n\n        let chartDataset = [\n          {\n            type: \"scatter\",\n            data: lowMigrationPrognosisData.forecast,\n            borderColor: \"#A37A00\",\n            borderWidth: 2,\n            pointStyle: \"line\",\n            grouped: false,\n            hidden: true\n          },\n          {\n            type: \"bar\",\n            data: lowMigrationPrognosisData.bounds,\n            backgroundColor: \"#FFBF00\",\n            grouped: false,\n            hidden: true\n          },\n          {\n            type: \"scatter\",\n            data: mediumMigrationPrognosisData.forecast,\n            borderColor: \"#0A758F\",\n            borderWidth: 2,\n            pointStyle: \"line\",\n            grouped: false\n          },\n          {\n            type: \"bar\",\n            data: mediumMigrationPrognosisData.bounds,\n            backgroundColor: \"#10BBE5\",\n            grouped: false\n          },\n          {\n            type: \"scatter\",\n            data: highMigrationPrognosisData.forecast,\n            borderColor: \"#B00058\",\n            borderWidth: 2,\n            pointStyle: \"line\",\n            grouped: false,\n            hidden: true\n          },\n          {\n            type: \"bar\",\n            data: highMigrationPrognosisData.bounds,\n            backgroundColor: \"#FF0D86\",\n            grouped: false,\n            hidden: true\n          },\n        ];\n        this.data.push([key, {\n          labels,\n          datasets: chartDataset\n        }]);\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{mapKeyNames[data[0]]}}\n    \n  \n  \n    \n      \n        \n        \n          \n            {{'water-usage-forecasts.prophet.low-migration-prognosis' | translate}}\n          \n        \n        \n        \n          \n            {{'water-usage-forecasts.prophet.medium-migration-prognosis' | translate}}\n          \n        \n        \n        \n          \n            {{'water-usage-forecasts.prophet.high-migration-prognosis' | translate}}\n          \n        \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./prophet-forecast-result-data.component.css\n                \n                input[type=radio] {\n  opacity: 0\n}\n\ninput[type=\"radio\"] + label span.tag {\n  color: black;\n  text-decoration-thickness: 0.2em;\n  text-decoration-color: black;\n  text-decoration-line: line-through;\n  font-weight: bold;\n  cursor: pointer;\n}\n\ninput[type=\"radio\"]:checked + label span.tag {\n  text-decoration-line: unset;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{mapKeyNames[data[0]]}}                                                        {{\\'water-usage-forecasts.prophet.low-migration-prognosis\\' | translate}}                                                        {{\\'water-usage-forecasts.prophet.medium-migration-prognosis\\' | translate}}                                                        {{\\'water-usage-forecasts.prophet.high-migration-prognosis\\' | translate}}                                            '\n    var COMPONENTS = [{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ProphetForecastResultDataComponent', 'selector': 'lib-prophet-forecast-result-data'},{'name': 'ResultDataComponent', 'selector': '[lib-result-data]'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'},{'name': 'WaterUsageForecastsResultDataComponent', 'selector': 'lib-water-usage-forecasts-result-data'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProphetForecastResultDataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProphetForecastService.html":{"url":"injectables/ProphetForecastService.html","title":"injectable - ProphetForecastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProphetForecastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/prophet-forecast.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchForecastData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/prophet-forecast.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchForecastData\n                        \n                    \n                \n            \n            \n                \nfetchForecastData(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/prophet-forecast.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\nconst API_URL = \"prophet-forecast/\";\n\n/** Possible forecast calculation methods. */\nexport enum ForecastType {\n  PROPHET = \"prophet\"\n}\n\nexport interface Datapoint {\n  ds: string,\n  lower: number,\n  forecast: number,\n  upper: number\n}\n\nexport interface ForecastResponse {\n  lowMigrationPrognosis: Datapoint[],\n  mediumMigrationPrognosis: Datapoint[],\n  highMigrationPrognosis: Datapoint[]\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProphetForecastService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(key: string): Observable {\n    let url = this.router.parseUrl(API_URL);\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultDataComponent.html":{"url":"components/ResultDataComponent.html","title":"component - ResultDataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResultDataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/views/result-data-view/result-data/result-data.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [lib-result-data]\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./result-data.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _method\n                            \n                            \n                                ForecastService\n                            \n                            \n                                    Optional\n                                service\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                mapKeyNames\n                            \n                            \n                                method\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    method\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/views/result-data-view/result-data/result-data.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapKeyNames\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/lib/views/result-data-view/result-data/result-data.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        method\n                    \n                \n                \n                    \n                        Type :     WaterUsageForecastType | ProphetForecastType\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/views/result-data-view/result-data/result-data.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _method\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WaterUsageForecastType | ProphetForecastType\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data/result-data.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ForecastService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ForecastService\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data/result-data.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ForecastService\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data/result-data.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        method\n                    \n                \n\n                \n                    \n                        getmethod()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/views/result-data-view/result-data/result-data.component.ts:43\n                                \n                            \n\n                \n                    \n                        setmethod(method: WaterUsageForecastType | ProphetForecastType)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/views/result-data-view/result-data/result-data.component.ts:25\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            method\n                                                    \n                                                            \n                                                                        WaterUsageForecastType | ProphetForecastType\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input} from \"@angular/core\";\n\nimport {\n  ForecastType as ProphetForecastType\n} from \"../../../services/prophet-forecast.service\";\nimport {\n  ForecastType as WaterUsageForecastType\n} from \"../../../services/water-usage-forecasts.service\";\n\nenum ForecastService {\n  WATER_USAGE,\n  PROPHET\n}\n\n@Component({\n  selector: '[lib-result-data]',\n  templateUrl: './result-data.component.html'\n})\nexport class ResultDataComponent {\n\n  @Input(\"key\")\n  key!: string | string[];\n\n  @Input(\"method\")\n  set method(method: WaterUsageForecastType | ProphetForecastType) {\n    switch (method) {\n      case WaterUsageForecastType.LINEAR:\n      case WaterUsageForecastType.POLYNOMIAL:\n      case WaterUsageForecastType.LOGARITHMIC:\n        this.service = ForecastService.WATER_USAGE;\n        break;\n      case ProphetForecastType.PROPHET:\n        this.service = ForecastService.PROPHET;\n        break;\n    }\n\n    this._method = method;\n  };\n\n  @Input()\n  mapKeyNames: Record = {}\n\n  get method() {\n    return this._method;\n  }\n\n  private _method!: WaterUsageForecastType | ProphetForecastType;\n\n  service?: ForecastService = undefined;\n  ForecastService = ForecastService;\n\n}\n\n    \n\n    \n        \n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ProphetForecastResultDataComponent', 'selector': 'lib-prophet-forecast-result-data'},{'name': 'ResultDataComponent', 'selector': '[lib-result-data]'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'},{'name': 'WaterUsageForecastsResultDataComponent', 'selector': 'lib-water-usage-forecasts-result-data'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultDataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultDataViewComponent.html":{"url":"components/ResultDataViewComponent.html","title":"component - ResultDataViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResultDataViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/views/result-data-view/result-data-view.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component displaying the Results from the water right forecasts.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                DoCheck\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-result-data-view\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./result-data-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                areaComponents\n                            \n                            \n                                console\n                            \n                            \n                                didFinish\n                            \n                            \n                                mapKeyNames\n                            \n                            \n                                mapResolution\n                            \n                            \n                                markers\n                            \n                            \n                                Object\n                            \n                            \n                                regressionMethod\n                            \n                            \n                                    Optional\n                                response\n                            \n                            \n                                selection\n                            \n                            \n                                    Private\n                                selectionDiffer\n                            \n                            \n                                selectionEntries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fetchData\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setBreadCrumbs\n                            \n                            \n                                    Private\n                                updateQueryParam\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    method\n                                \n                                \n                                    key\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(waterRightService: WaterRightsService, consumersService: ConsumersService, route: ActivatedRoute, router: Router, mapService: MapService, breadcrumbs: BreadcrumbsService, keyValueDiffers: KeyValueDiffers)\n                    \n                \n                        \n                            \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        waterRightService\n                                                  \n                                                        \n                                                                        WaterRightsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for water rights data\n\n                                                        \n                                                \n                                                \n                                                        consumersService\n                                                  \n                                                        \n                                                                        ConsumersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for consumer data\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Current route\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router\n\n                                                        \n                                                \n                                                \n                                                        mapService\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for map interactions\n\n                                                        \n                                                \n                                                \n                                                        breadcrumbs\n                                                  \n                                                        \n                                                                    BreadcrumbsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to set breadcrumbs\n\n                                                        \n                                                \n                                                \n                                                        keyValueDiffers\n                                                  \n                                                        \n                                                                    KeyValueDiffers\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        fetchData\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchData(key: string | string[], method: RegressionMethod)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:183\n                \n            \n\n\n            \n                \n                    Fetch data from the service to display.\nWhen the data is received this will automatically update all displayed\ndata.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key(s) to fetch data for\n\n                                    \n                                \n                                \n                                    method\n                                    \n                                                RegressionMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Forecast calculation method\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoCheck\n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:151\n                \n            \n\n\n            \n                \n                    Update selectionEntries if selection changed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:145\n                \n            \n\n\n            \n                \n                    Call this#fetchData.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setBreadCrumbs\n                        \n                    \n                \n            \n            \n                \n                    \n                    setBreadCrumbs(key: string | string[])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:263\n                \n            \n\n\n            \n                \n                    Set breadcrumbs.\nThis will set a generic breadcrumb text if more than one area was selected.\nIf only one area was selected the name of the selection will be set.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Selected keys to create correct link\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateQueryParam\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateQueryParam(name: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:163\n                \n            \n\n\n            \n                \n                    Update a query parameter by requesting a router navigate.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of the parameter to update\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        value of the parameter to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        areaComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:96\n                        \n                    \n\n            \n                \n                    Area components the results are based on.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        console\n                        \n                    \n                \n            \n                \n                    \n                        Default value : console\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        didFinish\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:70\n                        \n                    \n\n            \n                \n                    Whether the request is done, used for the loader.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapKeyNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:102\n                        \n                    \n\n            \n                \n                    The names of displayed shapes mapped by their keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapResolution\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Resolution | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:93\n                        \n                    \n\n            \n                \n                    Resolution for the map selection.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:99\n                        \n                    \n\n            \n                \n                    Array of all markers placed on the map.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Object\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:56\n                        \n                    \n\n            \n                \n                    Re-export of Object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        regressionMethod\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RegressionMethod\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:65\n                        \n                    \n\n            \n                \n                    Merged regression methods for WaterRightsService and\nProphetForecastService.\nFully includes ForecastType.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        response\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:68\n                        \n                    \n\n            \n                \n                    The response from the forecast service.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {\n    state: [],\n    district: [],\n    administration: [],\n    municipal: []\n  }\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:73\n                        \n                    \n\n            \n                \n                    Selected elements, used to display in info box.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectionDiffer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     KeyValueDiffer\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:81\n                        \n                    \n\n            \n                \n                    Differ to detect if selection changes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionEntries\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.entries(this.selection)\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data-view.component.ts:90\n                        \n                    \n\n            \n                \n                    Object entries of selection.\nWill only be updated when selection has an update.\nThis reduces unnecessary updates in the gui and allowing selecting\nsomething of the selection.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        method\n                    \n                \n\n                \n                    \n                        getmethod()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:127\n                                \n                            \n                    \n                        \n                                Get selected forecast calculation method.\n\n\n                        \n                    \n\n                \n                    \n                        setmethod(m: RegressionMethod)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:110\n                                \n                            \n                    \n                        \n                                Set the forecast calculation method.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            m\n                                                    \n                                                            \n                                                                            RegressionMethod\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Method for forecasting water usages\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n\n                \n                    \n                        getkey()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:140\n                                \n                            \n                    \n                        \n                                Get selected area keys.\n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setkey(k: string | string[])\n                    \n                \n                            \n                                \n                                    Defined in src/lib/views/result-data-view/result-data-view.component.ts:135\n                                \n                            \n                    \n                        \n                                Set the area key.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            k\n                                                    \n                                                            \n                                                                        string | string[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Key for the area.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  DoCheck,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  OnInit\n} from \"@angular/core\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {MapComponent, Resolution, BreadcrumbsService, MapService} from \"common\";\nimport {combineLatestWith} from \"rxjs/operators\";\n\nimport {\n  ForecastType as ProphetForecastType\n} from \"../../services/prophet-forecast.service\";\nimport {\n  ForecastResponse,\n  ForecastType as WaterUsageForecastType\n} from \"../../services/water-usage-forecasts.service\";\nimport {WaterRightsService} from \"../../services/water-rights.service\";\nimport {ConsumersService} from \"../../services/consumers.service\";\nimport {consumerIcon, waterRightIcon} from \"../../map-icons\";\n\nexport type RegressionMethod = WaterUsageForecastType | ProphetForecastType;\nexport const RegressionMethod = {...WaterUsageForecastType, ...ProphetForecastType};\n\n/** Component displaying the Results from the water right forecasts. */\n@Component({\n  selector: 'lib-result-data-view',\n  templateUrl: './result-data-view.component.html'\n})\nexport class ResultDataViewComponent implements OnInit, DoCheck {\n\n  /**\n   * Constructor.\n   * @param waterRightService Service for water rights data\n   * @param consumersService Service for consumer data\n   * @param route Current route\n   * @param router Router\n   * @param mapService Service for map interactions\n   * @param breadcrumbs Service to set breadcrumbs\n   */\n  constructor(\n    private waterRightService: WaterRightsService,\n    private consumersService: ConsumersService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private mapService: MapService,\n    private breadcrumbs: BreadcrumbsService,\n    private keyValueDiffers: KeyValueDiffers\n  ) {}\n\n  /**\n   * Re-export of {@link Object}.\n   * @internal\n   */\n  Object = Object;\n\n  /**\n   * Merged regression methods for {@link WaterRightsService} and\n   * {@link ProphetForecastService}.\n   *\n   * Fully includes {@link ForecastType}.\n   * @internal\n   */\n  regressionMethod = RegressionMethod;\n\n  /** The response from the forecast service. */\n  response?: Promise;\n  /** Whether the request is done, used for the loader. */\n  didFinish = false;\n\n  /** Selected elements, used to display in info box. */\n  selection: Record = {\n    state: [],\n    district: [],\n    administration: [],\n    municipal: []\n  };\n\n  /** Differ to detect if {@link selection} changes. */\n  private selectionDiffer!: KeyValueDiffer;\n\n  /**\n   * Object entries of {@link selection}.\n   * Will only be updated when {@link selection} has an update.\n   *\n   * This reduces unnecessary updates in the gui and allowing selecting\n   * something of the selection.\n   */\n  selectionEntries = Object.entries(this.selection);\n\n  /** Resolution for the map selection. */\n  mapResolution: Resolution | null = null;\n\n  /** Area components the results are based on. */\n  areaComponents?: [string, string][];\n\n  /** Array of all markers placed on the map. */\n  markers: MapComponent[\"inputMarkers\"] = [];\n\n  /** The names of displayed shapes mapped by their keys. */\n  mapKeyNames: Record = {};\n\n  console = console;\n\n  /**\n   * Set the forecast calculation method.\n   * @param m Method for forecasting water usages\n   */\n  set method(m: RegressionMethod) {\n    this.updateQueryParam(\"method\", m);\n\n    // update map resolution based on used method\n    switch (m) {\n      case ProphetForecastType.PROPHET:\n        this.mapResolution = null;\n        break;\n      case WaterUsageForecastType.LINEAR:\n      case WaterUsageForecastType.LOGARITHMIC:\n      case WaterUsageForecastType.POLYNOMIAL:\n        this.mapResolution = Resolution.MUNICIPAL;\n        break;\n    }\n  }\n\n  /** Get selected forecast calculation method. */\n  get method() {\n    return this.route.snapshot.queryParams[\"method\"] ?? RegressionMethod.LINEAR;\n  }\n\n  /**\n   * Set the area key.\n   * @param k Key for the area.\n   */\n  set key(k: string | string[]) {\n    this.updateQueryParam(\"key\", k);\n  }\n\n  /** Get selected area keys. */\n  get key(): string[] {\n    return this.route.snapshot.queryParams[\"key\"];\n  }\n\n  /** Call {@link this#fetchData}. */\n  ngOnInit(): void {\n    this.selectionDiffer = this.keyValueDiffers.find(this.selection).create();\n    this.fetchData(this.key, this.method);\n  }\n\n  /** Update {@link selectionEntries} if {@link selection} changed. */\n  ngDoCheck(): void {\n    if (this.selectionDiffer.diff(this.selection)) {\n      this.selectionEntries = Object.entries(this.selection);\n    }\n  }\n\n  /**\n   * Update a query parameter by requesting a router navigate.\n   * @param name name of the parameter to update\n   * @param value value of the parameter to update\n   * @private\n   */\n  private updateQueryParam(name: string, value: any) {\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: Object.assign(\n        {},\n        this.route.snapshot.queryParams,\n        Object.fromEntries([[name, value]])\n      )\n    }).catch(console.error);\n  }\n\n  /**\n   * Fetch data from the service to display.\n   *\n   * When the data is received this will automatically update all displayed\n   * data.\n   * @param key Key(s) to fetch data for\n   * @param method Forecast calculation method\n   * @private\n   */\n  private fetchData(\n    key: string | string[],\n    method: RegressionMethod\n  ): void {\n    // TODO: split this into multiple subroutines\n    this.mapService.fetchLayerData(null, [key].flat())\n      .then(data => {\n        let selection: this[\"selection\"] = {\n          state: [],\n          district: [],\n          administration: [],\n          municipal: []\n        };\n        for (let shape of data.shapes) {\n          let res = Resolution.toEnum(shape.key.length);\n          if (!res) continue;\n          selection[res].push([shape.key, shape.name]);\n        }\n        this.selection = selection;\n        this.setBreadCrumbs(key);\n      });\n    this.waterRightService.fetchWaterRightLocations({\n        in: [key].flat(),\n        isReal: true\n      }\n    ).pipe(combineLatestWith(this.consumersService.fetchConsumers({\n      in: [key].flat(),\n      // TODO: move this value elsewhere\n      usageAbove: 10000\n    }))).subscribe(data => {\n      let markers = [];\n\n      // iterate over locations of water rights\n      for (let marker of data[0] ?? []) {\n        markers.push({\n          coordinates: [\n            // markers used here a calculated via location\n            marker.geojson!.coordinates[1],\n            marker.geojson!.coordinates[0]\n          ] as [number, number],\n          tooltip: `\n            Name: ${marker.name}\n            Water Right No: ${marker.waterRight}\n          `,\n          icon: waterRightIcon,\n          onClick: () => this.router.navigate(\n            [\"detail\", \"water-right\", marker.waterRight],\n            {relativeTo: this.route.parent}\n          )\n        });\n      }\n\n      // iterate over consumer locations\n      for (let marker of data[1] ?? []) {\n        markers.push({\n          coordinates: [\n            marker.geojson.coordinates[1],\n            marker.geojson.coordinates[0]\n          ] as [number, number],\n          tooltip: marker.name,\n          icon: consumerIcon,\n          onClick: () => this.router.navigate(\n            [\"detail\", \"consumer\", marker.id],\n            {relativeTo: this.route.parent}\n          )\n        });\n      }\n\n      this.markers = markers;\n    });\n  }\n\n  /**\n   * Set breadcrumbs.\n   *\n   * This will set a generic breadcrumb text if more than one area was selected.\n   * If only one area was selected the name of the selection will be set.\n   * @param key Selected keys to create correct link\n   * @private\n   */\n  private setBreadCrumbs(key: string | string[]) {\n    let selected: any = [];\n    for (let key of Object.keys(this.selection)) {\n      for (let entry of this.selection[key as Resolution]) {\n        selected.push([key, entry[1]]);\n      }\n    }\n    let text: string | [string, string];\n    if (selected.length > 1) text = \"water-usage-forecasts.breadcrumbs.map-results\";\n    else text = [\"common.map.resolution.\" + selected[0][0], selected[0][1]];\n\n    this.breadcrumbs.set(1, {\n      text,\n      link: \"/water-usage-forecasts/results\",\n      query: {key}\n    });\n  }\n}\n\n    \n\n    \n        \n\n{{\"water-usage-forecasts.result-data.results\" | translate}}\n\n\n  \n    \n  \n\n\n\n  \n    \n      \n        \n          {{\"water-usage-forecasts.result-data.selection\" | translate}}\n        \n      \n      \n        \n          \n            \n              \n                \n                  \n                    {{\"common.map.resolution.\" + sel[0] | translate}}\n                  \n                  \n                    {{shape[1]}} ({{shape[0]}})\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n  \n    \n      \n        Parameter\n      \n      \n        \n          Prognosemodell\n          \n            \n              \n                Regression\n                \n              \n            \n              \n            \n            \n              \n                Regression\n              \n            \n          \n        \n        \n          Methode\n          \n            \n              \n                \n                  {{\"water-usage-forecasts.parameter.\" + method | translate}}\n                \n                \n              \n            \n              \n            \n            \n              \n                \n                  {{\"water-usage-forecasts.parameter.linear\" | translate}}\n                \n                \n                  {{\"water-usage-forecasts.parameter.logarithmic\" | translate}}\n                \n                \n                  {{\"water-usage-forecasts.parameter.polynomial\" | translate}}\n                \n                \n                  {{\"prophet\"}}\n                \n              \n            \n          \n        \n        \n          Zeitraum\n\n        \n        -->\n      \n    \n  \n\n\n\n\n 1\">\n  \n    \n      water-usage-forecasts.result-data.branches\n    \n  \n  \n    \n      \n        {{component[1]}}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{\"water-usage-forecasts.result-data.results\" | translate}}                                      {{\"water-usage-forecasts.result-data.selection\" | translate}}                                                                                                                      {{\"common.map.resolution.\" + sel[0] | translate}}                                                        {{shape[1]}} ({{shape[0]}})                                                                                                              Parameter                              Prognosemodell                                                    Regression                                                                                                              Regression                                                              Methode                                                                      {{\"water-usage-forecasts.parameter.\" + method | translate}}                                                                                                                                                {{\"water-usage-forecasts.parameter.linear\" | translate}}                                                  {{\"water-usage-forecasts.parameter.logarithmic\" | translate}}                                                  {{\"water-usage-forecasts.parameter.polynomial\" | translate}}                                                  {{\"prophet\"}}                                                                              Zeitraum                -->             1\">            water-usage-forecasts.result-data.branches                          {{component[1]}}            '\n    var COMPONENTS = [{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ProphetForecastResultDataComponent', 'selector': 'lib-prophet-forecast-result-data'},{'name': 'ResultDataComponent', 'selector': '[lib-result-data]'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'},{'name': 'WaterUsageForecastsResultDataComponent', 'selector': 'lib-water-usage-forecasts-result-data'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultDataViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WaterRightDetailComponent.html":{"url":"components/WaterRightDetailComponent.html","title":"component - WaterRightDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WaterRightDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-water-right-detail\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./water-right-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bounds\n                            \n                            \n                                data\n                            \n                            \n                                    \n                                map\n                            \n                            \n                                markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                validToString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, service: WaterRightsService, translate: TranslateService, breadcrumbs: BreadcrumbsService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        WaterRightsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breadcrumbs\n                                                  \n                                                        \n                                                                    BreadcrumbsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validToString\n                        \n                    \n                \n            \n            \n                \nvalidToString(valid)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valid\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bounds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject<>\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([[NaN, NaN], [NaN, NaN]])\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WaterRightDetailResponse\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MapComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('map')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Marker[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ViewChild, Component, OnInit, AfterViewInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {tupleSwap, MapComponent, Marker, BreadcrumbsService} from \"common\";\nimport {LeafletMouseEvent} from \"leaflet\";\nimport {BehaviorSubject} from \"rxjs\";\n\nimport {\n  WaterRightDetailResponse,\n  WaterRightsService\n} from \"../../../services/water-rights.service\";\nimport {waterRightIcon} from \"../../../map-icons\";\n\n@Component({\n  selector: 'lib-water-right-detail',\n  templateUrl: './water-right-detail.component.html'\n})\nexport class WaterRightDetailComponent implements OnInit, AfterViewInit {\n\n  data: WaterRightDetailResponse = {};\n  markers: Marker[] = [];\n\n  @ViewChild(\"map\") map!: MapComponent;\n  bounds: BehaviorSubject =\n    new BehaviorSubject([[NaN, NaN], [NaN, NaN]]);\n\n  constructor(\n    private route: ActivatedRoute,\n    private service: WaterRightsService,\n    private translate: TranslateService,\n    private breadcrumbs: BreadcrumbsService\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.bounds.subscribe(bounds => this.map.map?.flyToBounds(bounds));\n  }\n\n  ngOnInit(): void {\n    this.breadcrumbs.set(2, {\n      text: \"water-usage-forecasts.breadcrumbs.water-right\",\n      link: \"#\"\n    });\n\n    let waterRight = this.route.snapshot.params[\"waterRight\"];\n    this.service.fetchWaterRightDetails(waterRight)\n      .subscribe(data => {\n        this.data = data;\n\n        let bounds: [number[], number[]] = [[], []];\n        let markers: Marker[] = [];\n        for (let location of data.locations ?? []) {\n          if (!location?.location) continue;\n          if (!location.real) continue;\n          let coordinates = tupleSwap(location.location.coordinates);\n          bounds[0].push(coordinates[0]);\n          bounds[1].push(coordinates[1]);\n          markers.push({\n            coordinates,\n            tooltip: location.name,\n            onClick: (evt: LeafletMouseEvent) => {\n              document.getElementById(`${location?.id}`)?.scrollIntoView({\n                behavior: \"smooth\"\n              })\n            },\n            icon: waterRightIcon\n          });\n        }\n        this.markers = markers;\n        this.bounds.next([\n          [Math.max(...bounds[0]), Math.max(...bounds[1])],\n          [Math.min(...bounds[0]), Math.min(...bounds[1])]\n        ]);\n      });\n  }\n\n  validToString(valid: this[\"data\"][\"valid\"]): string | undefined {\n    let since = this.translate.instant(\"water-usage-forecasts.water-right.since\");\n    if (!valid) return undefined;\n    let from = valid.from.toISOString().slice(0, 10);\n    let until = valid.until.toISOString().slice(0, 10);\n    if (until !== \"9999-12-31\") {\n      return `${from} - ${until}`;\n    }\n    return `${since} ${from}`;\n  }\n\n}\n\n    \n\n    \n        \n\n\n  {{\"water-usage-forecasts.water-right.water-right\" | translate}}\n\n\n\n  \n    \n  \n\n\n\n  \n    {{data.legalTitle}}\n    \n      {{data.subject}}\n      \n        {{\"water-usage-forecasts.water-right.granting-authority\" | translate}}:\n        {{data?.grantingAuthority}}\n        \n      \n      \n        {{\"water-usage-forecasts.water-right.registering-authority\" | translate}}:\n        {{data?.registeringAuthority}}\n        \n      \n      \n        {{\"water-usage-forecasts.water-right.water-authority\" | translate}}:\n        {{data?.waterAuthority}}\n        \n      \n      \n        {{\"water-usage-forecasts.water-right.address\" | translate}}:\n        {{data?.address}}\n        \n      \n      \n        {{\"water-usage-forecasts.water-right.bailee\" | translate}}:\n        {{data?.bailee}}\n        \n      \n    \n  \n  \n    \n      \n        \n          \n            \n              \n            \n            {{validToString(data?.valid)}}\n          \n        \n      \n    \n    \n      \n        \n          \n            \n              \n            \n            {{data?.dateOfChange?.toISOString()?.slice(0, 10)}}\n          \n        \n        \n          \n            \n            \n            \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          {{\"water-usage-forecasts.water-right.internal-id\" | translate}}\n        \n        {{data?.id}}\n      \n    \n    \n      \n        \n          {{\"water-usage-forecasts.water-right.water-right-no\" | translate}}\n        \n        {{data?.no}}\n      \n    \n    \n      \n        \n          {{\"water-usage-forecasts.water-right.external-id\" | translate}}\n        \n        {{data?.externalId}}\n      \n    \n    \n      \n        \n          {{\"water-usage-forecasts.water-right.file-reference\" | translate}}\n        \n        {{data?.fileReference}}\n      \n    \n  \n\n\n\n  \n    \n      {{\"water-usage-forecasts.water-right.locations\" | translate}}\n    \n  \n  \n    \n      \n        \n          {{location?.name}}\n        \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n      \n      \n        {{location?.legalScope}}\n      \n      \n        \n          \n            \n              \n                {{\"water-usage-forecasts.water-right.internal-id\" | translate}}\n              \n              {{location?.id}}\n            \n          \n          \n            \n              \n                {{\"water-usage-forecasts.water-right.location-no\" | translate}}\n              \n              {{location?.no}}\n            \n          \n        \n      \n      \n        \n          {{\"water-usage-forecasts.water-right.withdrawal\" | translate}}\n        \n        \n          \n            \n              \n                \n                  {{rate.amount}} {{rate.unit}}/{{rate.duration}}\n                \n              \n            \n          \n        \n      \n      \n        \n          {{\"water-usage-forecasts.water-right.fluid-discharge\" | translate}}\n        \n        \n          \n            \n              \n                \n                  {{rate.amount}} {{rate.unit}}/{{rate.duration}}\n                \n              \n            \n          \n        \n      \n      \n        \n          {{\"water-usage-forecasts.water-right.irrigation-area\" | translate}}\n        \n        \n          \n            \n              \n                {{location?.irrigationArea?.amount}} {{location?.irrigationArea?.unit}}\n              \n            \n          \n        \n      \n      \n        \n          {{\"water-usage-forecasts.water-right.rain-supplement\" | translate}}\n        \n        \n          \n            \n              \n                {{location?.rainSupplement?.amount}} {{location?.rainSupplement?.unit}}\n                /{{location?.rainSupplement?.duration}}\n              \n            \n          \n        \n      \n      \n        \n          \n          \n            {{\"water-usage-forecasts.water-right.basin-no\" | translate}}\n            {{location?.basinNo?.key}} {{location?.basinNo?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.county\" | translate}}\n            {{location?.county}}\n          \n          \n            {{\"water-usage-forecasts.water-right.eu-survey-area\" | translate}}\n            {{location?.euSurveyArea?.key}} {{location?.euSurveyArea?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.field\" | translate}}\n            {{location?.field}}\n          \n          \n            {{\"water-usage-forecasts.water-right.groundwater-volume\" | translate}}\n            {{location?.groundwaterVolume}}\n          \n          \n            {{\"water-usage-forecasts.water-right.local-sub-district\" | translate}}\n            {{location?.localSubDistrict}}\n          \n          \n            {{\"water-usage-forecasts.water-right.maintenance-association\" | translate}}\n            {{location?.maintenanceAssociation?.key}} {{location?.maintenanceAssociation?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.municipal-area\" | translate}}\n            {{location?.municipalArea?.key}} {{location?.municipalArea?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.plot\" | translate}}\n            {{location?.plot}}\n          \n          \n            {{\"water-usage-forecasts.water-right.rivershed\" | translate}}\n            {{location?.rivershed}}\n          \n          \n            {{\"water-usage-forecasts.water-right.serial-no\" | translate}}\n            {{location?.serialNo}}\n          \n          \n            {{\"water-usage-forecasts.water-right.top-map-1:25000\" | translate}}\n            {{location?.topMap1to25000?.key}} {{location?.topMap1to25000?.name}}\n          \n          \n            {{\"water-usage-forecasts.water-right.water-body\" | translate}}\n            {{location?.waterBody}}\n          \n          \n            {{\"water-usage-forecasts.water-right.flood-area\" | translate}}\n            {{location?.floodArea}}\n          \n          \n            {{\"water-usage-forecasts.water-right.water-protection-area\" | translate}}\n            {{location?.waterProtectionArea}}\n          \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      {{\"water-usage-forecasts.water-right.annotation\" | translate}}\n    \n  \n  \n    {{data?.annotation}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{\"water-usage-forecasts.water-right.water-right\" | translate}}              {{data.legalTitle}}          {{data.subject}}              {{\"water-usage-forecasts.water-right.granting-authority\" | translate}}:        {{data?.grantingAuthority}}                            {{\"water-usage-forecasts.water-right.registering-authority\" | translate}}:        {{data?.registeringAuthority}}                            {{\"water-usage-forecasts.water-right.water-authority\" | translate}}:        {{data?.waterAuthority}}                            {{\"water-usage-forecasts.water-right.address\" | translate}}:        {{data?.address}}                            {{\"water-usage-forecasts.water-right.bailee\" | translate}}:        {{data?.bailee}}                                                                                                    {{validToString(data?.valid)}}                                                                                                          {{data?.dateOfChange?.toISOString()?.slice(0, 10)}}                                                                                                                                    {{\"water-usage-forecasts.water-right.internal-id\" | translate}}                {{data?.id}}                                      {{\"water-usage-forecasts.water-right.water-right-no\" | translate}}                {{data?.no}}                                      {{\"water-usage-forecasts.water-right.external-id\" | translate}}                {{data?.externalId}}                                      {{\"water-usage-forecasts.water-right.file-reference\" | translate}}                {{data?.fileReference}}                        {{\"water-usage-forecasts.water-right.locations\" | translate}}                                    {{location?.name}}                                                                                                                                            {{location?.legalScope}}                                                                        {{\"water-usage-forecasts.water-right.internal-id\" | translate}}                            {{location?.id}}                                                                          {{\"water-usage-forecasts.water-right.location-no\" | translate}}                            {{location?.no}}                                                            {{\"water-usage-forecasts.water-right.withdrawal\" | translate}}                                                                                      {{rate.amount}} {{rate.unit}}/{{rate.duration}}                                                                                          {{\"water-usage-forecasts.water-right.fluid-discharge\" | translate}}                                                                                      {{rate.amount}} {{rate.unit}}/{{rate.duration}}                                                                                          {{\"water-usage-forecasts.water-right.irrigation-area\" | translate}}                                                                    {{location?.irrigationArea?.amount}} {{location?.irrigationArea?.unit}}                                                                          {{\"water-usage-forecasts.water-right.rain-supplement\" | translate}}                                                                    {{location?.rainSupplement?.amount}} {{location?.rainSupplement?.unit}}                /{{location?.rainSupplement?.duration}}                                                                                                {{\"water-usage-forecasts.water-right.basin-no\" | translate}}            {{location?.basinNo?.key}} {{location?.basinNo?.name}}                                {{\"water-usage-forecasts.water-right.county\" | translate}}            {{location?.county}}                                {{\"water-usage-forecasts.water-right.eu-survey-area\" | translate}}            {{location?.euSurveyArea?.key}} {{location?.euSurveyArea?.name}}                                {{\"water-usage-forecasts.water-right.field\" | translate}}            {{location?.field}}                                {{\"water-usage-forecasts.water-right.groundwater-volume\" | translate}}            {{location?.groundwaterVolume}}                                {{\"water-usage-forecasts.water-right.local-sub-district\" | translate}}            {{location?.localSubDistrict}}                                {{\"water-usage-forecasts.water-right.maintenance-association\" | translate}}            {{location?.maintenanceAssociation?.key}} {{location?.maintenanceAssociation?.name}}                                {{\"water-usage-forecasts.water-right.municipal-area\" | translate}}            {{location?.municipalArea?.key}} {{location?.municipalArea?.name}}                                {{\"water-usage-forecasts.water-right.plot\" | translate}}            {{location?.plot}}                                {{\"water-usage-forecasts.water-right.rivershed\" | translate}}            {{location?.rivershed}}                                {{\"water-usage-forecasts.water-right.serial-no\" | translate}}            {{location?.serialNo}}                                {{\"water-usage-forecasts.water-right.top-map-1:25000\" | translate}}            {{location?.topMap1to25000?.key}} {{location?.topMap1to25000?.name}}                                {{\"water-usage-forecasts.water-right.water-body\" | translate}}            {{location?.waterBody}}                                {{\"water-usage-forecasts.water-right.flood-area\" | translate}}            {{location?.floodArea}}                                {{\"water-usage-forecasts.water-right.water-protection-area\" | translate}}            {{location?.waterProtectionArea}}                                                    {{\"water-usage-forecasts.water-right.annotation\" | translate}}            {{data?.annotation}}  '\n    var COMPONENTS = [{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ProphetForecastResultDataComponent', 'selector': 'lib-prophet-forecast-result-data'},{'name': 'ResultDataComponent', 'selector': '[lib-result-data]'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'},{'name': 'WaterUsageForecastsResultDataComponent', 'selector': 'lib-water-usage-forecasts-result-data'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WaterRightDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WaterRightsService.html":{"url":"injectables/WaterRightsService.html","title":"injectable - WaterRightsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WaterRightsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/water-rights.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchWaterRightDetails\n                            \n                            \n                                fetchWaterRightLocations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/water-rights.service.ts:116\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchWaterRightDetails\n                        \n                    \n                \n            \n            \n                \nfetchWaterRightDetails(no: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/water-rights.service.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    no\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchWaterRightLocations\n                        \n                    \n                \n            \n            \n                \nfetchWaterRightLocations(params: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/water-rights.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER, USE_ERROR_HANDLER} from \"common\";\nimport {map, Observable} from \"rxjs\";\n\nconst API_URL = \"water-rights/\";\n\nexport type WaterRightLocationResponse = {\n  name?: string,\n  id?: number,\n  waterRight: number,\n  active?: boolean,\n  real?: boolean,\n  geojson?: {\n    type: \"Point\",\n    coordinates: [number, number]\n  }\n}[];\n\nexport type WaterRightDetailResponse = Partial\n}>;\n\ntype WaterRightDetailRawResponse =\n  Omit &\n  Partial;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WaterRightsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchWaterRightLocations(params: Partial = {}): Observable {\n    let url = this.router.parseUrl(API_URL);\n    if (params.in) url.queryParams[\"in\"] = params.in;\n    if (params.isActive) url.queryParams[\"is_active\"] = params.isActive;\n    if (params.isReal) url.queryParams[\"is_real\"] = params.isReal;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n        .set(USE_ERROR_HANDLER, USE_ERROR_HANDLER.handler.TOAST)\n    });\n  }\n\n  fetchWaterRightDetails(no: number): Observable {\n    let url = this.router.createUrlTree([API_URL, \"details\", no]);\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }).pipe(map((res: WaterRightDetailRawResponse) => {\n      let cleaned = JSON.stringify(res)\n        .replace(/\"\\s*([^\"]+)\\s*\"/g, '\"$1\"')\n        .replace(/'\\s*([^']+)\\s*'/g, \"'$1'\")\n        .replace(/\"'([^'\"\\s:,]+)'\"/g, '\"$1\"')\n        .replace(/'\"([^'\"\\s:,]+)\"'/g, \"'$1'\")\n      return JSON.parse(cleaned) as WaterRightDetailRawResponse;\n    })).pipe(map((raw: WaterRightDetailRawResponse) => {\n      let res = JSON.parse(JSON.stringify(raw)) as WaterRightDetailResponse;\n      if (raw.dateOfChange) res.dateOfChange = new Date(raw.dateOfChange);\n      if (raw.valid) res.valid = {\n        from: new Date(raw.valid.from),\n        until: new Date(raw.valid.until)\n      };\n      return res;\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WaterUsageForecastsModule.html":{"url":"modules/WaterUsageForecastsModule.html","title":"module - WaterUsageForecastsModule","body":"\n                   \n\n\n\n\n    Modules\n    WaterUsageForecastsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WaterUsageForecastsModule\n\n\n\ncluster_WaterUsageForecastsModule_declarations\n\n\n\n\nConsumerDetailComponent\n\nConsumerDetailComponent\n\n\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule -->\n\nConsumerDetailComponent->WaterUsageForecastsModule\n\n\n\n\n\nMapSelectViewComponent\n\nMapSelectViewComponent\n\nWaterUsageForecastsModule -->\n\nMapSelectViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nProphetForecastResultDataComponent\n\nProphetForecastResultDataComponent\n\nWaterUsageForecastsModule -->\n\nProphetForecastResultDataComponent->WaterUsageForecastsModule\n\n\n\n\n\nResultDataComponent\n\nResultDataComponent\n\nWaterUsageForecastsModule -->\n\nResultDataComponent->WaterUsageForecastsModule\n\n\n\n\n\nResultDataViewComponent\n\nResultDataViewComponent\n\nWaterUsageForecastsModule -->\n\nResultDataViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterRightDetailComponent\n\nWaterRightDetailComponent\n\nWaterUsageForecastsModule -->\n\nWaterRightDetailComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterUsageForecastsResultDataComponent\n\nWaterUsageForecastsResultDataComponent\n\nWaterUsageForecastsModule -->\n\nWaterUsageForecastsResultDataComponent->WaterUsageForecastsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/water-usage-forecasts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConsumerDetailComponent\n                        \n                        \n                            MapSelectViewComponent\n                        \n                        \n                            ProphetForecastResultDataComponent\n                        \n                        \n                            ResultDataComponent\n                        \n                        \n                            ResultDataViewComponent\n                        \n                        \n                            WaterRightDetailComponent\n                        \n                        \n                            WaterUsageForecastsResultDataComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {WisdomModule} from \"common\";\nimport {NgChartsModule} from \"ng2-charts\";\n\nimport {\n  ConsumerDetailComponent\n} from \"./views/detail-view/consumer-detail/consumer-detail.component\";\nimport {\n  WaterRightDetailComponent\n} from \"./views/detail-view/water-right-detail/water-right-detail.component\";\nimport {\n  MapSelectViewComponent\n} from \"./views/map-select-view/map-select-view.component\";\nimport {\n  ResultDataViewComponent\n} from \"./views/result-data-view/result-data-view.component\";\nimport {\n  ResultDataComponent\n} from \"./views/result-data-view/result-data/result-data.component\";\nimport {\n  ProphetForecastResultDataComponent\n}\n  from \"./views/result-data-view/result-data/prophet-forecast-result-data/prophet-forecast-result-data.component\";\nimport {\n  WaterUsageForecastsResultDataComponent\n}\n  from \"./views/result-data-view/result-data/water-usage-forecasts-result-data/water-usage-forecasts-result-data.component\";\n\n@NgModule({\n  declarations: [\n    MapSelectViewComponent,\n    ResultDataViewComponent,\n    ConsumerDetailComponent,\n    WaterRightDetailComponent,\n    ResultDataComponent,\n    WaterUsageForecastsResultDataComponent,\n    ProphetForecastResultDataComponent\n  ],\n  imports: [\n    WisdomModule,\n    NgChartsModule,\n    CommonModule,\n    RouterModule,\n    TranslateModule\n  ]\n})\nexport class WaterUsageForecastsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WaterUsageForecastsResultDataComponent.html":{"url":"components/WaterUsageForecastsResultDataComponent.html","title":"component - WaterUsageForecastsResultDataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WaterUsageForecastsResultDataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/views/result-data-view/result-data/water-usage-forecasts-result-data/water-usage-forecasts-result-data.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-water-usage-forecasts-result-data\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./water-usage-forecasts-result-data.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consumerAreaData\n                            \n                            \n                                consumerGroupData\n                            \n                            \n                                refProgSplit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chartLegendFilter\n                            \n                            \n                                chartLegendOnClick\n                            \n                            \n                                    Private\n                                fetchData\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                updateAreaComponents\n                            \n                            \n                                    Private\n                                updateGraphs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colors\n                            \n                            \n                                key\n                            \n                            \n                                method\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                areaComponents\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: WaterUsageForecastsService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/views/result-data-view/result-data/water-usage-forecasts-result-data/water-usage-forecasts-result-data.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        WaterUsageForecastsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colors\n                    \n                \n                \n                    \n                        Type :     { \"Agriculture, Forestry, Fisheries\": string; Businesses: string; Household: string; \"Public Institution\": string; \"Small Businesses\": string; Tourism: string; }\n\n                    \n                \n                \n                    \n                        Default value : {\n    \"Agriculture, Forestry, Fisheries\": \"green\",\n    \"Businesses\": \"#bcd9e0\",\n    \"Household\": \"#ba4c43\",\n    \"Public Institution\": \"#5443ba\",\n    \"Small Businesses\": \"#a9c940\",\n    \"Tourism\": \"#e02abf\"\n  }\n                    \n                \n                        \n                            \n                                    Defined in src/lib/views/result-data-view/result-data/water-usage-forecasts-result-data/water-usage-forecasts-result-data.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/views/result-data-view/result-data/water-usage-forecasts-result-data/water-usage-forecasts-result-data.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        method\n                    \n                \n                \n                    \n                        Type :         ForecastType\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/views/result-data-view/result-data/water-usage-forecasts-result-data/water-usage-forecasts-result-data.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        areaComponents\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/views/result-data-view/result-data/water-usage-forecasts-result-data/water-usage-forecasts-result-data.component.ts:44\n                            \n                        \n                \n                    \n                        Area components the results are based on.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartLegendFilter\n                        \n                    \n                \n            \n            \n                \nchartLegendFilter(item: LegendItem, data: ChartData)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data/water-usage-forecasts-result-data/water-usage-forecasts-result-data.component.ts:140\n                \n            \n\n\n            \n                \n                    Show only the first half of chart legends.\nThis is used because two different datasets should work as one.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            LegendItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Legend item\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            ChartData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Chart data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartLegendOnClick\n                        \n                    \n                \n            \n            \n                \nchartLegendOnClick(event: ChartEvent, item: LegendItem, legend: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data/water-usage-forecasts-result-data/water-usage-forecasts-result-data.component.ts:154\n                \n            \n\n\n            \n                \n                    Function to toggle both datasets when one is clicked as the second part is\nfiltered out chartLegendFilter.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            ChartEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Click event on the legend\n\n                                    \n                                \n                                \n                                    item\n                                    \n                                            LegendItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Legend item\n\n                                    \n                                \n                                \n                                    legend\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The legend itself\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        fetchData\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchData(key: string | string[], method: ForecastType)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data/water-usage-forecasts-result-data/water-usage-forecasts-result-data.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    method\n                                    \n                                                ForecastType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data/water-usage-forecasts-result-data/water-usage-forecasts-result-data.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateAreaComponents\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAreaComponents(forecast)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data/water-usage-forecasts-result-data/water-usage-forecasts-result-data.component.ts:124\n                \n            \n\n\n            \n                \n                    Update area component graphs.\n                component\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    forecast\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Forecast data subset that is relevant for the area\ncomponent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateGraphs\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGraphs(forecast)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/views/result-data-view/result-data/water-usage-forecasts-result-data/water-usage-forecasts-result-data.component.ts:72\n                \n            \n\n\n            \n                \n                    Update the graphs on the component with the received forecast data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    forecast\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data received from service\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        consumerAreaData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data/water-usage-forecasts-result-data/water-usage-forecasts-result-data.component.ts:49\n                        \n                    \n\n            \n                \n                    Consumer area data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consumerGroupData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data/water-usage-forecasts-result-data/water-usage-forecasts-result-data.component.ts:47\n                        \n                    \n\n            \n                \n                    Consumer group data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refProgSplit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/lib/views/result-data-view/result-data/water-usage-forecasts-result-data/water-usage-forecasts-result-data.component.ts:51\n                        \n                    \n\n            \n                \n                    The year difference between the end year and the start year.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  OnChanges,\n  SimpleChanges,\n  Component,\n  EventEmitter,\n  Input,\n  Output\n} from \"@angular/core\";\nimport {ChartData, ChartEvent, LegendItem} from \"chart.js\";\nimport {stringToColor} from \"common\";\nimport {firstValueFrom} from \"rxjs\";\n\nimport {\n  ForecastResponse,\n  WaterUsageForecastsService,\n  ForecastType,\n  ForecastUsage\n} from \"../../../../services/water-usage-forecasts.service\";\n\n@Component({\n  selector: 'lib-water-usage-forecasts-result-data',\n  templateUrl: './water-usage-forecasts-result-data.component.html'\n})\nexport class WaterUsageForecastsResultDataComponent implements OnChanges {\n\n  @Input(\"key\")\n  key!: string | string[];\n\n  @Input(\"method\")\n  method!: ForecastType;\n\n  @Input(\"colors\")\n  colorMap = {\n    \"Agriculture, Forestry, Fisheries\": \"green\",\n    \"Businesses\": \"#bcd9e0\",\n    \"Household\": \"#ba4c43\",\n    \"Public Institution\": \"#5443ba\",\n    \"Small Businesses\": \"#a9c940\",\n    \"Tourism\": \"#e02abf\"\n  };\n\n  /** Area components the results are based on. */\n  @Output()\n  areaComponents: EventEmitter = new EventEmitter();\n\n  /** Consumer group data. */\n  consumerGroupData: any = null;\n  /** Consumer area data. */\n  consumerAreaData: any = null;\n  /** The year difference between the end year and the start year. */\n  refProgSplit: number = 0;\n\n  constructor(private service: WaterUsageForecastsService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['method'] || changes['key']) this.fetchData(this.key, this.method);\n  }\n\n  private fetchData(key: string | string[], method: ForecastType): void {\n    firstValueFrom(this.service.fetchForecastData(key, method))\n      .then(data => {\n        this.updateGraphs(data.accumulations);\n        this.updateAreaComponents(data.partials);\n      })\n  }\n\n  /**\n   * Update the graphs on the component with the received forecast data.\n   * @param forecast Data received from service\n   * @private\n   */\n  private updateGraphs(forecast: ForecastResponse[\"accumulations\"]): void {\n    let ref = Object.values(forecast.municipal.reference)[0];\n    if (ref) this.refProgSplit = ref.endYear - ref.startYear + 1;\n\n    let [minYear, maxYear] = [Infinity, -Infinity];\n\n    let mapUsage = (usage: ForecastUsage, type: \"forecast\" | \"reference\") => {\n      minYear = Math.min(usage.startYear, minYear);\n      maxYear = Math.max(usage.endYear, maxYear);\n\n      return {\n        label: usage.displayName,\n        data: usage.usages.map((val, i) => ({x: i + usage.startYear, y: val})),\n        borderWidth: 1,\n        borderSkipped: \"middle\",\n        borderColor: \"black\",\n        backgroundColor: stringToColor(usage.displayName, this.colorMap)\n      };\n    }\n\n    this.consumerGroupData = {\n      datasets: [\n        Object\n          .values(forecast.consumerGroup.reference)\n          .map(el => mapUsage(el, \"reference\")),\n        Object\n          .values(forecast.consumerGroup.forecast)\n          .map(el => mapUsage(el, \"forecast\"))\n      ].flat()\n    };\n    this.consumerAreaData = {\n      datasets: [\n        Object\n          .values(forecast.municipal.reference)\n          .map(el => mapUsage(el, \"reference\")),\n        Object\n          .values(forecast.municipal.forecast)\n          .map(el => mapUsage(el, \"forecast\"))\n      ].flat()\n    };\n    let labels: number[] = [];\n    for (let y = minYear; y = data.datasets.length / 2) return false;\n    item.lineWidth = 0;\n    return true;\n  }\n\n  /**\n   * Function to toggle both datasets when one is clicked as the second part is\n   * filtered out {@link chartLegendFilter}.\n   * @param event Click event on the legend\n   * @param item Legend item\n   * @param legend The legend itself\n   */\n  chartLegendOnClick(event: ChartEvent, item: LegendItem, legend: any) {\n    let chart = legend.chart;\n\n    let ptEvent = event.native as PointerEvent;\n    if (ptEvent.shiftKey || ptEvent.ctrlKey) {\n      for (let i in chart.data.datasets) {\n        chart.getDatasetMeta(i).hidden = true;\n      }\n    }\n\n    let toggle = (index: number) => {\n      chart.getDatasetMeta(index).hidden = !chart.getDatasetMeta(index).hidden;\n    }\n\n    toggle(item.datasetIndex!);\n    toggle(item.datasetIndex + legend.legendItems.length);\n\n    chart.update();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      water-usage-forecasts.result-data.consumer-groups\n    \n  \n  \n    \n      \n    \n  \n\n\n\n  \n    \n      water-usage-forecasts.result-data.areas\n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            water-usage-forecasts.result-data.consumer-groups                                    water-usage-forecasts.result-data.areas                        '\n    var COMPONENTS = [{'name': 'ConsumerDetailComponent', 'selector': 'lib-consumer-detail'},{'name': 'MapSelectViewComponent', 'selector': 'lib-map-select-view'},{'name': 'ProphetForecastResultDataComponent', 'selector': 'lib-prophet-forecast-result-data'},{'name': 'ResultDataComponent', 'selector': '[lib-result-data]'},{'name': 'ResultDataViewComponent', 'selector': 'lib-result-data-view'},{'name': 'WaterRightDetailComponent', 'selector': 'lib-water-right-detail'},{'name': 'WaterUsageForecastsResultDataComponent', 'selector': 'lib-water-usage-forecasts-result-data'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WaterUsageForecastsResultDataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WaterUsageForecastsService.html":{"url":"injectables/WaterUsageForecastsService.html","title":"injectable - WaterUsageForecastsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WaterUsageForecastsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/water-usage-forecasts.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to interact with server providing the data to display.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchForecastData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/water-usage-forecasts.service.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchForecastData\n                        \n                    \n                \n            \n            \n                \nfetchForecastData(key: string | string[], forecastModel: ForecastType, consumerGroup?: \"businesses\" | \"households_and_small_businesses\" | \"farming_forestry_fishing_industry\" | \"public_institutions\" | \"all\")\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/water-usage-forecasts.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    forecastModel\n                                    \n                                                ForecastType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    consumerGroup\n                                    \n                                            \"businesses\" | \"households_and_small_businesses\" | \"farming_forestry_fishing_industry\" | \"public_institutions\" | \"all\"\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {Observable} from \"rxjs\";\n\n/** Route of the API access. */\nconst API_URL = \"water-usage-forecasts\";\n\n/** Possible forecast calculation methods. */\nexport enum ForecastType {\n  LOGARITHMIC = \"logarithmic\",\n  LINEAR = \"linear\",\n  POLYNOMIAL = \"polynomial\"\n}\n\n/** Interface for the data received from the server. */\nexport interface ForecastResponse {\n  /**\n   * The results in accumulated form so that the client doesn't have to\n   * calculate it itself.\n   */\n  accumulations: {\n    /** Accumulations by consumer group. */\n    consumerGroup: ForecastEntry,\n    /** Accumulations by municipal. */\n    municipal: ForecastEntry\n  },\n  partials: {\n    consumerGroup: {\n      key: string,\n      name: string\n    },\n    municipal: ForecastResponse[\"partials\"][0][\"consumerGroup\"],\n    referenceUsages: {\n      equation: string,\n      float: number,\n      model: \"logarithmic\" | \"linear\" | \"polynomial\",\n      usages: {\n        amounts: number[],\n        end: number,\n        start: number\n      }\n    },\n    forecast: ForecastResponse[\"partials\"][0][\"referenceUsages\"]\n  }[]\n}\n\nexport interface ForecastEntry {\n  forecast: Record,\n  reference: Record\n}\n\nexport interface ForecastUsage {\n  displayName: string,\n  endYear: number,\n  startYear: number,\n  usages: number[]\n}\n\n/**\n * Service to interact with server providing the data to display.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WaterUsageForecastsService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  fetchForecastData(\n    key: string | string[],\n    forecastModel: ForecastType,\n    consumerGroup?:\n      \"businesses\" |\n      \"households_and_small_businesses\" |\n      \"farming_forestry_fishing_industry\" |\n      \"public_institutions\" |\n      \"all\"\n  ): Observable {\n    let url = this.router.parseUrl(`${API_URL}/${forecastModel}`);\n    if (consumerGroup) url.queryParams[\"consumerGroup\"] = consumerGroup;\n    url.queryParams[\"key\"] = key;\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, \"water-usage-forecasts.display.loading\")\n    }) as Observable;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WaterUsageHistoryService.html":{"url":"injectables/WaterUsageHistoryService.html","title":"injectable - WaterUsageHistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WaterUsageHistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/water-usage-history.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchWaterUsageHistory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/water-usage-history.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchWaterUsageHistory\n                        \n                    \n                \n            \n            \n                \nfetchWaterUsageHistory(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/water-usage-history.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpClient, HttpContext, HttpHeaders} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {USE_API_URL, USE_LOADER} from \"common\";\nimport {map, Observable} from \"rxjs\";\n\nconst API_URL = \"usages/\";\n\nexport type HistoryResponse = {\n  year: number,\n  usage: number,\n  recordedAt: Date\n}[];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WaterUsageHistoryService {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) { }\n\n  fetchWaterUsageHistory(id: string): Observable {\n    let url = this.router.parseUrl(API_URL + \"by-consumer/\" + id);\n    console.log(url.toString())\n    return this.http.get(url.toString(), {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      }),\n      responseType: \"json\",\n      context: new HttpContext()\n        .set(USE_API_URL, true)\n        .set(USE_LOADER, true)\n    }).pipe(map(\n      data => data.map(\n        ({\n           date,\n           amount,\n           recordedAt\n        }) => ({\n          year: new Date(date*1000).getFullYear(),\n          usage: amount,\n          recordedAt: new Date(recordedAt*1000)\n        })\n      )\n    ))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/map-icons.ts\n            \n            variable\n            consumerIcon\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/map-icons.ts\n            \n            variable\n            waterRightIcon\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/routing.ts\n            \n            variable\n            route\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/services/consumers.service.ts\n            \n            injectable\n            ConsumersService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/services/consumers.service.ts\n            \n            variable\n            API_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/services/prophet-forecast.service.ts\n            \n            injectable\n            ProphetForecastService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/services/prophet-forecast.service.ts\n            \n            interface\n            Datapoint\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/services/prophet-forecast.service.ts\n            \n            interface\n            ForecastResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/services/prophet-forecast.service.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/services/water-rights.service.ts\n            \n            injectable\n            WaterRightsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/services/water-rights.service.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/services/water-usage-forecasts.service.ts\n            \n            injectable\n            WaterUsageForecastsService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/lib/services/water-usage-forecasts.service.ts\n            \n            interface\n            ForecastEntry\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/services/water-usage-forecasts.service.ts\n            \n            interface\n            ForecastResponse\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/lib/services/water-usage-forecasts.service.ts\n            \n            interface\n            ForecastUsage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/services/water-usage-forecasts.service.ts\n            \n            variable\n            API_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/services/water-usage-history.service.ts\n            \n            injectable\n            WaterUsageHistoryService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/services/water-usage-history.service.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/views/detail-view/consumer-detail/consumer-detail.component.ts\n            \n            component\n            ConsumerDetailComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lib/views/detail-view/water-right-detail/water-right-detail.component.ts\n            \n            component\n            WaterRightDetailComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lib/views/map-select-view/map-select-view.component.ts\n            \n            component\n            MapSelectViewComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/views/result-data-view/result-data-view.component.ts\n            \n            component\n            ResultDataViewComponent\n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                src/lib/views/result-data-view/result-data-view.component.ts\n            \n            variable\n            RegressionMethod\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/views/result-data-view/result-data/prophet-forecast-result-data/prophet-forecast-result-data.component.ts\n            \n            component\n            ProphetForecastResultDataComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/views/result-data-view/result-data/result-data.component.ts\n            \n            component\n            ResultDataComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/views/result-data-view/result-data/water-usage-forecasts-result-data/water-usage-forecasts-result-data.component.ts\n            \n            component\n            WaterUsageForecastsResultDataComponent\n            \n                53 %\n                (8/15)\n            \n        \n        \n            \n                \n                src/public-api.ts\n            \n            variable\n            wisdomInterface\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.5.3\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ~16.1.0\n        \n            @angular/core : ~16.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ForecastService   (src/.../result-data.component.ts)\n                        \n                        \n                            ForecastType   (src/.../prophet-forecast.service.ts)\n                        \n                        \n                            ForecastType   (src/.../water-usage-forecasts.service.ts)\n                        \n                        \n                            PrognosisVariant   (src/.../prophet-forecast-result-data.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/views/result-data-view/result-data/result-data.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ForecastService\n                    \n                \n                        \n                            \n                                 WATER_USAGE\n                            \n                        \n                        \n                            \n                                 PROPHET\n                            \n                        \n            \n        \n\n    src/lib/services/prophet-forecast.service.ts\n    \n        \n            \n                \n                    \n                        \n                        ForecastType\n                    \n                \n                    \n                        \n                            Possible forecast calculation methods.\n\n                        \n                    \n                        \n                            \n                                 PROPHET\n                            \n                        \n                        \n                            \n                                Value : prophet\n                            \n                        \n            \n        \n\n    src/lib/services/water-usage-forecasts.service.ts\n    \n        \n            \n                \n                    \n                        \n                        ForecastType\n                    \n                \n                    \n                        \n                            Possible forecast calculation methods.\n\n                        \n                    \n                        \n                            \n                                 LOGARITHMIC\n                            \n                        \n                        \n                            \n                                Value : logarithmic\n                            \n                        \n                        \n                            \n                                 LINEAR\n                            \n                        \n                        \n                            \n                                Value : linear\n                            \n                        \n                        \n                            \n                                 POLYNOMIAL\n                            \n                        \n                        \n                            \n                                Value : polynomial\n                            \n                        \n            \n        \n\n    src/lib/views/result-data-view/result-data/prophet-forecast-result-data/prophet-forecast-result-data.component.ts\n    \n        \n            \n                \n                    \n                        \n                        PrognosisVariant\n                    \n                \n                        \n                            \n                                 LOW\n                            \n                        \n                        \n                            \n                                 MEDIUM\n                            \n                        \n                        \n                            \n                                 HIGH\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WaterUsageForecastsModule\n\n\n\ncluster_WaterUsageForecastsModule_declarations\n\n\n\n\nConsumerDetailComponent\n\nConsumerDetailComponent\n\n\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule\n\nWaterUsageForecastsModule -->\n\nConsumerDetailComponent->WaterUsageForecastsModule\n\n\n\n\n\nMapSelectViewComponent\n\nMapSelectViewComponent\n\nWaterUsageForecastsModule -->\n\nMapSelectViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nProphetForecastResultDataComponent\n\nProphetForecastResultDataComponent\n\nWaterUsageForecastsModule -->\n\nProphetForecastResultDataComponent->WaterUsageForecastsModule\n\n\n\n\n\nResultDataComponent\n\nResultDataComponent\n\nWaterUsageForecastsModule -->\n\nResultDataComponent->WaterUsageForecastsModule\n\n\n\n\n\nResultDataViewComponent\n\nResultDataViewComponent\n\nWaterUsageForecastsModule -->\n\nResultDataViewComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterRightDetailComponent\n\nWaterRightDetailComponent\n\nWaterUsageForecastsModule -->\n\nWaterRightDetailComponent->WaterUsageForecastsModule\n\n\n\n\n\nWaterUsageForecastsResultDataComponent\n\nWaterUsageForecastsResultDataComponent\n\nWaterUsageForecastsModule -->\n\nWaterUsageForecastsResultDataComponent->WaterUsageForecastsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        WaterUsageForecastsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConsumerLocationsResponse   (src/.../consumers.service.ts)\n                        \n                        \n                            HistoryResponse   (src/.../water-usage-history.service.ts)\n                        \n                        \n                            RegressionMethod   (src/.../result-data-view.component.ts)\n                        \n                        \n                            WaterRightDetailRawResponse   (src/.../water-rights.service.ts)\n                        \n                        \n                            WaterRightDetailResponse   (src/.../water-rights.service.ts)\n                        \n                        \n                            WaterRightLocationResponse   (src/.../water-rights.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/services/consumers.service.ts\n    \n    \n        \n            \n                \n                    \n                    ConsumerLocationsResponse\n                \n            \n            \n                \n                    The shape of the response returned by the\nConsumersService.fetchConsumers method.\n\n                \n            \n            \n                \n                        literal type[]\n\n                \n            \n        \n    \n    src/lib/services/water-usage-history.service.ts\n    \n    \n        \n            \n                \n                    \n                    HistoryResponse\n                \n            \n            \n                \n                        literal type[]\n\n                \n            \n        \n    \n    src/lib/views/result-data-view/result-data-view.component.ts\n    \n    \n        \n            \n                \n                    \n                    RegressionMethod\n                \n            \n            \n                \n                        WaterUsageForecastType | ProphetForecastType\n\n                \n            \n        \n    \n    src/lib/services/water-rights.service.ts\n    \n    \n        \n            \n                \n                    \n                    WaterRightDetailRawResponse\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WaterRightDetailResponse\n                \n            \n            \n                \n                        Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WaterRightLocationResponse\n                \n            \n            \n                \n                        literal type[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL   (src/.../consumers.service.ts)\n                        \n                        \n                            API_URL   (src/.../prophet-forecast.service.ts)\n                        \n                        \n                            API_URL   (src/.../water-rights.service.ts)\n                        \n                        \n                            API_URL   (src/.../water-usage-forecasts.service.ts)\n                        \n                        \n                            API_URL   (src/.../water-usage-history.service.ts)\n                        \n                        \n                            consumerIcon   (src/.../map-icons.ts)\n                        \n                        \n                            RegressionMethod   (src/.../result-data-view.component.ts)\n                        \n                        \n                            route   (src/.../routing.ts)\n                        \n                        \n                            waterRightIcon   (src/.../map-icons.ts)\n                        \n                        \n                            wisdomInterface   (src/.../public-api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/services/consumers.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"consumers/\"\n                    \n                \n\n            \n                \n                    The base URL for the consumers API endpoint.\n\n                \n            \n\n        \n    \n\n    src/lib/services/prophet-forecast.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"prophet-forecast/\"\n                    \n                \n\n\n        \n    \n\n    src/lib/services/water-rights.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"water-rights/\"\n                    \n                \n\n\n        \n    \n\n    src/lib/services/water-usage-forecasts.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"water-usage-forecasts\"\n                    \n                \n\n            \n                \n                    Route of the API access.\n\n                \n            \n\n        \n    \n\n    src/lib/services/water-usage-history.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"usages/\"\n                    \n                \n\n\n        \n    \n\n    src/lib/map-icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        consumerIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : icon({\n  iconUrl: \"https://unpkg.com/ionicons@5.5.2/dist/svg/business.svg\",\n  iconSize: [35, 35]\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        waterRightIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : icon({\n  iconUrl: \"https://unpkg.com/ionicons@5.5.2/dist/svg/water.svg\",\n  iconSize: [35, 35]\n})\n                    \n                \n\n\n        \n    \n\n    src/lib/views/result-data-view/result-data-view.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RegressionMethod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {...WaterUsageForecastType, ...ProphetForecastType}\n                    \n                \n\n\n        \n    \n\n    src/lib/routing.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route\n\n                    \n                \n                \n                    \n                        Default value : {\n  path: \"water-usage-forecasts\",\n  children: [\n    {\n      path: \"\",\n      component: MapSelectViewComponent,\n    },\n    {\n      path: \"results\",\n      component: ResultDataViewComponent,\n      data: {\n        redirectTo: \"/water-usage-forecasts\",\n        queryParams: \"key\"\n      },\n      canActivate: [QueryParameterGuard]\n    },\n    {\n      path: \"detail\",\n      children: [\n        {\n          path: \"\",\n          pathMatch: \"full\",\n          redirectTo: \"/water-usage-forecasts\"\n        },\n        {\n          path: \"water-right/:waterRight\",\n          component: WaterRightDetailComponent\n        },\n        {\n          path: \"consumer/:consumer\",\n          component: ConsumerDetailComponent\n        }\n      ]\n    },\n    {\n      path: \"**\",\n      redirectTo: \"/water-usage-forecasts\"\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        wisdomInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WisdomInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n  route,\n  scopes: [\"water-usage-forecasts\"],\n  translations: {\n    de_DE,\n    en_US\n  }\n}\n                    \n                \n\n            \n                \n                    Public interface for the wisdom core to inject this module.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
